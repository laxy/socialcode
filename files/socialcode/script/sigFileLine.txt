main$:$/var/www/html/src/git-master/upload-pack.c$:$791$:$int (int argc, char **argv)
strcmp$:$NA$:$NA$:$NA
strlen$:$NA$:$NA$:$NA
encode_85$:$/var/www/html/src/git-master/base85.c$:$79$:$void (char *buf, const unsigned char *data, int bytes)
say$:$NA$:$NA$:$NA
say1$:$NA$:$NA$:$NA
printf$:$NA$:$NA$:$NA
decode_85$:$/var/www/html/src/git-master/base85.c$:$40$:$int (char *dst, const char *buffer, int len)
prep_base85$:$/var/www/html/src/git-master/base85.c$:$29$:$void (void)
ARRAY_SIZE$:$NA$:$NA$:$NA
say2$:$NA$:$NA$:$NA
error$:$/var/www/html/src/git-master/git-compat-util.h$:$330$:$int (const char *err, ...)
va_start$:$NA$:$NA$:$NA
error_routine$:$/var/www/html/src/git-master/usage.c$:$60$:$void (*) (const char *err, va_list params)
va_end$:$NA$:$NA$:$NA
read_cache$:$NA$:$NA$:$NA
lstat$:$NA$:$NA$:$NA
strerror$:$NA$:$NA$:$NA
ce_match_stat$:$NA$:$NA$:$NA
usage$:$/var/www/html/src/git-master/usage.c$:$88$:$void NORETURN (const char *err)
usagef$:$/var/www/html/src/git-master/git-compat-util.h$:$327$:$NORETURN void (const char *err, ...)
usage_routine$:$/var/www/html/src/git-master/usage.c$:$58$:$NORETURN_PTR void (*) (const char *err, va_list params)
OPT_INTEGER$:$NA$:$NA$:$NA
OPT_STRING$:$NA$:$NA$:$NA
OPT_END$:$NA$:$NA$:$NA
parse_options$:$/var/www/html/src/git-master/parse-options.c$:$449$:$int (int argc, const char **argv, const char *prefix, const struct option *options, const char *const usagestr[], int flags)
parse_options_start$:$/var/www/html/src/git-master/parse-options.c$:$338$:$void (struct parse_opt_ctx_t ctx, int argc, const char **argv, const char *prefix, const struct option *options, int flags)
memset$:$NA$:$NA$:$NA
die$:$/var/www/html/src/git-master/git-compat-util.h$:$328$:$NORETURN void (const char *err, ...)
die_is_recursing$:$/var/www/html/src/git-master/usage.c$:$62$:$int (*) (void)
fputs$:$NA$:$NA$:$NA
exit$:$NA$:$NA$:$NA
die_routine$:$/var/www/html/src/git-master/usage.c$:$59$:$NORETURN_PTR void (*) (const char *err, va_list params)
parse_options_check$:$/var/www/html/src/git-master/parse-options.c$:$304$:$void (const struct option *opts)
optbug$:$/var/www/html/src/git-master/parse-options.c$:$15$:$int (const struct option *opt, const char *reason)
parse_options_step$:$/var/www/html/src/git-master/parse-options.c$:$359$:$int (struct parse_opt_ctx_t ctx, const struct option *options, const char *const usagestr[])
parse_nodash_opt$:$/var/www/html/src/git-master/parse-options.c$:$272$:$int (struct parse_opt_ctx_t p, const char *arg, const struct option *options)
get_value$:$/var/www/html/src/git-master/parse-options.c$:$46$:$int (struct parse_opt_ctx_t p, const struct option *opt, int flags)
opterror$:$/var/www/html/src/git-master/parse-options.c$:$593$:$int (const struct option *opt, const char *reason, int flags)
get_arg$:$/var/www/html/src/git-master/parse-options.c$:$22$:$int (struct parse_opt_ctx_t p, const struct option *opt, int flags, const char **arg)
fix_filename$:$/var/www/html/src/git-master/parse-options.c$:$38$:$void (const char *prefix, const char **file)
is_absolute_path$:$/var/www/html/src/git-master/cache.h$:$756$:$inline int (const char *path)
is_dir_sep$:$NA$:$NA$:$NA
has_dos_drive_prefix$:$NA$:$NA$:$NA
xstrdup$:$/var/www/html/src/git-master/wrapper.c$:$33$:$char * (const char *str)
strdup$:$NA$:$NA$:$NA
try_to_free_routine$:$/var/www/html/src/git-master/wrapper.c$:$10$:$void (*) (size_t size)
prefix_filename$:$/var/www/html/src/git-master/abspath.c$:$216$:$const char * (const char *pfx, int pfx_len, const char *arg)
memcpy$:$NA$:$NA$:$NA
strcpy$:$NA$:$NA$:$NA
strtol$:$NA$:$NA$:$NA
parse_options_usage$:$/var/www/html/src/git-master/parse-options.c$:$585$:$int (struct parse_opt_ctx_t ctx, const char *const *usagestr, const struct option *opts, int err)
usage_with_options_internal$:$/var/www/html/src/git-master/parse-options.c$:$495$:$int (struct parse_opt_ctx_t ctx, const char *const *usagestr, const struct option *opts, int full, int err)
fprintf$:$NA$:$NA$:$NA
fprintf_ln$:$/var/www/html/src/git-master/strbuf.c$:$562$:$int (FILE *fp, const char *fmt, ...)
vfprintf$:$NA$:$NA$:$NA
putc$:$NA$:$NA$:$NA
putchar$:$NA$:$NA$:$NA
fputc$:$NA$:$NA$:$NA
utf8_fprintf$:$/var/www/html/src/git-master/utf8.c$:$490$:$int (FILE *stream, const char *format, ...)
strbuf_vaddf$:$/var/www/html/src/git-master/strbuf.c$:$255$:$void (struct strbuf sb, const char *fmt, va_list ap)
strbuf_avail$:$/var/www/html/src/git-master/strbuf.h$:$27$:$inline size_t (const struct strbuf *sb)
strbuf_grow$:$/var/www/html/src/git-master/strbuf.c$:$66$:$void (struct strbuf sb, size_t extra)
unsigned_add_overflows$:$NA$:$NA$:$NA
ALLOC_GROW$:$NA$:$NA$:$NA
va_copy$:$NA$:$NA$:$NA
vsnprintf$:$NA$:$NA$:$NA
strbuf_setlen$:$/var/www/html/src/git-master/strbuf.h$:$33$:$inline void (struct strbuf sb, size_t len)
utf8_strwidth$:$/var/www/html/src/git-master/utf8.c$:$286$:$int (const char *string)
utf8_strnwidth$:$/var/www/html/src/git-master/utf8.c$:$269$:$int (const char *string, int len, int skip_ansi)
display_mode_esc_sequence_len$:$/var/www/html/src/git-master/utf8.c$:$12$:$size_t (const char *s)
isdigit$:$NA$:$NA$:$NA
utf8_width$:$/var/www/html/src/git-master/utf8.c$:$256$:$int (const char **start, size_t *remainder_p)
pick_one_utf8_char$:$/var/www/html/src/git-master/utf8.c$:$180$:$ucs_char_t (const char **start, size_t *remainder_p)
git_wcwidth$:$/var/www/html/src/git-master/utf8.c$:$79$:$int (ucs_char_t ch)
bisearch$:$/var/www/html/src/git-master/utf8.c$:$27$:$int (ucs_char_t ucs, const struct interval *table, int max)
strbuf_release$:$/var/www/html/src/git-master/strbuf.c$:$37$:$void (struct strbuf sb)
free$:$NA$:$NA$:$NA
strbuf_init$:$/var/www/html/src/git-master/strbuf.c$:$29$:$void (struct strbuf sb, size_t hint)
usage_argh$:$/var/www/html/src/git-master/parse-options.c$:$478$:$int (const struct option *opts, FILE *outfile)
parse_short_opt$:$/var/www/html/src/git-master/parse-options.c$:$144$:$int (struct parse_opt_ctx_t p, const struct option *options)
xmemdupz$:$/var/www/html/src/git-master/wrapper.c$:$84$:$void * (const void *data, size_t len)
xmallocz$:$/var/www/html/src/git-master/wrapper.c$:$68$:$void * (size_t size)
xmalloc$:$/var/www/html/src/git-master/wrapper.c$:$45$:$void * (size_t size)
memory_limit_check$:$/var/www/html/src/git-master/wrapper.c$:$12$:$void (size_t size)
getenv$:$NA$:$NA$:$NA
atoi$:$NA$:$NA$:$NA
malloc$:$NA$:$NA$:$NA
check_typos$:$/var/www/html/src/git-master/parse-options.c$:$284$:$void (const char *arg, const struct option *options)
prefixcmp$:$/var/www/html/src/git-master/strbuf.c$:$4$:$int (const char *str, const char *prefix)
parse_long_opt$:$/var/www/html/src/git-master/parse-options.c$:$177$:$int (struct parse_opt_ctx_t p, const char *arg, const struct option *options)
strchr$:$NA$:$NA$:$NA
skip_prefix$:$/var/www/html/src/git-master/git-compat-util.h$:$351$:$inline const char * (const char *str, const char *prefix)
strncmp$:$NA$:$NA$:$NA
isascii$:$NA$:$NA$:$NA
usage_with_options$:$/var/www/html/src/git-master/parse-options.c$:$570$:$void NORETURN (const char *const *usagestr, const struct option *opts)
precompose_argv$:$NA$:$NA$:$NA
parse_options_end$:$/var/www/html/src/git-master/parse-options.c$:$442$:$int (struct parse_opt_ctx_t ctx)
memmove$:$NA$:$NA$:$NA
expand_user_path$:$/var/www/html/src/git-master/path.c$:$265$:$char * (const char *path)
strchrnul$:$NA$:$NA$:$NA
strbuf_add$:$/var/www/html/src/git-master/strbuf.c$:$185$:$void (struct strbuf sb, const void *data, size_t len)
getpw_str$:$/var/www/html/src/git-master/path.c$:$249$:$struct passwd (const char *username, size_t len)
strbuf_detach$:$/var/www/html/src/git-master/strbuf.c$:$45$:$char * (struct strbuf sb, size_t *sz)
do_cache$:$/var/www/html/src/git-master/credential-cache.c$:$62$:$void (const char *socket, const char *action, int timeout, int flags)
strbuf_addf$:$/var/www/html/src/git-master/strbuf.c$:$199$:$void (struct strbuf sb, const char *fmt, ...)
strbuf_read$:$/var/www/html/src/git-master/strbuf.c$:$344$:$ssize_t (struct strbuf sb, int fd, size_t hint)
xread$:$/var/www/html/src/git-master/wrapper.c$:$138$:$ssize_t (int fd, void *buf, size_t len)
read$:$NA$:$NA$:$NA
die_errno$:$/var/www/html/src/git-master/git-compat-util.h$:$329$:$NORETURN void (const char *err, ...)
snprintf$:$NA$:$NA$:$NA
send_request$:$/var/www/html/src/git-master/credential-cache.c$:$11$:$int (const char *socket, const struct strbuf *out)
unix_stream_connect$:$/var/www/html/src/git-master/unix-socket.c$:$74$:$int (const char *path)
unix_sockaddr_init$:$/var/www/html/src/git-master/unix-socket.c$:$37$:$int (struct sockaddr_un sa, const char *path, struct unix_sockaddr_context ctx)
find_last_dir_sep$:$NA$:$NA$:$NA
getcwd$:$NA$:$NA$:$NA
chdir_len$:$/var/www/html/src/git-master/unix-socket.c$:$12$:$int (const char *orig, int len)
chdir$:$NA$:$NA$:$NA
unix_stream_socket$:$/var/www/html/src/git-master/unix-socket.c$:$4$:$int (void)
socket$:$NA$:$NA$:$NA
connect$:$NA$:$NA$:$NA
unix_sockaddr_cleanup$:$/var/www/html/src/git-master/unix-socket.c$:$24$:$void (struct unix_sockaddr_context ctx)
close$:$NA$:$NA$:$NA
write_in_full$:$/var/www/html/src/git-master/wrapper.c$:$184$:$ssize_t (int fd, const void *buf, size_t count)
xwrite$:$/var/www/html/src/git-master/wrapper.c$:$154$:$ssize_t (int fd, const void *buf, size_t len)
write$:$NA$:$NA$:$NA
shutdown$:$NA$:$NA$:$NA
read_in_full$:$/var/www/html/src/git-master/wrapper.c$:$165$:$ssize_t (int fd, void *buf, size_t count)
write_or_die$:$/var/www/html/src/git-master/write_or_die.c$:$59$:$void (int fd, const void *buf, size_t count)
check_pipe$:$/var/www/html/src/git-master/write_or_die.c$:$3$:$void (int err)
signal$:$NA$:$NA$:$NA
raise$:$NA$:$NA$:$NA
spawn_daemon$:$/var/www/html/src/git-master/credential-cache.c$:$38$:$void (const char *socket)
start_command$:$/var/www/html/src/git-master/run-command.c$:$275$:$int (struct child_process cmd)
pipe$:$NA$:$NA$:$NA
close_pair$:$/var/www/html/src/git-master/run-command.c$:$69$:$inline void (int fd[2])
trace_argv_printf$:$/var/www/html/src/git-master/trace.c$:$109$:$void (const char **argv, const char *fmt, ...)
get_trace_fd$:$/var/www/html/src/git-master/trace.c$:$29$:$int (const char *key, int *need_close)
strcasecmp$:$NA$:$NA$:$NA
open$:$NA$:$NA$:$NA
set_try_to_free_routine$:$/var/www/html/src/git-master/wrapper.c$:$24$:$try_to_free_t (try_to_free_t routine)
do_nothing$:$/var/www/html/src/git-master/wrapper.c$:$6$:$void (size_t size)
sq_quote_argv$:$/var/www/html/src/git-master/quote.c$:$62$:$void (struct strbuf dst, const char **argv, size_t maxlen)
strbuf_addch$:$/var/www/html/src/git-master/strbuf.h$:$100$:$inline void (struct strbuf sb, int c)
sq_quote_buf$:$/var/www/html/src/git-master/quote.c$:$23$:$void (struct strbuf dst, const char *src)
strcspn$:$NA$:$NA$:$NA
need_bs_quote$:$/var/www/html/src/git-master/quote.c$:$18$:$inline int (char c)
strbuf_addstr$:$/var/www/html/src/git-master/strbuf.h$:$116$:$inline void (struct strbuf sb, const char *s)
write_or_whine_pipe$:$/var/www/html/src/git-master/write_or_die.c$:$67$:$int (int fd, const void *buf, size_t count, const char *msg)
fflush$:$NA$:$NA$:$NA
fork$:$NA$:$NA$:$NA
dup$:$NA$:$NA$:$NA
set_cloexec$:$/var/www/html/src/git-master/run-command.c$:$225$:$inline void (int fd)
fcntl$:$NA$:$NA$:$NA
set_die_routine$:$/var/www/html/src/git-master/usage.c$:$64$:$void (NORETURN_PTR void (*routine) (const char *err, va_list params))
die_child$:$/var/www/html/src/git-master/run-command.c$:$213$:$NORETURN void (const char *err, va_list params)
vwritef$:$/var/www/html/src/git-master/usage.c$:$16$:$void (int fd, const char *prefix, const char *err, va_list params)
set_error_routine$:$/var/www/html/src/git-master/usage.c$:$69$:$void (void (*routine) (const char *err, va_list params))
error_child$:$/var/www/html/src/git-master/run-command.c$:$219$:$void (const char *err, va_list params)
atexit$:$NA$:$NA$:$NA
notify_parent$:$/var/www/html/src/git-master/run-command.c$:$203$:$void (void)
dup_devnull$:$/var/www/html/src/git-master/run-command.c$:$76$:$inline void (int to)
dup2$:$NA$:$NA$:$NA
putenv$:$NA$:$NA$:$NA
unsetenv$:$NA$:$NA$:$NA
execv_git_cmd$:$/var/www/html/src/git-master/exec_cmd.c$:$132$:$int (const char **argv)
prepare_git_cmd$:$/var/www/html/src/git-master/exec_cmd.c$:$116$:$const char ** (const char **argv)
sane_execvp$:$/var/www/html/src/git-master/run-command.c$:$126$:$int (const char *file, char *const argv[])
execvp$:$NA$:$NA$:$NA
exists_in_PATH$:$/var/www/html/src/git-master/run-command.c$:$119$:$int (const char *file)
locate_in_PATH$:$/var/www/html/src/git-master/run-command.c$:$87$:$char * (const char *file)
strbuf_reset$:$NA$:$NA$:$NA
access$:$NA$:$NA$:$NA
trace_printf$:$/var/www/html/src/git-master/trace.c$:$87$:$void (const char *fmt, ...)
execv_shell_cmd$:$/var/www/html/src/git-master/run-command.c$:$189$:$int (const char **argv)
prepare_shell_cmd$:$/var/www/html/src/git-master/run-command.c$:$151$:$const char ** (const char **argv)
mark_child_for_cleanup$:$/var/www/html/src/git-master/run-command.c$:$40$:$void (pid_t pid)
cleanup_children_on_exit$:$/var/www/html/src/git-master/run-command.c$:$35$:$void (void)
cleanup_children$:$/var/www/html/src/git-master/run-command.c$:$18$:$void (int sig)
kill$:$NA$:$NA$:$NA
sigchain_push_common$:$/var/www/html/src/git-master/sigchain.c$:$45$:$void (sigchain_fun f)
sigchain_push$:$/var/www/html/src/git-master/sigchain.c$:$19$:$int (int sig, sigchain_fun f)
check_signum$:$/var/www/html/src/git-master/sigchain.c$:$13$:$void (int sig)
cleanup_children_on_signal$:$/var/www/html/src/git-master/run-command.c$:$28$:$void (int sig)
sigchain_pop$:$/var/www/html/src/git-master/sigchain.c$:$32$:$int (int sig)
wait_or_whine$:$/var/www/html/src/git-master/run-command.c$:$232$:$int (pid_t pid, const char *argv0)
waitpid$:$NA$:$NA$:$NA
WIFSIGNALED$:$NA$:$NA$:$NA
WTERMSIG$:$NA$:$NA$:$NA
WIFEXITED$:$NA$:$NA$:$NA
WEXITSTATUS$:$NA$:$NA$:$NA
clear_child_for_cleanup$:$/var/www/html/src/git-master/run-command.c$:$54$:$void (pid_t pid)
make_augmented_environ$:$NA$:$NA$:$NA
mingw_spawnvpe$:$NA$:$NA$:$NA
free_environ$:$NA$:$NA$:$NA
memcmp$:$NA$:$NA$:$NA
check_socket_directory$:$/var/www/html/src/git-master/credential-cache--daemon.c$:$229$:$void (const char *path)
dirname$:$NA$:$NA$:$NA
stat$:$NA$:$NA$:$NA
safe_create_leading_directories_const$:$/var/www/html/src/git-master/sha1_file.c$:$147$:$int (const char *path)
safe_create_leading_directories$:$/var/www/html/src/git-master/sha1_file.c$:$108$:$int (char *path)
offset_1st_component$:$/var/www/html/src/git-master/path.c$:$749$:$int (const char *path)
S_ISDIR$:$NA$:$NA$:$NA
mkdir$:$NA$:$NA$:$NA
adjust_shared_perm$:$/var/www/html/src/git-master/path.c$:$415$:$int (const char *path)
get_st_mode_bits$:$/var/www/html/src/git-master/path.c$:$8$:$int (const char *path, int *mode)
calc_shared_perm$:$/var/www/html/src/git-master/path.c$:$392$:$int (int mode)
chmod$:$NA$:$NA$:$NA
cleanup_socket$:$/var/www/html/src/git-master/credential-cache--daemon.c$:$8$:$void (void)
unlink$:$NA$:$NA$:$NA
cleanup_socket_on_signal$:$/var/www/html/src/git-master/credential-cache--daemon.c$:$14$:$void (int sig)
serve_cache$:$/var/www/html/src/git-master/credential-cache--daemon.c$:$206$:$void (const char *socket_path)
unix_stream_listen$:$/var/www/html/src/git-master/unix-socket.c$:$96$:$int (const char *path)
bind$:$NA$:$NA$:$NA
listen$:$NA$:$NA$:$NA
fclose$:$NA$:$NA$:$NA
serve_cache_loop$:$/var/www/html/src/git-master/credential-cache--daemon.c$:$164$:$int (int fd)
check_expirations$:$/var/www/html/src/git-master/credential-cache--daemon.c$:$62$:$int (void)
time$:$NA$:$NA$:$NA
credential_clear$:$/var/www/html/src/git-master/credential.c$:$14$:$void (struct credential c)
string_list_clear$:$/var/www/html/src/git-master/string-list.c$:$150$:$void (struct string_list list, int free_util)
credential_init$:$/var/www/html/src/git-master/credential.c$:$8$:$void (struct credential c)
poll$:$NA$:$NA$:$NA
accept$:$NA$:$NA$:$NA
warning$:$/var/www/html/src/git-master/git-compat-util.h$:$331$:$void (const char *err, ...)
warn_routine$:$/var/www/html/src/git-master/usage.c$:$61$:$void (*) (const char *err, va_list params)
xfdopen$:$/var/www/html/src/git-master/wrapper.c$:$213$:$FILE * (int fd, const char *mode)
fdopen$:$NA$:$NA$:$NA
serve_one_client$:$/var/www/html/src/git-master/credential-cache--daemon.c$:$128$:$void (FILE *in, FILE *out)
read_request$:$/var/www/html/src/git-master/credential-cache--daemon.c$:$106$:$int (FILE *fh, struct credential c, struct strbuf action, int *timeout)
strbuf_getline$:$/var/www/html/src/git-master/strbuf.c$:$422$:$int (struct strbuf sb, FILE *fp, int term)
strbuf_getwholeline$:$/var/www/html/src/git-master/strbuf.c$:$401$:$int (struct strbuf sb, FILE *fp, int term)
feof$:$NA$:$NA$:$NA
fgetc$:$NA$:$NA$:$NA
credential_read$:$/var/www/html/src/git-master/credential.c$:$142$:$int (struct credential c, FILE *fp)
credential_from_url$:$/var/www/html/src/git-master/credential.c$:$318$:$void (struct credential c, const char *url)
strstr$:$NA$:$NA$:$NA
url_decode_mem$:$/var/www/html/src/git-master/url.c$:$94$:$char * (const char *url, int len)
memchr$:$NA$:$NA$:$NA
url_decode_internal$:$/var/www/html/src/git-master/url.c$:$51$:$char * (const char **query, int len, const char *stop_at, struct strbuf out, int decode_plus)
url_decode_char$:$/var/www/html/src/git-master/url.c$:$32$:$int (const char *q)
url_decode$:$/var/www/html/src/git-master/url.c$:$89$:$char * (const char *url)
lookup_credential$:$/var/www/html/src/git-master/credential-cache--daemon.c$:$42$:$struct credential_cache_entry (const struct credential *c)
remove_credential$:$/var/www/html/src/git-master/credential-cache--daemon.c$:$53$:$void (const struct credential *c)
cache_credential$:$/var/www/html/src/git-master/credential-cache--daemon.c$:$29$:$void (struct credential c, int timeout)
umask$:$NA$:$NA$:$NA
parse_credential_file$:$/var/www/html/src/git-master/credential-store.c$:$8$:$void (const char *fn, struct credential c, void (*match_cb) (struct credential *), void (*other_cb) (struct strbuf *))
fopen$:$NA$:$NA$:$NA
credential_match$:$/var/www/html/src/git-master/credential.c$:$26$:$int (const struct credential *want, const struct credential *have)
CHECK$:$NA$:$NA$:$NA
print_entry$:$/var/www/html/src/git-master/credential-store.c$:$42$:$void (struct credential c)
rewrite_credential_file$:$/var/www/html/src/git-master/credential-store.c$:$54$:$void (const char *fn, struct credential c, struct strbuf extra)
hold_lock_file_for_update$:$/var/www/html/src/git-master/lockfile.c$:$189$:$int (struct lock_file lk, const char *path, int flags)
lock_file$:$/var/www/html/src/git-master/lockfile.c$:$125$:$int (struct lock_file lk, const char *path, int flags)
resolve_symlink$:$/var/www/html/src/git-master/lockfile.c$:$80$:$char * (char *p, size_t s)
readlink$:$NA$:$NA$:$NA
last_path_elm$:$/var/www/html/src/git-master/lockfile.c$:$38$:$char * (char *p)
strcat$:$NA$:$NA$:$NA
remove_lock_file_on_signal$:$/var/www/html/src/git-master/lockfile.c$:$25$:$void (int signo)
remove_lock_file$:$/var/www/html/src/git-master/lockfile.c$:$10$:$void (void)
getpid$:$NA$:$NA$:$NA
unlink_or_warn$:$/var/www/html/src/git-master/wrapper.c$:$391$:$int (const char *file)
warn_if_unremovable$:$/var/www/html/src/git-master/wrapper.c$:$378$:$int (const char *op, const char *file, int rc)
unable_to_lock_index_die$:$/var/www/html/src/git-master/lockfile.c$:$184$:$NORETURN void (const char *path, int err)
unable_to_lock_message$:$/var/www/html/src/git-master/lockfile.c$:$160$:$char * (const char *path, int err)
absolute_path$:$/var/www/html/src/git-master/abspath.c$:$188$:$const char * (const char *path)
strlcpy$:$NA$:$NA$:$NA
get_pwd_cwd$:$/var/www/html/src/git-master/abspath.c$:$161$:$const char * (void)
print_line$:$/var/www/html/src/git-master/credential-store.c$:$48$:$void (struct strbuf buf)
commit_lock_file$:$/var/www/html/src/git-master/lockfile.c$:$232$:$int (struct lock_file lk)
close_lock_file$:$/var/www/html/src/git-master/lockfile.c$:$225$:$int (struct lock_file lk)
rename$:$NA$:$NA$:$NA
store_credential$:$/var/www/html/src/git-master/credential-store.c$:$66$:$void (const char *fn, struct credential c)
strbuf_addstr_urlencode$:$/var/www/html/src/git-master/strbuf.c$:$525$:$void (struct strbuf sb, const char *s, int reserved)
strbuf_add_urlencode$:$/var/www/html/src/git-master/strbuf.c$:$511$:$void (struct strbuf sb, const char *s, size_t len, int reserved)
is_rfc3986_unreserved$:$/var/www/html/src/git-master/strbuf.c$:$505$:$int (char ch)
isalnum$:$NA$:$NA$:$NA
is_rfc3986_reserved$:$/var/www/html/src/git-master/strbuf.c$:$494$:$int (char ch)
git_setup_gettext$:$/var/www/html/src/git-master/gettext.c$:$121$:$void (void)
bindtextdomain$:$NA$:$NA$:$NA
setlocale$:$NA$:$NA$:$NA
init_gettext_charset$:$/var/www/html/src/git-master/gettext.c$:$33$:$void (const char *domain)
locale_charset$:$NA$:$NA$:$NA
bind_textdomain_codeset$:$NA$:$NA$:$NA
textdomain$:$NA$:$NA$:$NA
git_extract_argv0_path$:$/var/www/html/src/git-master/exec_cmd.c$:$41$:$const char * (const char *argv0)
xstrndup$:$/var/www/html/src/git-master/wrapper.c$:$89$:$char * (const char *str, size_t len)
string_list_append$:$/var/www/html/src/git-master/sh-i18n--envsubst.c$:$206$:$inline void (string_list_ty *slp, const char *s)
xrealloc$:$/var/www/html/src/git-master/wrapper.c$:$95$:$void * (void *ptr, size_t size)
realloc$:$NA$:$NA$:$NA
xstrdup_tolower$:$/var/www/html/src/git-master/daemon.c$:$478$:$char * (const char *str)
tolower$:$NA$:$NA$:$NA
strtoul$:$NA$:$NA$:$NA
enable_service$:$/var/www/html/src/git-master/daemon.c$:$454$:$void (const char *name, int ena)
make_service_overridable$:$/var/www/html/src/git-master/daemon.c$:$466$:$void (const char *name, int ena)
openlog$:$NA$:$NA$:$NA
daemon_die$:$/var/www/html/src/git-master/daemon.c$:$103$:$void NORETURN (const char *err, va_list params)
logreport$:$/var/www/html/src/git-master/daemon.c$:$64$:$void (int priority, const char *err, va_list params)
syslog$:$NA$:$NA$:$NA
setvbuf$:$NA$:$NA$:$NA
prepare_credentials$:$/var/www/html/src/git-master/daemon.c$:$1084$:$struct credentials (const char *user_name, const char *group_name)
is_directory$:$/var/www/html/src/git-master/abspath.c$:$8$:$int (const char *path)
freopen$:$NA$:$NA$:$NA
execute$:$/var/www/html/src/git-master/daemon.c$:$601$:$int (void)
loginfo$:$/var/www/html/src/git-master/daemon.c$:$93$:$void (const char *err, ...)
alarm$:$NA$:$NA$:$NA
packet_read$:$/var/www/html/src/git-master/pkt-line.c$:$163$:$int (int fd, char **src_buf, size_t *src_len, char *buffer, unsigned size, int options)
get_packet_data$:$/var/www/html/src/git-master/pkt-line.c$:$107$:$int (int fd, char **src_buf, size_t *src_size, void *dst, unsigned size, int options)
packet_length$:$/var/www/html/src/git-master/pkt-line.c$:$138$:$int (const char *linelen)
packet_trace$:$/var/www/html/src/git-master/pkt-line.c$:$13$:$void (const char *buf, unsigned int len, int write)
trace_want$:$/var/www/html/src/git-master/trace.c$:$181$:$int (const char *key)
trace_strbuf$:$/var/www/html/src/git-master/trace.c$:$95$:$void (const char *key, const struct strbuf *buf)
parse_host_arg$:$/var/www/html/src/git-master/daemon.c$:$516$:$void (char *extra_args, int buflen)
strncasecmp$:$NA$:$NA$:$NA
parse_host_and_port$:$/var/www/html/src/git-master/daemon.c$:$486$:$void (char *hostport, char **host, char **port)
strrchr$:$NA$:$NA$:$NA
getaddrinfo$:$NA$:$NA$:$NA
inet_ntop$:$NA$:$NA$:$NA
freeaddrinfo$:$NA$:$NA$:$NA
gethostbyname$:$NA$:$NA$:$NA
htons$:$NA$:$NA$:$NA
run_service$:$/var/www/html/src/git-master/daemon.c$:$321$:$int (char *dir, struct daemon_service service)
logerror$:$NA$:$NA$:$NA
daemon_error$:$/var/www/html/src/git-master/daemon.c$:$248$:$int (const char *dir, const char *msg)
packet_write$:$/var/www/html/src/git-master/pkt-line.c$:$85$:$void (int fd, const char *fmt, ...)
format_packet$:$/var/www/html/src/git-master/pkt-line.c$:$68$:$unsigned (const char *fmt, va_list args)
path_ok$:$/var/www/html/src/git-master/daemon.c$:$109$:$const char * (char *directory)
daemon_avoid_alias$:$/var/www/html/src/git-master/path.c$:$702$:$int (const char *p)
strbuf_expand$:$/var/www/html/src/git-master/strbuf.c$:$276$:$void (struct strbuf sb, const char *format, expand_fn_t fn, void *context)
strbuf_expand_dict_cb$:$/var/www/html/src/git-master/strbuf.c$:$303$:$size_t (struct strbuf sb, const char *placeholder, void *context)
enter_repo$:$/var/www/html/src/git-master/path.c$:$320$:$const char * (const char *path, int strict)
strncpy$:$NA$:$NA$:$NA
S_ISREG$:$NA$:$NA$:$NA
is_git_directory$:$/var/www/html/src/git-master/setup.c$:$318$:$int (const char *suspect)
validate_headref$:$/var/www/html/src/git-master/path.c$:$198$:$int (const char *path)
S_ISLNK$:$NA$:$NA$:$NA
isspace$:$NA$:$NA$:$NA
get_sha1_hex$:$/var/www/html/src/git-master/hex.c$:$38$:$int (const char *hex, unsigned char *sha1)
hexval$:$/var/www/html/src/git-master/cache.h$:$812$:$inline unsigned int (unsigned char c)
read_gitfile$:$/var/www/html/src/git-master/setup.c$:$421$:$const char * (const char *path)
real_path$:$/var/www/html/src/git-master/abspath.c$:$151$:$const char * (const char *path)
real_path_internal$:$/var/www/html/src/git-master/abspath.c$:$34$:$const char * (const char *path, int die_on_error)
set_git_dir$:$/var/www/html/src/git-master/environment.c$:$269$:$int (const char *path)
setenv$:$NA$:$NA$:$NA
setup_git_env$:$/var/www/html/src/git-master/environment.c$:$124$:$void (void)
sprintf$:$NA$:$NA$:$NA
git_pathdup$:$/var/www/html/src/git-master/cache.h$:$661$:$char * (const char *fmt, ...)
vsnpath$:$/var/www/html/src/git-master/path.c$:$52$:$char * (char *buf, size_t n, const char *fmt, va_list args)
get_git_dir$:$/var/www/html/src/git-master/environment.c$:$164$:$const char * (void)
cleanup_path$:$/var/www/html/src/git-master/path.c$:$26$:$char * (char *path)
expand_namespace$:$/var/www/html/src/git-master/environment.c$:$103$:$char * (const char *raw_namespace)
strbuf_split$:$/var/www/html/src/git-master/strbuf.h$:$87$:$inline struct strbuf ** (const struct strbuf *sb, int terminator)
strbuf_list_free$:$/var/www/html/src/git-master/strbuf.c$:$136$:$void (struct strbuf sbs)
check_refname_format$:$/var/www/html/src/git-master/refs.c$:$71$:$int (const char *refname, int flags)
check_refname_component$:$/var/www/html/src/git-master/refs.c$:$37$:$int (const char *refname, int flags)
bad_ref_char$:$/var/www/html/src/git-master/refs.c$:$21$:$inline int (int ch)
check_repository_format$:$/var/www/html/src/git-master/setup.c$:$892$:$int (void)
check_repository_format_gently$:$/var/www/html/src/git-master/setup.c$:$389$:$int (const char *gitdir, int *nongit_ok)
git_config_early$:$/var/www/html/src/git-master/config.c$:$1077$:$int (config_fn_t fn, void *data, const char *repo_config)
home_config_paths$:$/var/www/html/src/git-master/path.c$:$133$:$void (char **global, char **xdg, char *file)
mkpathdup$:$/var/www/html/src/git-master/cache.h$:$663$:$char * (const char *fmt, ...)
git_config_system$:$/var/www/html/src/git-master/config.c$:$1072$:$int (void)
git_env_bool$:$/var/www/html/src/git-master/config.c$:$1066$:$int (const char *k, int def)
git_config_bool$:$/var/www/html/src/git-master/config.c$:$581$:$int (const char *name, const char *value)
git_config_bool_or_int$:$/var/www/html/src/git-master/config.c$:$570$:$int (const char *name, const char *value, int *is_bool)
git_config_maybe_bool_text$:$/var/www/html/src/git-master/config.c$:$543$:$int (const char *name, const char *value)
git_config_int$:$/var/www/html/src/git-master/config.c$:$527$:$int (const char *name, const char *value)
git_parse_long$:$/var/www/html/src/git-master/config.c$:$471$:$int (const char *value, long *ret)
strtoimax$:$NA$:$NA$:$NA
parse_unit_factor$:$/var/www/html/src/git-master/config.c$:$452$:$int (const char *end, uintmax_t *val)
abs$:$NA$:$NA$:$NA
maximum_signed_value_of_type$:$NA$:$NA$:$NA
die_bad_config$:$/var/www/html/src/git-master/config.c$:$520$:$void (const char *name)
access_or_die$:$/var/www/html/src/git-master/wrapper.c$:$425$:$int (const char *path, int mode, unsigned flag)
access_error_is_ok$:$/var/www/html/src/git-master/wrapper.c$:$411$:$int (int err, unsigned flag)
git_etc_gitconfig$:$/var/www/html/src/git-master/config.c$:$1058$:$const char * (void)
system_path$:$/var/www/html/src/git-master/exec_cmd.c$:$9$:$const char * (const char *path)
assert$:$NA$:$NA$:$NA
strip_path_suffix$:$/var/www/html/src/git-master/path.c$:$679$:$char * (const char *path, const char *suffix)
chomp_trailing_dir_sep$:$/var/www/html/src/git-master/path.c$:$667$:$inline int (const char *path, int len)
git_config_from_file$:$/var/www/html/src/git-master/config.c$:$983$:$int (config_fn_t fn, const char *filename, void *data)
config_file_fgetc$:$/var/www/html/src/git-master/config.c$:$39$:$int (struct config_source conf)
config_file_ungetc$:$/var/www/html/src/git-master/config.c$:$44$:$int (int c, struct config_source conf)
ungetc$:$NA$:$NA$:$NA
config_file_ftell$:$/var/www/html/src/git-master/config.c$:$49$:$long (struct config_source conf)
ftell$:$NA$:$NA$:$NA
do_config_from$:$/var/www/html/src/git-master/config.c$:$961$:$int (struct config_source top, config_fn_t fn, void *data)
git_parse_source$:$/var/www/html/src/git-master/config.c$:$386$:$int (config_fn_t fn, void *data)
get_next_char$:$/var/www/html/src/git-master/config.c$:$218$:$int (void)
get_base_var$:$/var/www/html/src/git-master/config.c$:$370$:$int (struct strbuf name)
get_extended_base_var$:$/var/www/html/src/git-master/config.c$:$334$:$int (struct strbuf name, int c)
iskeychar$:$/var/www/html/src/git-master/config.c$:$300$:$inline int (int c)
isalpha$:$NA$:$NA$:$NA
parse_value$:$/var/www/html/src/git-master/config.c$:$239$:$char * (void)
git_config_from_parameters$:$/var/www/html/src/git-master/config.c$:$187$:$int (config_fn_t fn, void *data)
sq_dequote_to_argv$:$/var/www/html/src/git-master/quote.c$:$147$:$int (char *arg, const char ***argv, int *nr, int *alloc)
sq_dequote_to_argv_internal$:$/var/www/html/src/git-master/quote.c$:$124$:$int (char *arg, const char ***argv, int *nr, int *alloc, struct argv_array array)
sq_dequote_step$:$/var/www/html/src/git-master/quote.c$:$76$:$char * (char *arg, char **next)
argv_array_push$:$/var/www/html/src/git-master/argv-array.c$:$24$:$void (struct argv_array array, const char *value)
argv_array_push_nodup$:$/var/www/html/src/git-master/argv-array.c$:$14$:$void (struct argv_array array, const char *value)
git_config_parse_parameter$:$/var/www/html/src/git-master/config.c$:$164$:$int (const char *text, config_fn_t fn, void *data)
strbuf_split_str$:$/var/www/html/src/git-master/strbuf.h$:$67$:$inline struct strbuf ** (const char *str, int terminator, int max)
strbuf_trim$:$/var/www/html/src/git-master/strbuf.c$:$79$:$void (struct strbuf sb)
lowercase$:$/var/www/html/src/git-master/config.c$:$145$:$void (char *p)
check_repository_format_version$:$/var/www/html/src/git-master/setup.c$:$872$:$int (const char *var, const char *value, void *cb)
git_config_perm$:$/var/www/html/src/git-master/setup.c$:$821$:$int (const char *var, const char *value)
config_error_nonbool$:$/var/www/html/src/git-master/config.c$:$1811$:$int (const char *var)
git_config$:$/var/www/html/src/git-master/config.c$:$1154$:$int (config_fn_t fn, void *data)
git_config_with_options$:$/var/www/html/src/git-master/config.c$:$1122$:$int (config_fn_t fn, void *data, const char *filename, const char *blob_ref, int respect_includes)
git_config_include$:$/var/www/html/src/git-master/config.c$:$122$:$int (const char *var, const char *value, void *data)
handle_path_include$:$/var/www/html/src/git-master/config.c$:$83$:$int (const char *path, struct config_include_data inc)
git_config_from_blob_ref$:$/var/www/html/src/git-master/config.c$:$1047$:$int (config_fn_t fn, const char *name, void *data)
get_sha1$:$/var/www/html/src/git-master/sha1_name.c$:$1143$:$int (const char *name, unsigned char *sha1)
get_sha1_with_context$:$/var/www/html/src/git-master/sha1_name.c$:$1437$:$int (const char *str, unsigned flags, unsigned char *sha1, struct object_context orc)
get_sha1_with_context_1$:$/var/www/html/src/git-master/sha1_name.c$:$1308$:$int (const char *name, unsigned flags, const char *prefix, unsigned char *sha1, struct object_context oc)
get_sha1_1$:$/var/www/html/src/git-master/sha1_name.c$:$767$:$int (const char *name, int len, unsigned char *sha1, unsigned lookup_flags)
get_parent$:$/var/www/html/src/git-master/sha1_name.c$:$574$:$int (const char *name, int len, unsigned char *result, int idx)
lookup_commit_reference$:$/var/www/html/src/git-master/commit.c$:$44$:$struct commit (const unsigned char *sha1)
parse_commit$:$/var/www/html/src/git-master/commit.c$:$315$:$int (struct commit item)
read_sha1_file$:$/var/www/html/src/git-master/cache.h$:$774$:$inline void * (const unsigned char *sha1, enum object_type type, unsigned long *size)
read_sha1_file_extended$:$/var/www/html/src/git-master/sha1_file.c$:$2587$:$void * (const unsigned char *sha1, enum object_type type, unsigned long *size, unsigned flag)
lookup_replace_object$:$/var/www/html/src/git-master/cache.h$:$779$:$inline const unsigned char * (const unsigned char *sha1)
do_lookup_replace_object$:$/var/www/html/src/git-master/replace_object.c$:$95$:$const unsigned char * (const unsigned char *sha1)
prepare_replace_object$:$/var/www/html/src/git-master/replace_object.c$:$79$:$void (void)
for_each_replace_ref$:$/var/www/html/src/git-master/refs.c$:$1810$:$int (each_ref_fn fn, void *cb_data)
do_for_each_ref$:$/var/www/html/src/git-master/refs.c$:$1718$:$int (struct ref_cache refs, const char *base, each_ref_fn fn, int trim, int flags, void *cb_data)
do_for_each_entry$:$/var/www/html/src/git-master/refs.c$:$1660$:$int (struct ref_cache refs, const char *base, each_ref_entry_fn fn, void *cb_data)
get_loose_refs$:$/var/www/html/src/git-master/refs.c$:$1195$:$struct ref_dir (struct ref_cache refs)
find_containing_dir$:$/var/www/html/src/git-master/refs.c$:$436$:$struct ref_dir (struct ref_dir dir, const char *refname, int mkdir)
prime_ref_dir$:$/var/www/html/src/git-master/refs.c$:$762$:$void (struct ref_dir dir)
get_ref_dir$:$/var/www/html/src/git-master/refs.c$:$255$:$struct ref_dir (struct ref_entry entry)
get_packed_ref_cache$:$/var/www/html/src/git-master/refs.c$:$1077$:$struct packed_ref_cache (struct ref_cache refs)
acquire_packed_ref_cache$:$/var/www/html/src/git-master/refs.c$:$874$:$void (struct packed_ref_cache packed_refs)
get_packed_ref_dir$:$/var/www/html/src/git-master/refs.c$:$1106$:$struct ref_dir (struct packed_ref_cache packed_ref_cache)
sort_ref_dir$:$/var/www/html/src/git-master/refs.c$:$565$:$void (struct ref_dir dir)
qsort$:$NA$:$NA$:$NA
ref_entry_cmp$:$/var/www/html/src/git-master/refs.c$:$348$:$int (const void *a, const void *b)
is_dup_ref$:$/var/www/html/src/git-master/refs.c$:$543$:$int (const struct ref_entry *ref1, const struct ref_entry *ref2)
hashcmp$:$/var/www/html/src/git-master/cache.h$:$678$:$inline int (const unsigned char *sha1, const unsigned char *sha2)
free_ref_entry$:$/var/www/html/src/git-master/refs.c$:$288$:$void (struct ref_entry entry)
clear_ref_dir$:$/var/www/html/src/git-master/refs.c$:$320$:$void (struct ref_dir dir)
do_for_each_entry_in_dirs$:$/var/www/html/src/git-master/refs.c$:$692$:$int (struct ref_dir dir1, struct ref_dir dir2, each_ref_entry_fn fn, void *cb_data)
do_for_each_entry_in_dir$:$/var/www/html/src/git-master/refs.c$:$663$:$int (struct ref_dir dir, int offset, each_ref_entry_fn fn, void *cb_data)
release_packed_ref_cache$:$/var/www/html/src/git-master/refs.c$:$883$:$int (struct packed_ref_cache packed_refs)
stat_validity_clear$:$/var/www/html/src/git-master/read-cache.c$:$1955$:$void (struct stat_validity sv)
do_one_ref$:$/var/www/html/src/git-master/refs.c$:$634$:$int (struct ref_entry entry, void *cb_data)
ref_resolves_to_object$:$/var/www/html/src/git-master/refs.c$:$598$:$int (struct ref_entry entry)
has_sha1_file$:$/var/www/html/src/git-master/sha1_file.c$:$2922$:$int (const unsigned char *sha1)
find_pack_entry$:$/var/www/html/src/git-master/sha1_file.c$:$2371$:$int (const unsigned char *sha1, struct pack_entry e)
prepare_packed_git$:$/var/www/html/src/git-master/sha1_file.c$:$1194$:$void (void)
prepare_packed_git_one$:$/var/www/html/src/git-master/sha1_file.c$:$1069$:$void (char *objdir, int local)
opendir$:$NA$:$NA$:$NA
readdir$:$NA$:$NA$:$NA
report_garbage$:$/var/www/html/src/git-master/sha1_file.c$:$1012$:$void (*) (const char *desc, const char *path)
is_dot_or_dotdot$:$/var/www/html/src/git-master/dir.h$:$175$:$inline int (const char *name)
has_extension$:$/var/www/html/src/git-master/git-compat-util.h$:$546$:$inline int (const char *filename, const char *ext)
add_packed_git$:$/var/www/html/src/git-master/sha1_file.c$:$945$:$struct packed_git (const char *path, int path_len, int local)
install_packed_git$:$/var/www/html/src/git-master/sha1_file.c$:$1003$:$void (struct packed_git pack)
closedir$:$NA$:$NA$:$NA
report_pack_garbage$:$/var/www/html/src/git-master/sha1_file.c$:$1035$:$void (struct string_list list)
sort_string_list$:$/var/www/html/src/git-master/string-list.c$:$226$:$void (struct string_list list)
compare_for_qsort$:$/var/www/html/src/git-master/string-list.c$:$216$:$compare_strings_fn
cmp_items$:$/var/www/html/src/git-master/string-list.c$:$219$:$int (const void *a, const void *b)
report_helper$:$/var/www/html/src/git-master/sha1_file.c$:$1014$:$void (const struct string_list *list, int seen_bits, int first, int last)
get_object_directory$:$/var/www/html/src/git-master/environment.c$:$211$:$char * (void)
prepare_alt_odb$:$/var/www/html/src/git-master/sha1_file.c$:$410$:$void (void)
link_alt_odb_entries$:$/var/www/html/src/git-master/sha1_file.c$:$329$:$void (const char *alt, int len, int sep, const char *relative_base, int depth)
string_list_split_in_place$:$/var/www/html/src/git-master/string-list.c$:$286$:$int (struct string_list list, char *string, int delim, int maxsplit)
link_alt_odb_entry$:$/var/www/html/src/git-master/sha1_file.c$:$259$:$int (const char *entry, const char *relative_base, int depth)
normalize_path_copy$:$/var/www/html/src/git-master/path.c$:$547$:$int (char *dst, const char *src)
read_info_alternates$:$/var/www/html/src/git-master/sha1_file.c$:$359$:$void (const char *relative_base, int depth)
git_open_noatime$:$/var/www/html/src/git-master/sha1_file.c$:$1290$:$int (const char *name)
fstat$:$NA$:$NA$:$NA
xsize_t$:$/var/www/html/src/git-master/git-compat-util.h$:$539$:$inline size_t (off_t len)
xmmap$:$/var/www/html/src/git-master/sha1_file.c$:$654$:$void * (void *start, size_t length, int prot, int flags, int fd, off_t offset)
mmap$:$NA$:$NA$:$NA
release_pack_memory$:$/var/www/html/src/git-master/sha1_file.c$:$647$:$void (size_t need, int fd)
unuse_one_window$:$/var/www/html/src/git-master/sha1_file.c$:$617$:$int (struct packed_git current, int keep_fd)
scan_windows$:$/var/www/html/src/git-master/sha1_file.c$:$598$:$void (struct packed_git p, struct packed_git lru_p, struct pack_window lru_w, struct pack_window lru_l)
munmap$:$NA$:$NA$:$NA
rearrange_packed_git$:$/var/www/html/src/git-master/sha1_file.c$:$1167$:$void (void)
xcalloc$:$/var/www/html/src/git-master/wrapper.c$:$114$:$void * (size_t nmemb, size_t size)
calloc$:$NA$:$NA$:$NA
sort_pack$:$/var/www/html/src/git-master/sha1_file.c$:$1139$:$int (const void *a_, const void *b_)
fill_pack_entry$:$/var/www/html/src/git-master/sha1_file.c$:$2337$:$int (const unsigned char *sha1, struct pack_entry e, struct packed_git p)
find_pack_entry_one$:$/var/www/html/src/git-master/sha1_file.c$:$2253$:$off_t (const unsigned char *sha1, struct packed_git p)
open_pack_index$:$/var/www/html/src/git-master/sha1_file.c$:$583$:$int (struct packed_git p)
check_packed_git_idx$:$/var/www/html/src/git-master/sha1_file.c$:$481$:$int (const char *path, struct packed_git p)
htonl$:$NA$:$NA$:$NA
ntohl$:$NA$:$NA$:$NA
sha1_entry_pos$:$/var/www/html/src/git-master/sha1-lookup.c$:$167$:$int (const void *table, size_t elem_size, size_t key_offset, unsigned lo, unsigned hi, unsigned nr, const unsigned char *key)
sha1_to_hex$:$/var/www/html/src/git-master/hex.c$:$59$:$char * (const unsigned char *sha1)
nth_packed_object_offset$:$/var/www/html/src/git-master/sha1_file.c$:$2235$:$off_t (const struct packed_git *p, uint32_t n)
is_pack_valid$:$/var/www/html/src/git-master/sha1_file.c$:$2316$:$int (struct packed_git p)
open_packed_git$:$/var/www/html/src/git-master/sha1_file.c$:$832$:$int (struct packed_git p)
open_packed_git_1$:$/var/www/html/src/git-master/sha1_file.c$:$759$:$int (struct packed_git p)
get_max_fd_limit$:$/var/www/html/src/git-master/sha1_file.c$:$737$:$unsigned int (void)
getrlimit$:$NA$:$NA$:$NA
sysconf$:$NA$:$NA$:$NA
pack_version_ok$:$NA$:$NA$:$NA
lseek$:$NA$:$NA$:$NA
hashcpy$:$/var/www/html/src/git-master/cache.h$:$695$:$inline void (unsigned char *sha_dst, const unsigned char *sha_src)
has_loose_object$:$/var/www/html/src/git-master/sha1_file.c$:$444$:$int (const unsigned char *sha1)
has_loose_object_local$:$/var/www/html/src/git-master/sha1_file.c$:$426$:$int (const unsigned char *sha1)
sha1_file_name$:$/var/www/html/src/git-master/sha1_file.c$:$178$:$char * (const unsigned char *sha1)
fill_sha1_path$:$/var/www/html/src/git-master/sha1_file.c$:$156$:$void (char *pathbuf, const unsigned char *sha1)
has_loose_object_nonlocal$:$/var/www/html/src/git-master/sha1_file.c$:$432$:$int (const unsigned char *sha1)
register_replace_ref$:$/var/www/html/src/git-master/replace_object.c$:$54$:$int (const char *refname, const unsigned char *sha1, int flag, void *cb_data)
register_replace_object$:$/var/www/html/src/git-master/replace_object.c$:$24$:$int (struct replace_object replace, int ignore_dups)
replace_object_pos$:$/var/www/html/src/git-master/replace_object.c$:$18$:$int (const unsigned char *sha1)
sha1_pos$:$/var/www/html/src/git-master/sha1-lookup.c$:$53$:$int (const unsigned char *sha1, void *table, size_t nr, sha1_access_fn fn)
take2$:$/var/www/html/src/git-master/sha1-lookup.c$:$4$:$uint32_t (const unsigned char *sha1)
replace_sha1_access$:$/var/www/html/src/git-master/replace_object.c$:$12$:$const unsigned char * (size_t index, void *table)
alloc_nr$:$NA$:$NA$:$NA
read_object$:$/var/www/html/src/git-master/sha1_file.c$:$2555$:$void * (const unsigned char *sha1, enum object_type type, unsigned long *size)
find_cached_object$:$/var/www/html/src/git-master/sha1_file.c$:$65$:$struct cached_object (const unsigned char *sha1)
read_packed_sha1$:$/var/www/html/src/git-master/sha1_file.c$:$2508$:$void * (const unsigned char *sha1, enum object_type type, unsigned long *size)
cache_or_unpack_entry$:$/var/www/html/src/git-master/sha1_file.c$:$1923$:$void * (struct packed_git p, off_t base_offset, unsigned long *base_size, enum object_type type, int keep_cache)
get_delta_base_cache_entry$:$/var/www/html/src/git-master/sha1_file.c$:$1896$:$struct delta_base_cache_entry (struct packed_git p, off_t base_offset)
eq_delta_base_cache_entry$:$/var/www/html/src/git-master/sha1_file.c$:$1902$:$int (struct delta_base_cache_entry ent, struct packed_git p, off_t base_offset)
unpack_entry$:$/var/www/html/src/git-master/sha1_file.c$:$2037$:$void * (struct packed_git p, off_t obj_offset, enum object_type final_type, unsigned long *final_size)
write_pack_access_log$:$/var/www/html/src/git-master/sha1_file.c$:$2003$:$void (struct packed_git p, off_t obj_offset)
find_pack_revindex$:$/var/www/html/src/git-master/pack-revindex.c$:$204$:$struct revindex_entry (struct packed_git p, off_t ofs)
check_pack_crc$:$/var/www/html/src/git-master/pack-check.c$:$23$:$int (struct packed_git p, struct pack_window w_curs, off_t offset, off_t len, unsigned int nr)
crc32$:$NA$:$NA$:$NA
use_pack$:$/var/www/html/src/git-master/sha1_file.c$:$857$:$unsigned char * (struct packed_git p, struct pack_window w_cursor, off_t offset, unsigned long *left)
in_window$:$/var/www/html/src/git-master/sha1_file.c$:$844$:$int (struct pack_window win, off_t offset)
nth_packed_object_sha1$:$/var/www/html/src/git-master/sha1_file.c$:$2215$:$const unsigned char * (struct packed_git p, uint32_t n)
mark_bad_packed_object$:$/var/www/html/src/git-master/sha1_file.c$:$1218$:$void (struct packed_git p, const unsigned char *sha1)
unuse_pack$:$/var/www/html/src/git-master/sha1_file.c$:$685$:$void (struct pack_window w_cursor)
clear_delta_base_cache_entry$:$/var/www/html/src/git-master/sha1_file.c$:$1915$:$void (struct delta_base_cache_entry ent)
unpack_object_header$:$/var/www/html/src/git-master/sha1_file.c$:$1674$:$int (struct packed_git p, struct pack_window w_curs, off_t *curpos, unsigned long *sizep)
unpack_object_header_buffer$:$/var/www/html/src/git-master/sha1_file.c$:$1420$:$unsigned long (const unsigned char *buf, unsigned long len, enum object_type type, unsigned long *sizep)
bitsizeof$:$NA$:$NA$:$NA
get_delta_base$:$/var/www/html/src/git-master/sha1_file.c$:$1635$:$off_t (struct packed_git p, struct pack_window w_curs, off_t *curpos, enum object_type type, off_t delta_obj_offset)
MSB$:$NA$:$NA$:$NA
unpack_compressed_entry$:$/var/www/html/src/git-master/sha1_file.c$:$1836$:$void * (struct packed_git p, struct pack_window w_curs, off_t curpos, unsigned long size)
git_inflate_init$:$/var/www/html/src/git-master/zlib.c$:$67$:$void (git_zstream *strm)
zlib_pre_call$:$/var/www/html/src/git-master/zlib.c$:$37$:$void (git_zstream *s)
zlib_buf_cap$:$/var/www/html/src/git-master/zlib.c$:$32$:$inline uInt (unsigned long len)
inflateInit$:$NA$:$NA$:$NA
zlib_post_call$:$/var/www/html/src/git-master/zlib.c$:$47$:$void (git_zstream *s)
zerr_to_string$:$/var/www/html/src/git-master/zlib.c$:$7$:$const char * (int status)
git_inflate$:$/var/www/html/src/git-master/zlib.c$:$111$:$int (git_zstream *strm, int flush)
inflate$:$NA$:$NA$:$NA
git_inflate_end$:$/var/www/html/src/git-master/zlib.c$:$98$:$void (git_zstream *strm)
inflateEnd$:$NA$:$NA$:$NA
add_delta_base_cache$:$/var/www/html/src/git-master/sha1_file.c$:$1963$:$void (struct packed_git p, off_t base_offset, void *base, unsigned long base_size, enum object_type type)
pack_entry_hash$:$/var/www/html/src/git-master/sha1_file.c$:$1886$:$unsigned long (struct packed_git p, off_t base_offset)
release_delta_base_cache$:$/var/www/html/src/git-master/sha1_file.c$:$1945$:$inline void (struct delta_base_cache_entry ent)
patch_delta$:$/var/www/html/src/git-master/patch-delta.c$:$15$:$void * (const void *src_buf, unsigned long src_size, const void *delta_buf, unsigned long delta_size, unsigned long *dst_size)
get_delta_hdr_size$:$/var/www/html/src/git-master/delta.h$:$89$:$inline unsigned long (const unsigned char **datap, const unsigned char *top)
map_sha1_file$:$/var/www/html/src/git-master/sha1_file.c$:$1351$:$void * (const unsigned char *sha1, unsigned long *size)
open_sha1_file$:$/var/www/html/src/git-master/sha1_file.c$:$1329$:$int (const unsigned char *sha1)
unpack_sha1_file$:$/var/www/html/src/git-master/sha1_file.c$:$1583$:$void * (void *map, unsigned long mapsize, enum object_type type, unsigned long *size, const unsigned char *sha1)
unpack_sha1_header$:$/var/www/html/src/git-master/sha1_file.c$:$1445$:$int (git_zstream *stream, unsigned char *map, unsigned long mapsize, void *buffer, unsigned long bufsiz)
experimental_loose_object$:$/var/www/html/src/git-master/sha1_file.c$:$1382$:$int (unsigned char *map)
typename$:$/var/www/html/src/git-master/object.c$:$29$:$const char * (unsigned int type)
parse_sha1_header$:$/var/www/html/src/git-master/sha1_file.c$:$1537$:$int (const char *hdr, unsigned long *sizep)
type_from_string$:$/var/www/html/src/git-master/object.c$:$36$:$int (const char *str)
unpack_sha1_rest$:$/var/www/html/src/git-master/sha1_file.c$:$1487$:$void * (git_zstream *stream, void *buffer, unsigned long size, const unsigned char *sha1)
reprepare_packed_git$:$/var/www/html/src/git-master/sha1_file.c$:$1211$:$void (void)
discard_revindex$:$/var/www/html/src/git-master/pack-revindex.c$:$237$:$void (void)
has_packed_and_bad$:$/var/www/html/src/git-master/sha1_file.c$:$1230$:$const struct packed_git * (const unsigned char *sha1)
parse_commit_buffer$:$/var/www/html/src/git-master/commit.c$:$260$:$int (struct commit item, const void *buffer, unsigned long size)
lookup_tree$:$/var/www/html/src/git-master/tree.c$:$182$:$struct tree (const unsigned char *sha1)
lookup_commit_graft$:$/var/www/html/src/git-master/commit.c$:$229$:$struct commit_graft (const unsigned char *sha1)
lookup_commit$:$/var/www/html/src/git-master/commit.c$:$61$:$struct commit (const unsigned char *sha1)
commit_list_insert$:$/var/www/html/src/git-master/commit.c$:$363$:$struct commit_list (struct commit item, struct commit_list list_p)
parse_commit_date$:$/var/www/html/src/git-master/commit.c$:$87$:$unsigned long (const char *buf, const char *tail)
get_nth_ancestor$:$/var/www/html/src/git-master/sha1_name.c$:$604$:$int (const char *name, int len, unsigned char *result, int generation)
peel_onion$:$/var/www/html/src/git-master/sha1_name.c$:$652$:$int (const char *name, int len, unsigned char *sha1)
parse_object$:$/var/www/html/src/git-master/object.c$:$207$:$struct object (const unsigned char *sha1)
deref_tag$:$/var/www/html/src/git-master/tag.c$:$12$:$struct object (struct object o, const char *warn, int warnlen)
peel_to_type$:$/var/www/html/src/git-master/sha1_name.c$:$627$:$struct object (const char *name, int namelen, struct object o, enum object_type expected_type)
get_sha1_oneline$:$/var/www/html/src/git-master/sha1_name.c$:$843$:$int (const char *prefix, unsigned char *sha1, struct commit_list list)
regcomp$:$NA$:$NA$:$NA
pop_most_recent_commit$:$/var/www/html/src/git-master/commit.c$:$429$:$struct commit (struct commit_list list, unsigned int mark)
regexec$:$NA$:$NA$:$NA
regfree$:$NA$:$NA$:$NA
free_commit_list$:$/var/www/html/src/git-master/commit.c$:$380$:$void (struct commit_list list)
clear_commit_marks$:$/var/www/html/src/git-master/commit.c$:$484$:$void (struct commit commit, unsigned int mark)
clear_commit_marks_many$:$/var/www/html/src/git-master/commit.c$:$472$:$void (int nr, struct commit commit, unsigned int mark)
clear_commit_marks_1$:$/var/www/html/src/git-master/commit.c$:$450$:$void (struct commit_list plist, struct commit commit, unsigned int mark)
pop_commit$:$/var/www/html/src/git-master/commit.c$:$503$:$struct commit (struct commit_list stack)
get_sha1_basic$:$/var/www/html/src/git-master/sha1_name.c$:$436$:$int (const char *str, int len, unsigned char *sha1)
N_$:$NA$:$NA$:$NA
dwim_ref$:$/var/www/html/src/git-master/refs.c$:$1970$:$int (const char *str, int len, unsigned char *sha1, char **ref)
substitute_branch_name$:$/var/www/html/src/git-master/refs.c$:$1955$:$char * (const char **string, int *len)
interpret_branch_name$:$/var/www/html/src/git-master/sha1_name.c$:$1060$:$int (const char *name, struct strbuf buf)
interpret_nth_prior_checkout$:$/var/www/html/src/git-master/sha1_name.c$:$933$:$int (const char *name, struct strbuf buf)
for_each_reflog_ent_reverse$:$/var/www/html/src/git-master/refs.c$:$3028$:$int (const char *refname, each_reflog_ent_fn fn, void *cb_data)
git_path$:$/var/www/html/src/git-master/cache.h$:$668$:$char * (const char *fmt, ...)
get_pathname$:$/var/www/html/src/git-master/path.c$:$19$:$char * (void)
fseek$:$NA$:$NA$:$NA
fread$:$NA$:$NA$:$NA
find_beginning_of_line$:$/var/www/html/src/git-master/refs.c$:$3017$:$char * (char *bob, char *scan)
strbuf_splice$:$/var/www/html/src/git-master/strbuf.c$:$156$:$void (struct strbuf sb, size_t pos, size_t len, const void *data, size_t dlen)
show_one_reflog_ent$:$/var/www/html/src/git-master/refs.c$:$2989$:$int (struct strbuf sb, each_reflog_ent_fn fn, void *cb_data)
grab_nth_branch_switch$:$/var/www/html/src/git-master/sha1_name.c$:$905$:$int (unsigned char *osha1, unsigned char *nsha1, const char *email, unsigned long timestamp, int tz, const char *message, void *cb_data)
reinterpret$:$/var/www/html/src/git-master/sha1_name.c$:$1018$:$int (const char *name, int namelen, int len, struct strbuf buf)
strbuf_addbuf$:$/var/www/html/src/git-master/strbuf.h$:$119$:$inline void (struct strbuf sb, const struct strbuf *sb2)
interpret_empty_at$:$/var/www/html/src/git-master/sha1_name.c$:$1008$:$int (const char *name, int namelen, int len, struct strbuf buf)
upstream_mark$:$/var/www/html/src/git-master/sha1_name.c$:$419$:$inline int (const char *string, int len)
branch_get$:$/var/www/html/src/git-master/remote.c$:$1472$:$struct branch (const char *name)
ref_exists$:$/var/www/html/src/git-master/refs.c$:$1477$:$int (const char *refname)
resolve_ref_unsafe$:$/var/www/html/src/git-master/refs.c$:$1333$:$const char * (const char *refname, unsigned char *sha1, int reading, int *flag)
git_snpath$:$/var/www/html/src/git-master/cache.h$:$659$:$char * (char *buf, size_t n, const char *fmt, ...)
handle_missing_loose_ref$:$/var/www/html/src/git-master/refs.c$:$1306$:$const char * (const char *refname, unsigned char *sha1, int reading, int *flag)
get_packed_ref$:$/var/www/html/src/git-master/refs.c$:$1297$:$struct ref_entry (const char *refname)
hashclr$:$/var/www/html/src/git-master/cache.h$:$699$:$inline void (unsigned char *hash)
shorten_unambiguous_ref$:$/var/www/html/src/git-master/refs.c$:$3234$:$char * (const char *refname, int strict)
gen_scanf_fmt$:$/var/www/html/src/git-master/refs.c$:$3215$:$void (char *scanf_fmt, const char *rule)
sscanf$:$NA$:$NA$:$NA
mksnpath$:$/var/www/html/src/git-master/cache.h$:$657$:$char * (char *buf, size_t n, const char *fmt, ...)
ambiguous_path$:$/var/www/html/src/git-master/sha1_name.c$:$394$:$int (const char *path, int len)
dwim_log$:$/var/www/html/src/git-master/refs.c$:$2001$:$int (const char *str, int len, unsigned char *sha1, char **log)
get_short_sha1$:$/var/www/html/src/git-master/sha1_name.c$:$309$:$int (const char *name, int len, unsigned char *sha1, unsigned flags)
prepare_prefixes$:$/var/www/html/src/git-master/sha1_name.c$:$280$:$int (const char *name, int len, unsigned char *bin_pfx, char *hex_pfx)
disambiguate_commit_only$:$/var/www/html/src/git-master/sha1_name.c$:$226$:$int (const unsigned char *sha1, void *cb_data_unused)
sha1_object_info$:$/var/www/html/src/git-master/sha1_file.c$:$2496$:$int (const unsigned char *sha1, unsigned long *sizep)
sha1_object_info_extended$:$/var/www/html/src/git-master/sha1_file.c$:$2448$:$int (const unsigned char *sha1, struct object_info oi)
sha1_loose_object_info$:$/var/www/html/src/git-master/sha1_file.c$:$2405$:$int (const unsigned char *sha1, struct object_info oi)
stat_sha1_file$:$/var/www/html/src/git-master/sha1_file.c$:$1309$:$int (const unsigned char *sha1, struct stat st)
packed_object_info$:$/var/www/html/src/git-master/sha1_file.c$:$1785$:$int (struct packed_git p, off_t obj_offset, struct object_info oi)
get_size_from_delta$:$/var/www/html/src/git-master/sha1_file.c$:$1596$:$unsigned long (struct packed_git p, struct pack_window w_curs, off_t curpos)
packed_to_object_type$:$/var/www/html/src/git-master/sha1_file.c$:$1718$:$enum object_type (struct packed_git p, off_t obj_offset, enum object_type type, struct pack_window w_curs, off_t curpos)
in_delta_base_cache$:$/var/www/html/src/git-master/sha1_file.c$:$1908$:$int (struct packed_git p, off_t base_offset)
disambiguate_committish_only$:$/var/www/html/src/git-master/sha1_name.c$:$232$:$int (const unsigned char *sha1, void *cb_data_unused)
disambiguate_tree_only$:$/var/www/html/src/git-master/sha1_name.c$:$250$:$int (const unsigned char *sha1, void *cb_data_unused)
disambiguate_treeish_only$:$/var/www/html/src/git-master/sha1_name.c$:$256$:$int (const unsigned char *sha1, void *cb_data_unused)
lookup_object$:$/var/www/html/src/git-master/object.c$:$72$:$struct object (const unsigned char *sha1)
disambiguate_blob_only$:$/var/www/html/src/git-master/sha1_name.c$:$274$:$int (const unsigned char *sha1, void *cb_data_unused)
find_short_object_filename$:$/var/www/html/src/git-master/sha1_name.c$:$74$:$void (int len, const char *hex_pfx, struct disambiguate_state ds)
update_candidates$:$/var/www/html/src/git-master/sha1_name.c$:$26$:$void (struct disambiguate_state ds, const unsigned char *current)
find_short_packed_object$:$/var/www/html/src/git-master/sha1_name.c$:$179$:$void (int len, const unsigned char *bin_pfx, struct disambiguate_state ds)
unique_in_pack$:$/var/www/html/src/git-master/sha1_name.c$:$137$:$void (int len, const unsigned char *bin_pfx, struct packed_git p, struct disambiguate_state ds)
match_sha$:$/var/www/html/src/git-master/sha1_name.c$:$122$:$int (unsigned len, const unsigned char *a, const unsigned char *b)
finish_object_disambiguation$:$/var/www/html/src/git-master/sha1_name.c$:$192$:$int (struct disambiguate_state ds, unsigned char *sha1)
approxidate_careful$:$/var/www/html/src/git-master/date.c$:$1099$:$unsigned long (const char *date, int *error_ret)
parse_date_basic$:$/var/www/html/src/git-master/date.c$:$646$:$int (const char *date, unsigned long *timestamp, int *offset)
match_object_header_date$:$/var/www/html/src/git-master/date.c$:$621$:$int (const char *date, unsigned long *timestamp, int *offset)
match_alpha$:$/var/www/html/src/git-master/date.c$:$305$:$int (const char *date, struct tm tm, int *offset)
match_string$:$/var/www/html/src/git-master/date.c$:$277$:$int (const char *date, const char *str)
toupper$:$NA$:$NA$:$NA
skip_alpha$:$/var/www/html/src/git-master/date.c$:$293$:$int (const char *date)
match_digit$:$/var/www/html/src/git-master/date.c$:$475$:$int (const char *date, struct tm tm, int *offset, int *tm_gmt)
nodate$:$/var/www/html/src/git-master/date.c$:$462$:$inline int (struct tm tm)
gmtime_r$:$NA$:$NA$:$NA
match_multi_number$:$/var/www/html/src/git-master/date.c$:$397$:$int (unsigned long num, char c, const char *date, char *end, struct tm tm)
is_date$:$/var/www/html/src/git-master/date.c$:$355$:$int (int year, int month, int day, struct tm now_tm, time_t now, struct tm tm)
tm_to_time_t$:$/var/www/html/src/git-master/date.c$:$12$:$time_t (const struct tm *tm)
match_tz$:$/var/www/html/src/git-master/date.c$:$569$:$int (const char *date, int *offp)
mktime$:$NA$:$NA$:$NA
gettimeofday$:$NA$:$NA$:$NA
approxidate_str$:$/var/www/html/src/git-master/date.c$:$1051$:$unsigned long (const char *date, const struct timeval *tv, int *error_ret)
localtime_r$:$NA$:$NA$:$NA
pending_number$:$/var/www/html/src/git-master/date.c$:$1029$:$void (struct tm tm, int *num)
approxidate_digit$:$/var/www/html/src/git-master/date.c$:$1001$:$const char * (const char *date, struct tm tm, int *num)
approxidate_alpha$:$/var/www/html/src/git-master/date.c$:$903$:$const char * (const char *date, struct tm tm, struct tm now, int *num, int *touched)
update_tm$:$/var/www/html/src/git-master/date.c$:$784$:$unsigned long (struct tm tm, struct tm now, unsigned long sec)
read_ref_at$:$/var/www/html/src/git-master/refs.c$:$2883$:$int (const char *refname, unsigned long at_time, int cnt, unsigned char *sha1, char **msg, unsigned long *cutoff_time, int *cutoff_tz, int *cutoff_cnt)
ref_msg$:$/var/www/html/src/git-master/refs.c$:$2873$:$char * (const char *line, const char *endp)
show_date$:$/var/www/html/src/git-master/date.c$:$163$:$const char * (unsigned long time, int tz, enum date_mode mode)
show_date_relative$:$/var/www/html/src/git-master/date.c$:$89$:$void (unsigned long time, int tz, const struct timeval *now, struct strbuf timebuf)
Q_$:$NA$:$NA$:$NA
local_tzoffset$:$/var/www/html/src/git-master/date.c$:$67$:$int (unsigned long time)
time_to_tm$:$/var/www/html/src/git-master/date.c$:$57$:$struct tm (unsigned long time, int tz)
is_null_sha1$:$/var/www/html/src/git-master/cache.h$:$690$:$inline int (const unsigned char *sha1)
get_describe_name$:$/var/www/html/src/git-master/sha1_name.c$:$746$:$int (const char *name, int len, unsigned char *sha1)
for_each_ref$:$/var/www/html/src/git-master/refs.c$:$1759$:$int (each_ref_fn fn, void *cb_data)
handle_one_ref$:$/var/www/html/src/git-master/sha1_name.c$:$825$:$int (const char *path, const unsigned char *sha1, int flag, void *cb_data)
commit_list_insert_by_date$:$/var/www/html/src/git-master/commit.c$:$389$:$struct commit_list (struct commit item, struct commit_list list)
resolve_relative_path$:$/var/www/html/src/git-master/sha1_name.c$:$1291$:$char * (const char *rel)
is_inside_work_tree$:$/var/www/html/src/git-master/setup.c$:$354$:$int (void)
is_inside_dir$:$/var/www/html/src/git-master/dir.c$:$1438$:$int (const char *dir)
dir_inside_of$:$/var/www/html/src/git-master/dir.c$:$1411$:$int (const char *subdir, const char *dir)
get_git_work_tree$:$/var/www/html/src/git-master/environment.c$:$206$:$const char * (void)
prefix_path$:$/var/www/html/src/git-master/setup.c$:$45$:$char * (const char *prefix, int len, const char *path)
prefix_path_gently$:$/var/www/html/src/git-master/setup.c$:$8$:$char * (const char *prefix, int len, const char *path)
cache_name_pos$:$NA$:$NA$:$NA
ce_namelen$:$NA$:$NA$:$NA
ce_stage$:$NA$:$NA$:$NA
diagnose_invalid_index_path$:$/var/www/html/src/git-master/sha1_name.c$:$1234$:$void (int stage, const char *prefix, const char *filename)
get_tree_entry$:$/var/www/html/src/git-master/tree-walk.c$:$462$:$int (const unsigned char *tree_sha1, const char *name, unsigned char *sha1, unsigned *mode)
read_object_with_reference$:$/var/www/html/src/git-master/sha1_file.c$:$2624$:$void * (const unsigned char *sha1, const char *required_type_name, unsigned long *size, unsigned char *actual_sha1_return)
init_tree_desc$:$/var/www/html/src/git-master/tree-walk.c$:$43$:$void (struct tree_desc desc, const void *buffer, unsigned long size)
decode_tree_entry$:$/var/www/html/src/git-master/tree-walk.c$:$24$:$void (struct tree_desc desc, const char *buf, unsigned long size)
get_mode$:$/var/www/html/src/git-master/tree-walk.c$:$7$:$const char * (const char *str, unsigned int *modep)
find_tree_entry$:$/var/www/html/src/git-master/tree-walk.c$:$427$:$int (struct tree_desc t, const char *name, unsigned char *result, unsigned *mode)
tree_entry_extract$:$/var/www/html/src/git-master/tree-walk.h$:$16$:$inline const unsigned char * (struct tree_desc desc, const char **pathp, unsigned int *modep)
canon_mode$:$NA$:$NA$:$NA
tree_entry_len$:$/var/www/html/src/git-master/tree-walk.h$:$23$:$inline int (const struct name_entry *ne)
update_tree_entry$:$/var/www/html/src/git-master/tree-walk.c$:$75$:$void (struct tree_desc desc)
diagnose_invalid_sha1_path$:$/var/www/html/src/git-master/sha1_name.c$:$1195$:$void (const char *prefix, const char *filename, const unsigned char *tree_sha1, const char *object_name, int object_name_len)
git_config_from_blob_sha1$:$/var/www/html/src/git-master/config.c$:$1023$:$int (config_fn_t fn, const char *name, const unsigned char *sha1, void *data)
git_config_from_buf$:$/var/www/html/src/git-master/config.c$:$1006$:$int (config_fn_t fn, const char *name, const char *buf, size_t len, void *data)
config_buf_fgetc$:$/var/www/html/src/git-master/config.c$:$55$:$int (struct config_source conf)
config_buf_ungetc$:$/var/www/html/src/git-master/config.c$:$63$:$int (int c, struct config_source conf)
config_buf_ftell$:$/var/www/html/src/git-master/config.c$:$71$:$long (struct config_source conf)
git_daemon_config$:$/var/www/html/src/git-master/daemon.c$:$236$:$int (const char *var, const char *value, void *cb)
run_access_hook$:$/var/www/html/src/git-master/daemon.c$:$258$:$int (struct daemon_service service, const char *dir, const char *path)
STRARG$:$NA$:$NA$:$NA
finish_command$:$/var/www/html/src/git-master/run-command.c$:$547$:$int (struct child_process cmd)
strbuf_ltrim$:$/var/www/html/src/git-master/strbuf.c$:$98$:$void (struct strbuf sb)
daemonize$:$/var/www/html/src/git-master/daemon.c$:$1106$:$void (void)
setsid$:$NA$:$NA$:$NA
sanitize_stdfds$:$/var/www/html/src/git-master/setup.c$:$916$:$void (void)
store_pid$:$/var/www/html/src/git-master/daemon.c$:$1125$:$void (const char *path)
serve$:$/var/www/html/src/git-master/daemon.c$:$1134$:$int (struct string_list listen_addr, int listen_port, struct credentials cred)
socksetup$:$/var/www/html/src/git-master/daemon.c$:$978$:$void (struct string_list listen_addr, int listen_port, struct socketlist socklist)
setup_named_sock$:$/var/www/html/src/git-master/daemon.c$:$923$:$int (char *listen_addr, int listen_port, struct socketlist socklist)
gai_strerror$:$NA$:$NA$:$NA
setsockopt$:$NA$:$NA$:$NA
set_reuse_addr$:$/var/www/html/src/git-master/daemon.c$:$799$:$int (int sockfd)
ip2str$:$/var/www/html/src/git-master/daemon.c$:$815$:$const char * (int family, struct sockaddr sin, socklen_t len)
inet_pton$:$NA$:$NA$:$NA
drop_privileges$:$/var/www/html/src/git-master/daemon.c$:$1077$:$void (struct credentials cred)
initgroups$:$NA$:$NA$:$NA
setgid$:$NA$:$NA$:$NA
setuid$:$NA$:$NA$:$NA
service_loop$:$/var/www/html/src/git-master/daemon.c$:$995$:$int (struct socketlist socklist)
child_handler$:$/var/www/html/src/git-master/daemon.c$:$789$:$void (int signo)
check_dead_children$:$/var/www/html/src/git-master/daemon.c$:$717$:$void (void)
sleep$:$NA$:$NA$:$NA
handle$:$/var/www/html/src/git-master/daemon.c$:$739$:$void (int incoming, struct sockaddr addr, socklen_t addrlen)
kill_some_child$:$/var/www/html/src/git-master/daemon.c$:$703$:$void (void)
addrcmp$:$/var/www/html/src/git-master/daemon.c$:$651$:$int (const struct sockaddr_storage *s1, const struct sockaddr_storage *s2)
ntohs$:$NA$:$NA$:$NA
add_child$:$/var/www/html/src/git-master/daemon.c$:$682$:$void (struct child_process cld, struct sockaddr addr, socklen_t addrlen)
setup_git_directory$:$/var/www/html/src/git-master/setup.c$:$903$:$const char * (void)
setup_git_directory_gently$:$/var/www/html/src/git-master/setup.c$:$804$:$const char * (int *nongit_ok)
setup_git_directory_gently_1$:$/var/www/html/src/git-master/setup.c$:$698$:$const char * (int *nongit_ok)
setup_explicit_git_dir$:$/var/www/html/src/git-master/setup.c$:$471$:$const char * (const char *gitdirenv, char *cwd, int len, int *nongit_ok)
set_git_work_tree$:$/var/www/html/src/git-master/environment.c$:$192$:$void (const char *new_work_tree)
string_list_split$:$/var/www/html/src/git-master/string-list.c$:$260$:$int (struct string_list list, const char *string, int delim, int maxsplit)
string_list_append_nodup$:$/var/www/html/src/git-master/string-list.c$:$196$:$struct string_list_item (struct string_list list, char *string)
filter_string_list$:$/var/www/html/src/git-master/string-list.c$:$124$:$void (struct string_list list, int free_util, string_list_each_func_t want, void *cb_data)
canonicalize_ceiling_entry$:$/var/www/html/src/git-master/setup.c$:$670$:$int (struct string_list_item item, void *cb_data)
real_path_if_valid$:$/var/www/html/src/git-master/abspath.c$:$156$:$const char * (const char *path)
longest_ancestor_length$:$/var/www/html/src/git-master/path.c$:$641$:$int (const char *path, struct string_list prefixes)
get_device_or_die$:$/var/www/html/src/git-master/setup.c$:$651$:$dev_t (const char *path, const char *prefix, int prefix_len)
setup_discovered_git_dir$:$/var/www/html/src/git-master/setup.c$:$567$:$const char * (const char *gitdir, char *cwd, int offset, int len, int *nongit_ok)
setup_bare_git_dir$:$/var/www/html/src/git-master/setup.c$:$608$:$const char * (char *cwd, int offset, int len, int *nongit_ok)
setup_nongit$:$/var/www/html/src/git-master/setup.c$:$641$:$const char * (const char *cwd, int *nongit_ok)
reset_pack_idx_option$:$/var/www/html/src/git-master/pack-write.c$:$5$:$void (struct pack_idx_option opts)
git_pack_config$:$/var/www/html/src/git-master/fast-import.c$:$3284$:$int (const char *k, const char *v, void *cb)
git_config_ulong$:$/var/www/html/src/git-master/config.c$:$535$:$unsigned long (const char *name, const char *value)
git_parse_ulong$:$/var/www/html/src/git-master/config.c$:$497$:$int (const char *value, unsigned long *ret)
strtoumax$:$NA$:$NA$:$NA
maximum_unsigned_value_of_type$:$NA$:$NA$:$NA
git_default_config$:$/var/www/html/src/git-master/config.c$:$920$:$int (const char *var, const char *value, void *dummy)
git_default_core_config$:$/var/www/html/src/git-master/config.c$:$605$:$int (const char *var, const char *value)
git_config_pathname$:$/var/www/html/src/git-master/config.c$:$595$:$int (const char **dest, const char *var, const char *value)
getpagesize$:$NA$:$NA$:$NA
git_config_string$:$/var/www/html/src/git-master/config.c$:$587$:$int (const char **dest, const char *var, const char *value)
parse_whitespace_rule$:$/var/www/html/src/git-master/ws.c$:$25$:$unsigned (const char *string)
strspn$:$NA$:$NA$:$NA
git_ident_config$:$/var/www/html/src/git-master/ident.c$:$381$:$int (const char *var, const char *value, void *data)
git_default_i18n_config$:$/var/www/html/src/git-master/config.c$:$838$:$int (const char *var, const char *value)
git_default_branch_config$:$/var/www/html/src/git-master/config.c$:$850$:$int (const char *var, const char *value)
git_default_push_config$:$/var/www/html/src/git-master/config.c$:$880$:$int (const char *var, const char *value)
git_default_mailmap_config$:$/var/www/html/src/git-master/config.c$:$909$:$int (const char *var, const char *value)
git_default_advice_config$:$/var/www/html/src/git-master/advice.c$:$64$:$int (const char *var, const char *value)
alloc_objects$:$/var/www/html/src/git-master/fast-import.c$:$539$:$void (unsigned int cnt)
pool_calloc$:$/var/www/html/src/git-master/fast-import.c$:$631$:$void * (size_t count, size_t size)
pool_alloc$:$/var/www/html/src/git-master/fast-import.c$:$600$:$void * (size_t len)
start_packfile$:$/var/www/html/src/git-master/fast-import.c$:$856$:$void (void)
odb_mkstemp$:$/var/www/html/src/git-master/environment.c$:$218$:$int (char *template, size_t limit, const char *pattern)
git_mkstemp_mode$:$/var/www/html/src/git-master/wrapper.c$:$345$:$int (char *pattern, int mode)
git_mkstemps_mode$:$/var/www/html/src/git-master/wrapper.c$:$282$:$int (char *pattern, int suffix_len, int mode)
xmkstemp_mode$:$/var/www/html/src/git-master/wrapper.c$:$356$:$int (char *template, int mode)
sha1fd$:$/var/www/html/src/git-master/csum-file.c$:$122$:$struct sha1file (int fd, const char *name)
sha1write$:$/var/www/html/src/git-master/csum-file.c$:$89$:$int (struct sha1file f, void *buf, unsigned int count)
git_SHA1_Update$:$NA$:$NA$:$NA
flush$:$/var/www/html/src/git-master/csum-file.c$:$14$:$void (struct sha1file f, void *buf, unsigned int count)
display_throughput$:$/var/www/html/src/git-master/progress.c$:$126$:$void (struct progress progress, off_t total)
throughput_string$:$/var/www/html/src/git-master/progress.c$:$116$:$void (struct strbuf buf, off_t total, unsigned int rate)
strbuf_humanise_bytes$:$/var/www/html/src/git-master/strbuf.c$:$531$:$void (struct strbuf buf, off_t bytes)
display$:$/var/www/html/src/git-master/progress.c$:$73$:$int (struct progress progress, unsigned n, const char *done)
clear_progress_signal$:$/var/www/html/src/git-master/progress.c$:$65$:$void (void)
setitimer$:$NA$:$NA$:$NA
die_nicely$:$/var/www/html/src/git-master/fast-import.c$:$493$:$NORETURN void (const char *err, va_list params)
write_crash_report$:$/var/www/html/src/git-master/fast-import.c$:$404$:$void (const char *err)
getppid$:$NA$:$NA$:$NA
write_branch_report$:$/var/www/html/src/git-master/fast-import.c$:$376$:$void (FILE *rpt, struct branch b)
dump_marks_helper$:$/var/www/html/src/git-master/fast-import.c$:$1733$:$void (FILE *f, uintmax_t base, struct mark_set m)
end_packfile$:$/var/www/html/src/git-master/fast-import.c$:$946$:$void (void)
clear_delta_base_cache$:$/var/www/html/src/git-master/sha1_file.c$:$1956$:$void (void)
close_pack_windows$:$/var/www/html/src/git-master/sha1_file.c$:$669$:$void (struct packed_git p)
sha1close$:$/var/www/html/src/git-master/csum-file.c$:$56$:$int (struct sha1file f, unsigned char *result, unsigned int flags)
sha1flush$:$/var/www/html/src/git-master/csum-file.c$:$45$:$void (struct sha1file f)
git_SHA1_Final$:$NA$:$NA$:$NA
fsync_or_die$:$/var/www/html/src/git-master/write_or_die.c$:$52$:$void (int fd, const char *msg)
fsync$:$NA$:$NA$:$NA
fixup_pack_header_footer$:$/var/www/html/src/git-master/pack-write.c$:$213$:$void (int pack_fd, unsigned char *new_pack_sha1, const char *pack_name, uint32_t object_count, unsigned char *partial_pack_sha1, off_t partial_pack_offset)
git_SHA1_Init$:$NA$:$NA$:$NA
keep_pack$:$/var/www/html/src/git-master/fast-import.c$:$907$:$char * (const char *curr_index_name)
odb_pack_keep$:$/var/www/html/src/git-master/environment.c$:$240$:$int (char *name, size_t namesz, unsigned char *sha1)
move_temp_to_file$:$/var/www/html/src/git-master/sha1_file.c$:$2694$:$int (const char *tmpfile, const char *filename)
link$:$NA$:$NA$:$NA
create_index$:$/var/www/html/src/git-master/fast-import.c$:$884$:$const char * (void)
write_idx_file$:$/var/www/html/src/git-master/pack-write.c$:$45$:$const char * (const char *index_name, struct pack_idx_entry objects, int nr_objects, const struct pack_idx_option *opts, unsigned char *sha1)
sha1_compare$:$/var/www/html/src/git-master/pack-write.c$:$12$:$int (const void *_a, const void *_b)
sha1fd_check$:$/var/www/html/src/git-master/csum-file.c$:$127$:$struct sha1file (const char *name)
need_large_offset$:$/var/www/html/src/git-master/pack-write.c$:$27$:$int (off_t offset, const struct pack_idx_option *opts)
bsearch$:$NA$:$NA$:$NA
cmp_uint32$:$/var/www/html/src/git-master/pack-write.c$:$19$:$int (const void *a_, const void *b_)
unkeep_all_packs$:$/var/www/html/src/git-master/fast-import.c$:$933$:$void (void)
dump_marks$:$/var/www/html/src/git-master/fast-import.c$:$1753$:$void (void)
rollback_lock_file$:$/var/www/html/src/git-master/lockfile.c$:$274$:$void (struct lock_file lk)
ferror$:$NA$:$NA$:$NA
set_checkpoint_signal$:$/var/www/html/src/git-master/fast-import.c$:$526$:$void (void)
checkpoint_signal$:$/var/www/html/src/git-master/fast-import.c$:$521$:$void (int signo)
sigemptyset$:$NA$:$NA$:$NA
sigaction$:$NA$:$NA$:$NA
read_next_command$:$/var/www/html/src/git-master/fast-import.c$:$1843$:$int (void)
parse_argv$:$/var/www/html/src/git-master/fast-import.c$:$3319$:$void (void)
parse_one_option$:$/var/www/html/src/git-master/fast-import.c$:$3192$:$int (const char *option)
option_depth$:$/var/www/html/src/git-master/fast-import.c$:$3157$:$void (const char *depth)
ulong_arg$:$/var/www/html/src/git-master/fast-import.c$:$3148$:$unsigned long (const char *option, const char *arg)
option_active_branches$:$/var/www/html/src/git-master/fast-import.c$:$3164$:$void (const char *branches)
option_export_pack_edges$:$/var/www/html/src/git-master/fast-import.c$:$3183$:$void (const char *edges)
parse_one_feature$:$/var/www/html/src/git-master/fast-import.c$:$3228$:$int (const char *feature, int from_stream)
option_date_format$:$/var/www/html/src/git-master/fast-import.c$:$3136$:$void (const char *fmt)
option_import_marks$:$/var/www/html/src/git-master/fast-import.c$:$3118$:$void (const char *marks, int from_stream, int ignore_missing)
read_marks$:$/var/www/html/src/git-master/fast-import.c$:$1803$:$void (void)
fgets$:$NA$:$NA$:$NA
find_object$:$/var/www/html/src/git-master/fast-import.c$:$564$:$struct object_entry (unsigned char *sha1)
insert_object$:$/var/www/html/src/git-master/fast-import.c$:$574$:$struct object_entry (unsigned char *sha1)
insert_mark$:$/var/www/html/src/git-master/fast-import.c$:$646$:$void (uintmax_t idnum, struct object_entry oe)
make_fast_import_path$:$/var/www/html/src/git-master/fast-import.c$:$3108$:$char * (const char *path)
option_export_marks$:$/var/www/html/src/git-master/fast-import.c$:$3169$:$void (const char *marks)
option_cat_blob_fd$:$/var/www/html/src/git-master/fast-import.c$:$3175$:$void (const char *fd)
parse_cat_blob$:$/var/www/html/src/git-master/fast-import.c$:$2914$:$void (void)
find_mark$:$/var/www/html/src/git-master/fast-import.c$:$669$:$struct object_entry (uintmax_t idnum)
parse_mark_ref_eol$:$/var/www/html/src/git-master/fast-import.c$:$2236$:$uintmax_t (const char *p)
parse_mark_ref$:$/var/www/html/src/git-master/fast-import.c$:$2220$:$uintmax_t (const char *p, char **endptr)
cat_blob$:$/var/www/html/src/git-master/fast-import.c$:$2869$:$void (struct object_entry oe, unsigned char sha1[20])
gfi_unpack_entry$:$/var/www/html/src/git-master/fast-import.c$:$1280$:$void * (struct object_entry oe, unsigned long *sizep)
cat_blob_write$:$/var/www/html/src/git-master/fast-import.c$:$2863$:$void (const char *buf, unsigned long size)
strbuf_attach$:$/var/www/html/src/git-master/strbuf.c$:$56$:$void (struct strbuf sb, void *buf, size_t len, size_t alloc)
parse_new_blob$:$/var/www/html/src/git-master/fast-import.c$:$2051$:$void (void)
parse_mark$:$/var/www/html/src/git-master/fast-import.c$:$1902$:$void (void)
parse_and_store_blob$:$/var/www/html/src/git-master/fast-import.c$:$2030$:$void (struct last_object last, unsigned char *sha1out, uintmax_t mark)
parse_data$:$/var/www/html/src/git-master/fast-import.c$:$1912$:$int (struct strbuf sb, uintmax_t limit, uintmax_t *len_res)
strbuf_fread$:$/var/www/html/src/git-master/strbuf.c$:$330$:$size_t (struct strbuf sb, size_t size, FILE *f)
skip_optional_lf$:$/var/www/html/src/git-master/fast-import.c$:$1895$:$void (void)
store_object$:$/var/www/html/src/git-master/fast-import.c$:$1010$:$int (enum object_type type, struct strbuf dat, struct last_object last, unsigned char *sha1out, uintmax_t mark)
find_sha1_pack$:$/var/www/html/src/git-master/sha1_file.c$:$2392$:$struct packed_git (const unsigned char *sha1, struct packed_git packs)
diff_delta$:$/var/www/html/src/git-master/delta.h$:$57$:$inline void * (const void *src_buf, unsigned long src_bufsize, const void *trg_buf, unsigned long trg_bufsize, unsigned long *delta_size, unsigned long max_delta_size)
create_delta_index$:$/var/www/html/src/git-master/diff-delta.c$:$133$:$struct delta_index (const void *buf, unsigned long bufsize)
create_delta$:$/var/www/html/src/git-master/diff-delta.c$:$318$:$void * (const struct delta_index *index, const void *trg_buf, unsigned long trg_size, unsigned long *delta_size, unsigned long max_size)
free_delta_index$:$/var/www/html/src/git-master/diff-delta.c$:$298$:$void (struct delta_index index)
git_deflate_init$:$/var/www/html/src/git-master/zlib.c$:$158$:$void (git_zstream *strm, int level)
deflateInit$:$NA$:$NA$:$NA
git_deflate_bound$:$/var/www/html/src/git-master/zlib.c$:$153$:$unsigned long (git_zstream *strm, unsigned long size)
deflateBound$:$NA$:$NA$:$NA
git_deflate$:$/var/www/html/src/git-master/zlib.c$:$234$:$int (git_zstream *strm, int flush)
deflate$:$NA$:$NA$:$NA
git_deflate_end$:$/var/www/html/src/git-master/zlib.c$:$214$:$void (git_zstream *strm)
git_deflate_abort$:$/var/www/html/src/git-master/zlib.c$:$204$:$int (git_zstream *strm)
deflateEnd$:$NA$:$NA$:$NA
cycle_packfile$:$/var/www/html/src/git-master/fast-import.c$:$1004$:$void (void)
crc32_begin$:$/var/www/html/src/git-master/csum-file.c$:$181$:$void (struct sha1file f)
encode_in_pack_object_header$:$/var/www/html/src/git-master/pack-write.c$:$316$:$int (enum object_type type, uintmax_t size, unsigned char *hdr)
crc32_end$:$/var/www/html/src/git-master/csum-file.c$:$187$:$uint32_t (struct sha1file f)
strbuf_swap$:$/var/www/html/src/git-master/strbuf.h$:$20$:$inline void (struct strbuf a, struct strbuf b)
stream_blob$:$/var/www/html/src/git-master/fast-import.c$:$1153$:$void (uintmax_t len, unsigned char *sha1out, uintmax_t mark)
sha1file_checkpoint$:$/var/www/html/src/git-master/csum-file.c$:$161$:$void (struct sha1file f, struct sha1file_checkpoint checkpoint)
truncate_pack$:$/var/www/html/src/git-master/fast-import.c$:$1146$:$void (struct sha1file_checkpoint checkpoint)
sha1file_truncate$:$/var/www/html/src/git-master/csum-file.c$:$168$:$int (struct sha1file f, struct sha1file_checkpoint checkpoint)
ftruncate$:$NA$:$NA$:$NA
parse_ls$:$/var/www/html/src/git-master/fast-import.c$:$3038$:$void (struct branch b)
parse_treeish_dataref$:$/var/www/html/src/git-master/fast-import.c$:$2989$:$struct object_entry (const char **p)
new_tree_entry$:$/var/www/html/src/git-master/fast-import.c$:$803$:$struct tree_entry (void)
load_tree$:$/var/www/html/src/git-master/fast-import.c$:$1323$:$void (struct tree_entry root)
new_tree_content$:$/var/www/html/src/git-master/fast-import.c$:$747$:$struct tree_content (unsigned int cnt)
grow_tree_content$:$/var/www/html/src/git-master/fast-import.c$:$791$:$struct tree_content (struct tree_content t, int amt)
to_atom$:$/var/www/html/src/git-master/fast-import.c$:$688$:$struct atom_str (const char *s, unsigned short len)
unquote_c_style$:$/var/www/html/src/git-master/quote.c$:$351$:$int (struct strbuf sb, const char *quoted, const char **endp)
tree_content_get$:$/var/www/html/src/git-master/fast-import.c$:$1629$:$int (struct tree_entry root, const char *p, struct tree_entry leaf)
strncmp_icase$:$/var/www/html/src/git-master/dir.c$:$44$:$int (const char *a, const char *b, size_t count)
dup_tree_content$:$/var/www/html/src/git-master/fast-import.c$:$831$:$struct tree_content (struct tree_content s)
store_tree$:$/var/www/html/src/git-master/fast-import.c$:$1419$:$void (struct tree_entry root)
mktree$:$/var/www/html/src/git-master/fast-import.c$:$1391$:$void (struct tree_content t, int v, struct strbuf b)
tecmp0$:$/var/www/html/src/git-master/fast-import.c$:$1373$:$int (const void *_a, const void *_b)
tree_entry$:$/var/www/html/src/git-master/tree-walk.c$:$92$:$int (struct tree_desc desc, struct name_entry entry)
base_name_compare$:$/var/www/html/src/git-master/read-cache.c$:$369$:$int (const char *name1, int len1, int mode1, const char *name2, int len2, int mode2)
tecmp1$:$/var/www/html/src/git-master/fast-import.c$:$1382$:$int (const void *_a, const void *_b)
release_tree_entry$:$/var/www/html/src/git-master/fast-import.c$:$823$:$void (struct tree_entry e)
release_tree_content_recursive$:$/var/www/html/src/git-master/fast-import.c$:$783$:$void (struct tree_content t)
release_tree_content$:$/var/www/html/src/git-master/fast-import.c$:$775$:$void (struct tree_content t)
hc_entries$:$/var/www/html/src/git-master/fast-import.c$:$741$:$unsigned int (unsigned int cnt)
print_ls$:$/var/www/html/src/git-master/fast-import.c$:$3011$:$void (int mode, const unsigned char *sha1, const char *path)
S_ISGITLINK$:$NA$:$NA$:$NA
quote_c_style$:$/var/www/html/src/git-master/quote.c$:$263$:$size_t (const char *name, struct strbuf sb, FILE *fp, int nodq)
quote_c_style_counted$:$/var/www/html/src/git-master/quote.c$:$209$:$size_t (const char *name, ssize_t maxlen, struct strbuf sb, FILE *fp, int no_dq)
next_quote_pos$:$/var/www/html/src/git-master/quote.c$:$185$:$size_t (const char *s, ssize_t maxlen)
sq_must_quote$:$/var/www/html/src/git-master/quote.c$:$177$:$inline int (char c)
EMIT$:$NA$:$NA$:$NA
EMITBUF$:$NA$:$NA$:$NA
parse_new_commit$:$/var/www/html/src/git-master/fast-import.c$:$2655$:$void (void)
lookup_branch$:$/var/www/html/src/git-master/fast-import.c$:$707$:$struct branch (const char *name)
new_branch$:$/var/www/html/src/git-master/fast-import.c$:$718$:$struct branch (const char *name)
parse_ident$:$/var/www/html/src/git-master/fast-import.c$:$1985$:$char * (const char *buf)
validate_raw_date$:$/var/www/html/src/git-master/fast-import.c$:$1959$:$int (const char *src, char *result, int maxlen)
parse_date$:$/var/www/html/src/git-master/date.c$:$736$:$int (const char *date, char *result, int maxlen)
date_string$:$/var/www/html/src/git-master/date.c$:$606$:$int (unsigned long date, int offset, char *buf, int len)
datestamp$:$/var/www/html/src/git-master/date.c$:$767$:$void (char *buf, int bufsize)
localtime$:$NA$:$NA$:$NA
parse_from$:$/var/www/html/src/git-master/fast-import.c$:$2572$:$int (struct branch b)
parse_from_commit$:$/var/www/html/src/git-master/fast-import.c$:$2545$:$void (struct branch b, char *buf, unsigned long size)
parse_from_existing$:$/var/www/html/src/git-master/fast-import.c$:$2556$:$void (struct branch b)
parse_merge$:$/var/www/html/src/git-master/fast-import.c$:$2616$:$struct hash_list (unsigned int *count)
unload_one_branch$:$/var/www/html/src/git-master/fast-import.c$:$2058$:$void (void)
load_branch$:$/var/www/html/src/git-master/fast-import.c$:$2090$:$void (struct branch b)
convert_num_notes_to_fanout$:$/var/www/html/src/git-master/fast-import.c$:$2102$:$unsigned char (uintmax_t num_notes)
file_change_m$:$/var/www/html/src/git-master/fast-import.c$:$2263$:$void (struct branch b)
parse_mark_ref_space$:$/var/www/html/src/git-master/fast-import.c$:$2251$:$uintmax_t (const char **p)
tree_content_remove$:$/var/www/html/src/git-master/fast-import.c$:$1568$:$int (struct tree_entry root, const char *p, struct tree_entry backup_leaf)
tree_content_replace$:$/var/www/html/src/git-master/fast-import.c$:$1461$:$void (struct tree_entry root, const unsigned char *sha1, const uint16_t mode, struct tree_content newtree)
tree_content_set$:$/var/www/html/src/git-master/fast-import.c$:$1476$:$int (struct tree_entry root, const char *p, const unsigned char *sha1, const uint16_t mode, struct tree_content subtree)
file_change_d$:$/var/www/html/src/git-master/fast-import.c$:$2366$:$void (struct branch b)
file_change_cr$:$/var/www/html/src/git-master/fast-import.c$:$2381$:$void (struct branch b, int rename)
note_change_n$:$/var/www/html/src/git-master/fast-import.c$:$2434$:$void (struct branch b, unsigned char *old_fanout)
change_note_fanout$:$/var/www/html/src/git-master/fast-import.c$:$2203$:$uintmax_t (struct tree_entry root, unsigned char fanout)
do_change_note_fanout$:$/var/www/html/src/git-master/fast-import.c$:$2126$:$uintmax_t (struct tree_entry orig_root, struct tree_entry root, char *hex_sha1, unsigned int hex_sha1_len, char *fullpath, unsigned int fullpath_len, unsigned char fanout)
construct_path_with_fanout$:$/var/www/html/src/git-master/fast-import.c$:$2110$:$void (const char *hex_sha1, unsigned char fanout, char *path)
file_change_deleteall$:$/var/www/html/src/git-master/fast-import.c$:$2536$:$void (struct branch b)
parse_new_tag$:$/var/www/html/src/git-master/fast-import.c$:$2755$:$void (void)
pool_strdup$:$/var/www/html/src/git-master/fast-import.c$:$639$:$char * (const char *s)
parse_reset_branch$:$/var/www/html/src/git-master/fast-import.c$:$2838$:$void (void)
parse_checkpoint$:$/var/www/html/src/git-master/fast-import.c$:$3094$:$void (void)
parse_progress$:$/var/www/html/src/git-master/fast-import.c$:$3100$:$void (void)
fwrite$:$NA$:$NA$:$NA
parse_feature$:$/var/www/html/src/git-master/fast-import.c$:$3258$:$void (void)
parse_option$:$/var/www/html/src/git-master/fast-import.c$:$3271$:$void (void)
checkpoint$:$/var/www/html/src/git-master/fast-import.c$:$3083$:$void (void)
dump_branches$:$/var/www/html/src/git-master/fast-import.c$:$1707$:$void (void)
update_branch$:$/var/www/html/src/git-master/fast-import.c$:$1671$:$int (struct branch b)
read_ref$:$/var/www/html/src/git-master/refs.c$:$1472$:$int (const char *refname, unsigned char *sha1)
read_ref_full$:$/var/www/html/src/git-master/refs.c$:$1465$:$int (const char *refname, unsigned char *sha1, int reading, int *flags)
lock_any_ref_for_update$:$/var/www/html/src/git-master/refs.c$:$2127$:$struct ref_lock (const char *refname, const unsigned char *old_sha1, int flags)
lookup_commit_reference_gently$:$/var/www/html/src/git-master/commit.c$:$34$:$struct commit (const unsigned char *sha1, int quiet)
unlock_ref$:$/var/www/html/src/git-master/refs.c$:$2624$:$void (struct ref_lock lock)
in_merge_bases$:$/var/www/html/src/git-master/commit.c$:$997$:$int (struct commit commit, struct commit reference)
in_merge_bases_many$:$/var/www/html/src/git-master/commit.c$:$974$:$int (struct commit commit, int nr_reference, struct commit reference)
paint_down_to_common$:$/var/www/html/src/git-master/commit.c$:$732$:$struct commit_list (struct commit one, int n, struct commit twos)
write_ref_sha1$:$/var/www/html/src/git-master/refs.c$:$2741$:$int (struct ref_lock lock, const unsigned char *sha1, const char *logmsg)
is_branch$:$/var/www/html/src/git-master/refs.c$:$2736$:$int (const char *refname)
close_ref$:$/var/www/html/src/git-master/refs.c$:$2608$:$int (struct ref_lock lock)
clear_loose_ref_cache$:$/var/www/html/src/git-master/refs.c$:$907$:$void (struct ref_cache refs)
log_ref_write$:$/var/www/html/src/git-master/refs.c$:$2699$:$int (const char *refname, const unsigned char *old_sha1, const unsigned char *new_sha1, const char *msg)
is_bare_repository$:$/var/www/html/src/git-master/environment.c$:$153$:$int (void)
log_ref_setup$:$/var/www/html/src/git-master/refs.c$:$2660$:$int (const char *refname, char *logfile, int bufsize)
remove_empty_directories$:$/var/www/html/src/git-master/refs.c$:$1931$:$int (const char *file)
remove_dir_recursively$:$/var/www/html/src/git-master/dir.c$:$1530$:$int (struct strbuf path, int flag)
remove_dir_recurse$:$/var/www/html/src/git-master/dir.c$:$1467$:$int (struct strbuf path, int flag, int *kept_up)
resolve_gitlink_ref$:$/var/www/html/src/git-master/refs.c$:$1275$:$int (const char *path, const char *refname, unsigned char *sha1)
get_ref_cache$:$/var/www/html/src/git-master/refs.c$:$933$:$struct ref_cache (const char *submodule)
resolve_gitlink_ref_recursive$:$/var/www/html/src/git-master/refs.c$:$1236$:$int (struct ref_cache refs, const char *refname, unsigned char *sha1, int recursion)
git_path_submodule$:$/var/www/html/src/git-master/cache.h$:$669$:$char * (const char *path, const char *fmt, ...)
resolve_gitlink_packed_ref$:$/var/www/html/src/git-master/refs.c$:$1222$:$int (struct ref_cache refs, const char *refname, unsigned char *sha1)
get_packed_refs$:$/var/www/html/src/git-master/refs.c$:$1111$:$struct ref_dir (struct ref_cache refs)
find_ref$:$/var/www/html/src/git-master/refs.c$:$459$:$struct ref_entry (struct ref_dir dir, const char *refname)
rmdir$:$NA$:$NA$:$NA
git_committer_info$:$/var/www/html/src/git-master/ident.c$:$350$:$const char * (int flag)
fmt_ident$:$/var/www/html/src/git-master/ident.c$:$277$:$const char * (const char *name, const char *email, const char *date_str, int flag)
ident_default_name$:$/var/www/html/src/git-master/ident.c$:$105$:$const char * (void)
copy_gecos$:$/var/www/html/src/git-master/ident.c$:$26$:$void (const struct passwd *w, struct strbuf name)
get_gecos$:$NA$:$NA$:$NA
xgetpwuid_self$:$/var/www/html/src/git-master/wrapper.c$:$433$:$struct passwd (void)
ident_default_email$:$/var/www/html/src/git-master/ident.c$:$114$:$const char * (void)
copy_email$:$/var/www/html/src/git-master/ident.c$:$91$:$void (const struct passwd *pw, struct strbuf email)
add_mailname_host$:$/var/www/html/src/git-master/ident.c$:$46$:$int (struct strbuf buf)
add_domainname$:$/var/www/html/src/git-master/ident.c$:$73$:$void (struct strbuf out)
gethostname$:$NA$:$NA$:$NA
ident_default_date$:$/var/www/html/src/git-master/ident.c$:$130$:$const char * (void)
strbuf_addstr_without_crud$:$/var/www/html/src/git-master/ident.c$:$155$:$void (struct strbuf sb, const char *src)
crud$:$/var/www/html/src/git-master/ident.c$:$137$:$int (unsigned char c)
copy_msg$:$/var/www/html/src/git-master/refs.c$:$2639$:$int (char *buf, const char *msg)
head_ref$:$/var/www/html/src/git-master/refs.c$:$1749$:$int (each_ref_fn fn, void *cb_data)
do_head_ref$:$/var/www/html/src/git-master/refs.c$:$1731$:$int (const char *submodule, each_ref_fn fn, void *cb_data)
commit_ref$:$/var/www/html/src/git-master/refs.c$:$2616$:$int (struct ref_lock lock)
dump_tags$:$/var/www/html/src/git-master/fast-import.c$:$1718$:$void (void)
lock_ref_sha1$:$/var/www/html/src/git-master/refs.c$:$2118$:$struct ref_lock (const char *refname, const unsigned char *old_sha1)
pack_report$:$/var/www/html/src/git-master/sha1_file.c$:$460$:$void (void)
sz_fmt$:$/var/www/html/src/git-master/sha1_file.c$:$35$:$inline uintmax_t (size_t s)
handle_internal_command$:$/var/www/html/src/git-master/git.c$:$312$:$void (int argc, const char **argv)
cmd_version$:$/var/www/html/src/git-master/help.c$:$396$:$int (int argc, const char **argv, const char *prefix)
run_builtin$:$/var/www/html/src/git-master/git.c$:$259$:$int (struct cmd_struct p, int argc, const char **argv)
check_pager_config$:$/var/www/html/src/git-master/pager.c$:$167$:$int (const char *cmd)
pager_command_config$:$/var/www/html/src/git-master/pager.c$:$151$:$int (const char *var, const char *value, void *data)
git_config_maybe_bool$:$/var/www/html/src/git-master/config.c$:$560$:$int (const char *name, const char *value)
trace_repo_setup$:$/var/www/html/src/git-master/trace.c$:$157$:$void (const char *prefix)
trace_printf_key$:$NA$:$NA$:$NA
quote_crnl$:$/var/www/html/src/git-master/trace.c$:$133$:$const char * (const char *path)
commit_pager_choice$:$/var/www/html/src/git-master/git.c$:$24$:$void (void)
setup_pager$:$/var/www/html/src/git-master/pager.c$:$63$:$void (void)
git_pager$:$/var/www/html/src/git-master/pager.c$:$40$:$const char * (int stdout_is_tty)
isatty$:$NA$:$NA$:$NA
pager_in_use$:$/var/www/html/src/git-master/pager.c$:$101$:$int (void)
term_columns$:$/var/www/html/src/git-master/pager.c$:$113$:$int (void)
ioctl$:$NA$:$NA$:$NA
wait_for_pager_signal$:$/var/www/html/src/git-master/pager.c$:$33$:$void (int signo)
wait_for_pager$:$/var/www/html/src/git-master/pager.c$:$23$:$void (void)
setup_work_tree$:$/var/www/html/src/git-master/setup.c$:$361$:$void (void)
relative_path$:$/var/www/html/src/git-master/path.c$:$443$:$const char * (const char *in, const char *prefix, struct strbuf sb)
fileno$:$NA$:$NA$:$NA
S_ISFIFO$:$NA$:$NA$:$NA
S_ISSOCK$:$NA$:$NA$:$NA
handle_options$:$/var/www/html/src/git-master/git.c$:$37$:$int (const char ***argv, int *argc, int *envchanged)
git_set_argv_exec_path$:$/var/www/html/src/git-master/exec_cmd.c$:$60$:$void (const char *exec_path)
puts$:$NA$:$NA$:$NA
git_exec_path$:$/var/www/html/src/git-master/exec_cmd.c$:$71$:$const char * (void)
git_config_push_parameter$:$/var/www/html/src/git-master/config.c$:$151$:$void (const char *text)
set_alternate_shallow_file$:$/var/www/html/src/git-master/shallow.c$:$9$:$void (const char *path)
list_common_cmds_help$:$/var/www/html/src/git-master/help.c$:$224$:$void (void)
mput_char$:$/var/www/html/src/git-master/help.h$:$13$:$inline void (char c, unsigned int num)
setup_path$:$/var/www/html/src/git-master/exec_cmd.c$:$98$:$void (void)
add_path$:$/var/www/html/src/git-master/exec_cmd.c$:$86$:$void (struct strbuf out, const char *path)
run_argv$:$/var/www/html/src/git-master/git.c$:$494$:$int (int *argcp, const char ***argv)
execv_dashed_external$:$/var/www/html/src/git-master/git.c$:$458$:$void (const char **argv)
run_command_v_opt$:$/var/www/html/src/git-master/run-command.c$:$574$:$int (const char **argv, int opt)
prepare_run_command_v_opt$:$/var/www/html/src/git-master/run-command.c$:$560$:$void (struct child_process cmd, const char **argv, int opt)
run_command$:$/var/www/html/src/git-master/run-command.c$:$552$:$int (struct child_process cmd)
handle_alias$:$/var/www/html/src/git-master/git.c$:$167$:$int (int *argcp, const char ***argv)
alias_lookup$:$/var/www/html/src/git-master/alias.c$:$17$:$char * (const char *alias)
alias_lookup_cb$:$/var/www/html/src/git-master/alias.c$:$6$:$int (const char *k, const char *v, void *cb)
split_cmdline$:$/var/www/html/src/git-master/alias.c$:$32$:$int (char *cmdline, const char ***argv)
split_cmdline_strerror$:$/var/www/html/src/git-master/alias.c$:$85$:$const char * (int split_cmdline_errno)
help_unknown_cmd$:$/var/www/html/src/git-master/help.c$:$293$:$const char * (const char *cmd)
git_unknown_cmd_config$:$/var/www/html/src/git-master/help.c$:$253$:$int (const char *var, const char *value, void *cb)
add_cmdname$:$/var/www/html/src/git-master/help.c$:$12$:$void (struct cmdnames cmds, const char *name, int len)
load_command_list$:$/var/www/html/src/git-master/help.c$:$169$:$void (const char *prefix, struct cmdnames main_cmds, struct cmdnames other_cmds)
list_commands_in_dir$:$/var/www/html/src/git-master/help.c$:$129$:$void (struct cmdnames cmds, const char *path, const char *prefix)
is_executable$:$/var/www/html/src/git-master/help.c$:$102$:$int (const char *name)
cmdname_compare$:$/var/www/html/src/git-master/help.c$:$34$:$int (const void *a_, const void *b_)
uniq$:$/var/www/html/src/git-master/help.c$:$41$:$void (struct cmdnames cmds)
exclude_cmds$:$/var/www/html/src/git-master/help.c$:$58$:$void (struct cmdnames cmds, struct cmdnames excludes)
add_cmd_list$:$/var/www/html/src/git-master/help.c$:$273$:$void (struct cmdnames cmds, struct cmdnames old)
levenshtein$:$/var/www/html/src/git-master/levenshtein.c$:$41$:$int (const char *string1, const char *string2, int w, int s, int a, int d)
levenshtein_compare$:$/var/www/html/src/git-master/help.c$:$264$:$int (const void *p1, const void *p2)
SIMILAR_ENOUGH$:$NA$:$NA$:$NA
clean_cmdnames$:$/var/www/html/src/git-master/help.c$:$24$:$void (struct cmdnames cmds)
die_webcgi$:$/var/www/html/src/git-master/http-backend.c$:$509$:$NORETURN void (const char *err, va_list params)
http_status$:$/var/www/html/src/git-master/http-backend.c$:$76$:$void (unsigned code, const char *msg)
hdr_nocache$:$/var/www/html/src/git-master/http-backend.c$:$97$:$void (void)
hdr_str$:$/var/www/html/src/git-master/http-backend.c$:$81$:$void (const char *name, const char *value)
format_write$:$NA$:$NA$:$NA
end_headers$:$/var/www/html/src/git-master/http-backend.c$:$112$:$void (void)
vreportf$:$/var/www/html/src/git-master/usage.c$:$9$:$void (const char *prefix, const char *err, va_list params)
getdir$:$/var/www/html/src/git-master/http-backend.c$:$524$:$char * (void)
end_url_with_slash$:$/var/www/html/src/git-master/url.c$:$120$:$void (struct strbuf buf, const char *url)
not_found$:$NA$:$NA$:$NA
http_config$:$/var/www/html/src/git-master/http-backend.c$:$222$:$int (const char *var, const char *value, void *cb)
walker_targets_stdin$:$/var/www/html/src/git-master/walker.c$:$215$:$int (char ***target, const char ***write_ref)
str_end_url_with_slash$:$/var/www/html/src/git-master/url.c$:$127$:$void (const char *url, char **dest)
http_init$:$/var/www/html/src/git-master/http.c$:$340$:$void (struct remote remote, const char *url, int proactive_auth)
http_options$:$/var/www/html/src/git-master/http.c$:$144$:$int (const char *var, const char *value, void *cb)
curl_global_init$:$NA$:$NA$:$NA
curl_slist_append$:$NA$:$NA$:$NA
curl_multi_init$:$NA$:$NA$:$NA
set_from_env$:$/var/www/html/src/git-master/http.c$:$333$:$void (const char **var, const char *envname)
get_curl_handle$:$/var/www/html/src/git-master/http.c$:$258$:$CURL * (void)
curl_easy_init$:$NA$:$NA$:$NA
curl_easy_setopt$:$NA$:$NA$:$NA
init_curl_http_auth$:$/var/www/html/src/git-master/http.c$:$218$:$void (CURL *result)
credential_fill$:$/var/www/html/src/git-master/credential.c$:$266$:$void (struct credential c)
credential_apply_config$:$/var/www/html/src/git-master/credential.c$:$86$:$void (struct credential c)
credential_config_callback$:$/var/www/html/src/git-master/credential.c$:$37$:$int (const char *var, const char *value, void *data)
proto_is_http$:$/var/www/html/src/git-master/credential.c$:$79$:$int (const char *s)
credential_do$:$/var/www/html/src/git-master/credential.c$:$246$:$int (struct credential c, const char *helper, const char *operation)
run_credential_helper$:$/var/www/html/src/git-master/credential.c$:$205$:$int (struct credential c, const char *cmd, int want_output)
credential_write$:$/var/www/html/src/git-master/credential.c$:$196$:$void (const struct credential *c, FILE *fp)
credential_write_item$:$/var/www/html/src/git-master/credential.c$:$189$:$void (FILE *fp, const char *key, const char *value)
credential_getpass$:$/var/www/html/src/git-master/credential.c$:$132$:$void (struct credential c)
credential_ask_one$:$/var/www/html/src/git-master/credential.c$:$112$:$char * (const char *what, struct credential c, int flags)
credential_describe$:$/var/www/html/src/git-master/credential.c$:$99$:$void (struct credential c, struct strbuf out)
git_prompt$:$/var/www/html/src/git-master/prompt.c$:$44$:$char * (const char *prompt, int flags)
do_askpass$:$/var/www/html/src/git-master/prompt.c$:$7$:$char * (const char *cmd, const char *prompt)
git_terminal_prompt$:$NA$:$NA$:$NA
has_cert_password$:$/var/www/html/src/git-master/http.c$:$245$:$int (void)
git_user_agent$:$/var/www/html/src/git-master/version.c$:$7$:$const char * (void)
get_http_walker$:$/var/www/html/src/git-master/http-walker.c$:$562$:$struct walker (const char *url)
walker_fetch$:$/var/www/html/src/git-master/walker.c$:$253$:$int (struct walker walker, int targets, char **target, const char **write_ref, const char *write_ref_log_details)
mark_complete$:$/var/www/html/src/git-master/walker.c$:$205$:$int (const char *path, const unsigned char *sha1, int flag, void *cb_data)
interpret_target$:$/var/www/html/src/git-master/walker.c$:$189$:$int (struct walker walker, char *target, unsigned char *sha1)
alloc_ref$:$/var/www/html/src/git-master/remote.c$:$881$:$struct ref (const char *name)
process$:$/var/www/html/src/git-master/walker.c$:$139$:$int (struct walker walker, struct object obj)
object_list_insert$:$/var/www/html/src/git-master/object.c$:$247$:$struct object_list (struct object item, struct object_list list_p)
lookup_unknown_object$:$/var/www/html/src/git-master/object.c$:$137$:$struct object (const unsigned char *sha1)
loop$:$/var/www/html/src/git-master/walker.c$:$160$:$int (struct walker walker)
report_missing$:$/var/www/html/src/git-master/walker.c$:$18$:$void (const struct object *obj)
process_object$:$/var/www/html/src/git-master/walker.c$:$114$:$int (struct walker walker, struct object obj)
process_commit$:$/var/www/html/src/git-master/walker.c$:$72$:$int (struct walker walker, struct commit commit)
walker_say$:$/var/www/html/src/git-master/walker.c$:$12$:$void (struct walker walker, const char *fmt, const char *hex)
process_tree$:$/var/www/html/src/git-master/walker.c$:$31$:$int (struct walker walker, struct tree tree)
parse_tree$:$/var/www/html/src/git-master/tree.c$:$208$:$int (struct tree item)
parse_tree_buffer$:$/var/www/html/src/git-master/tree.c$:$197$:$int (struct tree item, void *buffer, unsigned long size)
lookup_blob$:$/var/www/html/src/git-master/blob.c$:$6$:$struct blob (const unsigned char *sha1)
process_tag$:$/var/www/html/src/git-master/walker.c$:$104$:$int (struct walker walker, struct tag tag)
parse_tag$:$/var/www/html/src/git-master/tag.c$:$131$:$int (struct tag item)
parse_tag_buffer$:$/var/www/html/src/git-master/tag.c$:$71$:$int (struct tag item, const void *data, unsigned long size)
lookup_tag$:$/var/www/html/src/git-master/tag.c$:$39$:$struct tag (const unsigned char *sha1)
parse_tag_date$:$/var/www/html/src/git-master/tag.c$:$54$:$unsigned long (const char *buf, const char *tail)
walker_targets_free$:$/var/www/html/src/git-master/walker.c$:$244$:$void (int targets, char **target, const char **write_ref)
walker_free$:$/var/www/html/src/git-master/walker.c$:$316$:$void (struct walker walker)
http_cleanup$:$/var/www/html/src/git-master/http.c$:$419$:$void (void)
curl_multi_remove_handle$:$NA$:$NA$:$NA
curl_easy_cleanup$:$NA$:$NA$:$NA
curl_multi_cleanup$:$NA$:$NA$:$NA
curl_global_cleanup$:$NA$:$NA$:$NA
curl_slist_free_all$:$NA$:$NA$:$NA
locking_available$:$/var/www/html/src/git-master/http-push.c$:$1200$:$int (void)
xml_entities$:$/var/www/html/src/git-master/http-push.c$:$176$:$char * (const char *s)
strbuf_addstr_xml_quoted$:$/var/www/html/src/git-master/strbuf.c$:$468$:$void (struct strbuf buf, const char *s)
get_active_slot$:$/var/www/html/src/git-master/http.c$:$464$:$struct active_request_slot (void)
curl_setup_http$:$/var/www/html/src/git-master/http-push.c$:$192$:$void (CURL *curl, const char *url, const char *custom_req, struct buffer buffer, curl_write_callback write_fn)
fread_buffer$:$/var/www/html/src/git-master/http.c$:$68$:$size_t (char *ptr, size_t eltsize, size_t nmemb, void *buffer_)
ioctl_buffer$:$/var/www/html/src/git-master/http.c$:$82$:$curlioerr (CURL *handle, int cmd, void *clientp)
fwrite_buffer$:$/var/www/html/src/git-master/http.c$:$100$:$size_t (char *ptr, size_t eltsize, size_t nmemb, void *buffer_)
start_active_slot$:$/var/www/html/src/git-master/http.c$:$531$:$int (struct active_request_slot slot)
curl_multi_add_handle$:$NA$:$NA$:$NA
curl_multi_perform$:$NA$:$NA$:$NA
run_active_slot$:$/var/www/html/src/git-master/http.c$:$614$:$void (struct active_request_slot slot)
step_active_slots$:$/var/www/html/src/git-master/http.c$:$599$:$void (void)
process_curl_messages$:$/var/www/html/src/git-master/http.c$:$115$:$void (void)
curl_multi_info_read$:$NA$:$NA$:$NA
finish_active_slot$:$/var/www/html/src/git-master/http.c$:$697$:$void (struct active_request_slot slot)
closedown_active_slot$:$/var/www/html/src/git-master/http.c$:$675$:$void (struct active_request_slot slot)
curl_easy_getinfo$:$NA$:$NA$:$NA
fill_active_slots$:$/var/www/html/src/git-master/http.c$:$574$:$void (void)
curl_multi_timeout$:$NA$:$NA$:$NA
FD_ZERO$:$NA$:$NA$:$NA
curl_multi_fdset$:$NA$:$NA$:$NA
select$:$NA$:$NA$:$NA
curl_easy_perform$:$NA$:$NA$:$NA
XML_ParserCreate$:$NA$:$NA$:$NA
handle_lockprop_ctx$:$/var/www/html/src/git-master/http-push.c$:$744$:$void (struct xml_ctx ctx, int tag_closed)
XML_SetUserData$:$NA$:$NA$:$NA
XML_SetElementHandler$:$NA$:$NA$:$NA
xml_start_tag$:$/var/www/html/src/git-master/http-push.c$:$794$:$void (void *userData, const char *name, const char **atts)
xml_end_tag$:$/var/www/html/src/git-master/http-push.c$:$821$:$void (void *userData, const char *name)
XML_Parse$:$NA$:$NA$:$NA
XML_ErrorString$:$NA$:$NA$:$NA
XML_GetErrorCode$:$NA$:$NA$:$NA
XML_ParserFree$:$NA$:$NA$:$NA
cleanup$:$/var/www/html/src/git-master/http-walker.c$:$542$:$void (struct walker walker)
remove_locks_on_signal$:$/var/www/html/src/git-master/http-push.c$:$1013$:$void (int signo)
remove_locks$:$/var/www/html/src/git-master/http-push.c$:$1001$:$void (void)
unlock_remote$:$/var/www/html/src/git-master/http-push.c$:$956$:$int (struct remote_lock lock)
get_dav_token_headers$:$/var/www/html/src/git-master/http-push.c$:$211$:$struct curl_slist (struct remote_lock lock, enum dav_header_flag options)
curl_setup_http_get$:$/var/www/html/src/git-master/http-push.c$:$183$:$void (CURL *curl, const char *url, const char *custom_req)
fwrite_null$:$/var/www/html/src/git-master/http.c$:$109$:$size_t (char *ptr, size_t eltsize, size_t nmemb, void *strbuf)
remote_exists$:$/var/www/html/src/git-master/http-push.c$:$1539$:$int (const char *path)
http_get_strbuf$:$/var/www/html/src/git-master/http.c$:$922$:$int (const char *url, struct strbuf type, struct strbuf result, int options)
http_request_reauth$:$/var/www/html/src/git-master/http.c$:$895$:$int (const char *url, struct strbuf type, void *result, int target, int options)
http_request$:$/var/www/html/src/git-master/http.c$:$827$:$int (const char *url, struct strbuf type, void *result, int target, int options)
handle_curl_result$:$/var/www/html/src/git-master/http.c$:$778$:$int (struct slot_results results)
credential_approve$:$/var/www/html/src/git-master/credential.c$:$286$:$void (struct credential c)
missing_target$:$NA$:$NA$:$NA
credential_reject$:$/var/www/html/src/git-master/credential.c$:$302$:$void (struct credential c)
curl_easy_strerror$:$NA$:$NA$:$NA
lock_remote$:$/var/www/html/src/git-master/http-push.c$:$846$:$struct remote_lock (const char *path, long timeout)
fetch_indices$:$/var/www/html/src/git-master/http-push.c$:$704$:$int (void)
http_get_info_packs$:$/var/www/html/src/git-master/http.c$:$1049$:$int (const char *base_url, struct packed_git packs_head)
fetch_and_setup_pack_index$:$/var/www/html/src/git-master/http.c$:$1008$:$int (struct packed_git packs_head, unsigned char *sha1, const char *base_url)
has_pack_index$:$/var/www/html/src/git-master/sha1_file.c$:$2908$:$int (const unsigned char *sha1)
sha1_pack_index_name$:$/var/www/html/src/git-master/sha1_file.c$:$232$:$char * (const unsigned char *sha1)
sha1_get_pack_name$:$/var/www/html/src/git-master/sha1_file.c$:$198$:$char * (const unsigned char *sha1, char **name, char **base, const char *which)
parse_pack_index$:$/var/www/html/src/git-master/sha1_file.c$:$988$:$struct packed_git (unsigned char *sha1, const char *idx_path)
fetch_pack_index$:$/var/www/html/src/git-master/http.c$:$983$:$char * (unsigned char *sha1, const char *base_url)
http_get_file$:$/var/www/html/src/git-master/http.c$:$936$:$int (const char *url, const char *filename, int options)
verify_pack_index$:$/var/www/html/src/git-master/pack-check.c$:$144$:$int (struct packed_git p)
close_pack_index$:$/var/www/html/src/git-master/sha1_file.c$:$694$:$void (struct packed_git p)
get_local_heads$:$/var/www/html/src/git-master/remote.c$:$1842$:$struct ref (void)
get_dav_remote_heads$:$/var/www/html/src/git-master/http-push.c$:$1454$:$void (void)
remote_ls$:$/var/www/html/src/git-master/http-push.c$:$1117$:$void (const char *path, int flags, void (*userFunc) (struct remote_ls_ctx ls), void *userData)
handle_remote_ls_ctx$:$/var/www/html/src/git-master/http-push.c$:$1057$:$void (struct xml_ctx ctx, int tag_closed)
XML_SetCharacterDataHandler$:$NA$:$NA$:$NA
xml_cdata$:$/var/www/html/src/git-master/http-push.c$:$839$:$void (void *userData, const XML_Char *s, int len)
process_ls_ref$:$/var/www/html/src/git-master/http-push.c$:$1046$:$void (struct remote_ls_ctx ls)
one_remote_ref$:$/var/www/html/src/git-master/http-push.c$:$1422$:$void (const char *refname)
http_fetch_ref$:$/var/www/html/src/git-master/http.c$:$960$:$int (const char *base, struct ref ref)
quote_ref_url$:$/var/www/html/src/git-master/http.c$:$742$:$char * (const char *base, const char *ref)
needs_quote$:$/var/www/html/src/git-master/http.c$:$730$:$inline int (int ch)
strbuf_rtrim$:$/var/www/html/src/git-master/strbuf.c$:$91$:$void (struct strbuf sb)
add_fetch_request$:$/var/www/html/src/git-master/http-push.c$:$633$:$void (struct object obj)
check_locks$:$/var/www/html/src/git-master/http-push.c$:$475$:$void (void)
refresh_lock$:$/var/www/html/src/git-master/http-push.c$:$442$:$int (struct remote_lock lock)
get_remote_object_list$:$/var/www/html/src/git-master/http-push.c$:$1187$:$void (unsigned char parent)
process_ls_object$:$/var/www/html/src/git-master/http-push.c$:$1024$:$void (struct remote_ls_ctx ls)
one_remote_object$:$/var/www/html/src/git-master/http-push.c$:$723$:$void (const char *hex)
object_list_contains$:$/var/www/html/src/git-master/object.c$:$257$:$int (struct object_list list, struct object obj)
run_request_queue$:$/var/www/html/src/git-master/http-push.c$:$1697$:$void (void)
add_fill_function$:$/var/www/html/src/git-master/http.c$:$562$:$void (void *data, int (*fill) (void *))
fill_active_slot$:$/var/www/html/src/git-master/http-push.c$:$607$:$int (void *unused)
start_fetch_loose$:$/var/www/html/src/git-master/http-push.c$:$249$:$void (struct transfer_request request)
new_http_object_request$:$/var/www/html/src/git-master/http.c$:$1243$:$struct http_object_request (const char *base_url, unsigned char *sha1)
process_response$:$/var/www/html/src/git-master/http-push.c$:$239$:$void (void *callback_data)
finish_request$:$/var/www/html/src/git-master/http-push.c$:$514$:$void (struct transfer_request request)
start_put$:$/var/www/html/src/git-master/http-push.c$:$352$:$void (struct transfer_request request)
append_remote_object_url$:$/var/www/html/src/git-master/http.c$:$759$:$void (struct strbuf buf, const char *url, const char *hex, int only_two_digit_prefix)
start_move$:$/var/www/html/src/git-master/http-push.c$:$419$:$void (struct transfer_request request)
release_request$:$/var/www/html/src/git-master/http-push.c$:$497$:$void (struct transfer_request request)
finish_http_object_request$:$/var/www/html/src/git-master/http.c$:$1383$:$int (struct http_object_request freq)
process_http_object_request$:$/var/www/html/src/git-master/http.c$:$1374$:$void (struct http_object_request freq)
release_http_object_request$:$/var/www/html/src/git-master/http.c$:$1424$:$void (struct http_object_request freq)
release_active_slot$:$/var/www/html/src/git-master/http.c$:$681$:$void (struct active_request_slot slot)
start_fetch_packed$:$/var/www/html/src/git-master/http-push.c$:$300$:$void (struct transfer_request request)
new_http_pack_request$:$/var/www/html/src/git-master/http.c$:$1158$:$struct http_pack_request (struct packed_git target, const char *base_url)
release_http_pack_request$:$/var/www/html/src/git-master/http.c$:$1090$:$void (struct http_pack_request preq)
finish_http_pack_request$:$/var/www/html/src/git-master/http.c$:$1104$:$int (struct http_pack_request preq)
sha1_pack_name$:$/var/www/html/src/git-master/sha1_file.c$:$225$:$char * (const unsigned char *sha1)
start_mkcol$:$/var/www/html/src/git-master/http-push.c$:$276$:$void (struct transfer_request request)
get_remote_object_url$:$/var/www/html/src/git-master/http.c$:$770$:$char * (const char *url, const char *hex, int only_two_digit_prefix)
finish_all_active_slots$:$/var/www/html/src/git-master/http.c$:$716$:$void (void)
delete_remote_branch$:$/var/www/html/src/git-master/http-push.c$:$1600$:$int (const char *pattern, int force)
fetch_symref$:$/var/www/html/src/git-master/http-push.c$:$1562$:$void (const char *path, char **symref, unsigned char *sha1)
verify_merge_base$:$/var/www/html/src/git-master/http-push.c$:$1592$:$int (unsigned char *head_sha1, struct ref remote)
lookup_commit_or_die$:$/var/www/html/src/git-master/commit.c$:$49$:$struct commit (const unsigned char *sha1, const char *ref_name)
match_push_refs$:$/var/www/html/src/git-master/remote.c$:$1321$:$int (struct ref src, struct ref dst, int nr_refspec, const char **refspec, int flags)
tail_ref$:$/var/www/html/src/git-master/remote.c$:$1202$:$struct ref (struct ref head)
parse_push_refspec$:$/var/www/html/src/git-master/remote.c$:$648$:$struct refspec (int nr_refspec, const char **refspec)
match_explicit_refs$:$/var/www/html/src/git-master/remote.c$:$1146$:$int (struct ref src, struct ref dst, struct ref dst_tail, struct refspec rs, int rs_nr)
match_explicit$:$/var/www/html/src/git-master/remote.c$:$1065$:$int (struct ref src, struct ref dst, struct ref dst_tail, struct refspec rs)
count_refspec_match$:$/var/www/html/src/git-master/remote.c$:$955$:$int (const char *pattern, struct ref refs, struct ref matched_ref)
refname_match$:$/var/www/html/src/git-master/refs.c$:$1900$:$int (const char *abbrev_name, const char *full_name, const char **rules)
mkpath$:$/var/www/html/src/git-master/cache.h$:$667$:$char * (const char *fmt, ...)
try_explicit_object_name$:$/var/www/html/src/git-master/remote.c$:$1024$:$struct ref (const char *name)
make_linked_ref$:$/var/www/html/src/git-master/remote.c$:$1038$:$struct ref (const char *name, struct ref tail)
guess_ref$:$/var/www/html/src/git-master/remote.c$:$1045$:$char * (const char *name, struct ref peer)
copy_ref$:$/var/www/html/src/git-master/remote.c$:$886$:$struct ref (const struct ref *ref)
get_ref_match$:$/var/www/html/src/git-master/remote.c$:$1156$:$char * (const struct refspec *rs, int rs_nr, const struct ref *ref, int send_mirror, int direction, const struct refspec **ret_pat)
match_name_with_pattern$:$/var/www/html/src/git-master/remote.c$:$786$:$int (const char *key, const char *name, const char *value, char **result)
prepare_ref_index$:$/var/www/html/src/git-master/remote.c$:$1305$:$void (struct string_list ref_index, struct ref ref)
string_list_lookup$:$/var/www/html/src/git-master/string-list.c$:$88$:$struct string_list_item (struct string_list list, const char *string)
string_list_insert$:$/var/www/html/src/git-master/string-list.c$:$55$:$struct string_list_item (struct string_list list, const char *string)
add_missing_tags$:$/var/www/html/src/git-master/remote.c$:$1229$:$void (struct ref src, struct ref dst, struct ref dst_tail)
add_to_tips$:$/var/www/html/src/git-master/remote.c$:$1215$:$void (struct tips tips, const unsigned char *sha1)
string_list_has_string$:$/var/www/html/src/git-master/string-list.c$:$71$:$int (const struct string_list *list, const char *string)
get_entry_index$:$/var/www/html/src/git-master/string-list.c$:$6$:$int (const struct string_list *list, const char *string, int *exact_match)
cmp$:$NA$:$NA$:$NA
for_each_string_list_item$:$NA$:$NA$:$NA
alloc_delete_ref$:$/var/www/html/src/git-master/remote.c$:$1017$:$struct ref (void)
ref_newer$:$/var/www/html/src/git-master/remote.c$:$1658$:$int (const unsigned char *new_sha1, const unsigned char *old_sha1)
unmark_and_free$:$/var/www/html/src/git-master/remote.c$:$1648$:$void (struct commit_list list, unsigned int mark)
init_revisions$:$/var/www/html/src/git-master/revision.c$:$1288$:$void (struct rev_info revs, const char *prefix)
DIFF_OPT_SET$:$NA$:$NA$:$NA
file_add_remove$:$/var/www/html/src/git-master/revision.c$:$430$:$void (struct diff_options options, int addremove, unsigned mode, const unsigned char *sha1, int sha1_valid, const char *fullpath, unsigned dirty_submodule)
file_change$:$/var/www/html/src/git-master/revision.c$:$443$:$void (struct diff_options options, unsigned old_mode, unsigned new_mode, const unsigned char *old_sha1, const unsigned char *new_sha1, int old_sha1_valid, int new_sha1_valid, const char *fullpath, unsigned old_dirty_submodule, unsigned new_dirty_submodule)
init_grep_defaults$:$/var/www/html/src/git-master/grep.c$:$16$:$void (void)
grep_init$:$/var/www/html/src/git-master/grep.c$:$117$:$void (struct grep_opt opt, const char *prefix)
diff_setup$:$/var/www/html/src/git-master/diff.c$:$3191$:$void (struct diff_options options)
diff_change$:$/var/www/html/src/git-master/diff.c$:$4779$:$void (struct diff_options options, unsigned old_mode, unsigned new_mode, const unsigned char *old_sha1, const unsigned char *new_sha1, int old_sha1_valid, int new_sha1_valid, const char *concatpath, unsigned old_dirty_submodule, unsigned new_dirty_submodule)
is_submodule_ignored$:$/var/www/html/src/git-master/diff.c$:$4721$:$int (const char *path, struct diff_options options)
DIFF_OPT_TST$:$NA$:$NA$:$NA
set_diffopt_flags_from_submodule_config$:$/var/www/html/src/git-master/submodule.c$:$75$:$void (struct diff_options diffopt, const char *path)
unsorted_string_list_lookup$:$/var/www/html/src/git-master/string-list.c$:$232$:$struct string_list_item (struct string_list list, const char *string)
handle_ignore_submodules_arg$:$/var/www/html/src/git-master/submodule.c$:$173$:$void (struct diff_options diffopt, const char *arg)
DIFF_OPT_CLR$:$NA$:$NA$:$NA
alloc_filespec$:$/var/www/html/src/git-master/diff.c$:$2549$:$struct diff_filespec (const char *path)
fill_filespec$:$/var/www/html/src/git-master/diff.c$:$2570$:$void (struct diff_filespec spec, const unsigned char *sha1, int sha1_valid, unsigned short mode)
ce_permissions$:$NA$:$NA$:$NA
diff_queue$:$/var/www/html/src/git-master/diff.c$:$3869$:$struct diff_filepair (struct diff_queue_struct queue, struct diff_filespec one, struct diff_filespec two)
diff_addremove$:$/var/www/html/src/git-master/diff.c$:$4733$:$void (struct diff_options options, int addremove, unsigned mode, const unsigned char *sha1, int sha1_valid, const char *concatpath, unsigned dirty_submodule)
setup_revisions$:$/var/www/html/src/git-master/revision.c$:$2016$:$int (int argc, const char **argv, struct rev_info revs, struct setup_revision_opt opt)
append_prune_data$:$/var/www/html/src/git-master/revision.c$:$1503$:$void (struct cmdline_pathspec prune, const char **av)
handle_revision_pseudo_opt$:$/var/www/html/src/git-master/revision.c$:$1935$:$int (const char *submodule, struct rev_info revs, int argc, const char **argv, int *flags)
handle_refs$:$/var/www/html/src/git-master/revision.c$:$1200$:$void (const char *submodule, struct rev_info revs, unsigned flags, int (*for_each) (const char *, each_ref_fn, void *))
init_all_refs_cb$:$/var/www/html/src/git-master/revision.c$:$1193$:$void (struct all_refs_cb cb, struct rev_info revs, unsigned flags)
get_reference$:$/var/www/html/src/git-master/revision.c$:$236$:$struct object (struct rev_info revs, const char *name, const unsigned char *sha1, unsigned int flags)
add_rev_cmdline$:$/var/www/html/src/git-master/revision.c$:$1146$:$void (struct rev_info revs, struct object item, const char *name, int whence, unsigned flags)
add_pending_sha1$:$/var/www/html/src/git-master/revision.c$:$252$:$void (struct rev_info revs, const char *name, const unsigned char *sha1, unsigned int flags)
add_pending_object$:$/var/www/html/src/git-master/revision.c$:$218$:$void (struct rev_info revs, struct object obj, const char *name)
add_pending_object_with_mode$:$/var/www/html/src/git-master/revision.c$:$193$:$void (struct rev_info revs, struct object obj, const char *name, unsigned mode)
add_reflog_for_walk$:$/var/www/html/src/git-master/reflog-walk.c$:$149$:$int (struct reflog_walk_info info, struct commit commit, const char *name)
approxidate$:$NA$:$NA$:$NA
resolve_refdup$:$/var/www/html/src/git-master/refs.c$:$1452$:$char * (const char *ref, unsigned char *sha1, int reading, int *flag)
read_complete_reflog$:$/var/www/html/src/git-master/reflog-walk.c$:$45$:$struct complete_reflogs (const char *ref)
get_reflog_recno_by_time$:$/var/www/html/src/git-master/reflog-walk.c$:$75$:$int (struct complete_reflogs array, unsigned long timestamp)
add_commit_info$:$/var/www/html/src/git-master/reflog-walk.c$:$113$:$void (struct commit commit, void *util, struct commit_info_lifo lifo)
add_object_array_with_mode$:$/var/www/html/src/git-master/object.c$:$278$:$void (struct object obj, const char *name, struct object_array array, unsigned mode)
for_each_ref_submodule$:$/var/www/html/src/git-master/refs.c$:$1764$:$int (const char *submodule, each_ref_fn fn, void *cb_data)
head_ref_submodule$:$/var/www/html/src/git-master/refs.c$:$1754$:$int (const char *submodule, each_ref_fn fn, void *cb_data)
for_each_branch_ref_submodule$:$/var/www/html/src/git-master/refs.c$:$1795$:$int (const char *submodule, each_ref_fn fn, void *cb_data)
for_each_ref_in_submodule$:$/var/www/html/src/git-master/refs.c$:$1774$:$int (const char *submodule, const char *prefix, each_ref_fn fn, void *cb_data)
for_each_bad_bisect_ref$:$/var/www/html/src/git-master/revision.c$:$1925$:$int (const char *submodule, each_ref_fn fn, void *cb_data)
for_each_good_bisect_ref$:$/var/www/html/src/git-master/revision.c$:$1930$:$int (const char *submodule, each_ref_fn fn, void *cb_data)
for_each_tag_ref_submodule$:$/var/www/html/src/git-master/refs.c$:$1785$:$int (const char *submodule, each_ref_fn fn, void *cb_data)
for_each_remote_ref_submodule$:$/var/www/html/src/git-master/refs.c$:$1805$:$int (const char *submodule, each_ref_fn fn, void *cb_data)
for_each_glob_ref$:$/var/www/html/src/git-master/refs.c$:$1870$:$int (each_ref_fn fn, const char *pattern, void *cb_data)
for_each_glob_ref_in$:$/var/www/html/src/git-master/refs.c$:$1840$:$int (each_ref_fn fn, const char *pattern, const char *prefix, void *cb_data)
has_glob_specials$:$/var/www/html/src/git-master/refs.h$:$69$:$inline const char * (const char *pattern)
strpbrk$:$NA$:$NA$:$NA
filter_refs$:$/var/www/html/src/git-master/refs.c$:$1483$:$int (const char *refname, const unsigned char *sha1, int flags, void *data)
fnmatch$:$/var/www/html/src/git-master/git-compat-util.h$:$317$:$inline int (const char *pattern, const char *string, int flags)
handle_reflog$:$/var/www/html/src/git-master/revision.c$:$1244$:$void (struct rev_info revs, unsigned flags)
for_each_reflog$:$/var/www/html/src/git-master/refs.c$:$3166$:$int (each_ref_fn fn, void *cb_data)
do_for_each_reflog$:$/var/www/html/src/git-master/refs.c$:$3126$:$int (struct strbuf name, each_ref_fn fn, void *cb_data)
handle_one_reflog$:$/var/www/html/src/git-master/revision.c$:$1235$:$int (const char *path, const unsigned char *sha1, int flag, void *cb_data)
for_each_reflog_ent$:$/var/www/html/src/git-master/refs.c$:$3105$:$int (const char *refname, each_reflog_ent_fn fn, void *cb_data)
handle_one_reflog_ent$:$/var/www/html/src/git-master/revision.c$:$1226$:$int (unsigned char *osha1, unsigned char *nsha1, const char *email, unsigned long timestamp, int tz, const char *message, void *cb_data)
handle_one_reflog_commit$:$/var/www/html/src/git-master/revision.c$:$1208$:$void (unsigned char *sha1, void *cb_data)
read_revisions_from_stdin$:$/var/www/html/src/git-master/revision.c$:$1523$:$void (struct rev_info revs, struct cmdline_pathspec prune)
handle_revision_arg$:$/var/www/html/src/git-master/revision.c$:$1379$:$int (const char *arg_, struct rev_info revs, int flags, unsigned revarg_opt)
get_sha1_committish$:$/var/www/html/src/git-master/sha1_name.c$:$1159$:$int (const char *name, unsigned char *sha1)
verify_non_filename$:$/var/www/html/src/git-master/setup.c$:$144$:$void (const char *prefix, const char *arg)
is_inside_git_dir$:$/var/www/html/src/git-master/setup.c$:$347$:$int (void)
check_filename$:$/var/www/html/src/git-master/setup.c$:$64$:$int (const char *prefix, const char *arg)
get_merge_bases$:$/var/www/html/src/git-master/commit.c$:$947$:$struct commit_list (struct commit one, struct commit two, int cleanup)
add_rev_cmdline_list$:$/var/www/html/src/git-master/revision.c$:$1163$:$void (struct rev_info revs, struct commit_list commit_list, int whence, unsigned flags)
add_pending_commit_list$:$/var/www/html/src/git-master/revision.c$:$1324$:$void (struct rev_info revs, struct commit_list commit_list, unsigned int flags)
add_parents_only$:$/var/www/html/src/git-master/revision.c$:$1252$:$int (struct rev_info revs, const char *arg_, int flags)
read_pathspec_from_stdin$:$/var/www/html/src/git-master/revision.c$:$1511$:$void (struct rev_info revs, struct strbuf sb, struct cmdline_pathspec prune)
handle_revision_opt$:$/var/www/html/src/git-master/revision.c$:$1567$:$int (struct rev_info revs, int argc, const char **argv, int *unkc, const char **unkv)
init_reflog_walk$:$/var/www/html/src/git-master/reflog-walk.c$:$144$:$void (struct reflog_walk_info info)
load_ref_decorations$:$/var/www/html/src/git-master/log-tree.c$:$151$:$void (int flags)
add_ref_decoration$:$/var/www/html/src/git-master/log-tree.c$:$96$:$int (const char *refname, const unsigned char *sha1, int flags, void *cb_data)
add_name_decoration$:$/var/www/html/src/git-master/log-tree.c$:$87$:$void (enum decoration_type type, const char *name, struct object obj)
add_decoration$:$/var/www/html/src/git-master/decorate.c$:$60$:$void * (struct decoration n, const struct object *obj, void *decoration)
grow_decoration$:$/var/www/html/src/git-master/decorate.c$:$38$:$void (struct decoration n)
insert_decoration$:$/var/www/html/src/git-master/decorate.c$:$17$:$void * (struct decoration n, const struct object *base, void *decoration)
hash_obj$:$/var/www/html/src/git-master/decorate.c$:$9$:$unsigned int (const struct object *obj, unsigned int n)
prettify_refname$:$/var/www/html/src/git-master/refs.c$:$1881$:$const char * (const char *name)
for_each_commit_graft$:$/var/www/html/src/git-master/commit.c$:$239$:$int (each_commit_graft_fn fn, void *cb_data)
add_graft_decoration$:$/var/www/html/src/git-master/log-tree.c$:$142$:$int (const struct commit_graft *graft, void *cb_data)
get_commit_format$:$/var/www/html/src/git-master/pretty.c$:$145$:$void (const char *arg, struct rev_info rev)
save_user_format$:$/var/www/html/src/git-master/pretty.c$:$27$:$void (struct rev_info rev, const char *cp, int is_tformat)
find_commit_format$:$/var/www/html/src/git-master/pretty.c$:$137$:$struct cmt_fmt_map (const char *sought)
expand_notes_ref$:$/var/www/html/src/git-master/notes.c$:$1294$:$void (struct strbuf sb)
strbuf_insert$:$/var/www/html/src/git-master/strbuf.c$:$175$:$void (struct strbuf sb, size_t pos, const void *data, size_t len)
graph_init$:$/var/www/html/src/git-master/graph.c$:$206$:$struct git_graph (struct rev_info opt)
parse_date_format$:$/var/www/html/src/git-master/date.c$:$745$:$enum date_mode (const char *format)
add_header_grep$:$/var/www/html/src/git-master/revision.c$:$1557$:$void (struct rev_info revs, enum grep_header_field field, const char *pattern)
append_header_grep_pattern$:$/var/www/html/src/git-master/grep.c$:$239$:$void (struct grep_opt opt, enum grep_header_field field, const char *pat)
create_grep_pat$:$/var/www/html/src/git-master/grep.c$:$187$:$struct grep_pat (const char *pat, size_t patlen, const char *origin, int no, enum grep_pat_token t, enum grep_header_field field)
do_append_grep_pat$:$/var/www/html/src/git-master/grep.c$:$202$:$void (struct grep_pat tail, struct grep_pat p)
add_message_grep$:$/var/www/html/src/git-master/revision.c$:$1562$:$void (struct rev_info revs, const char *pattern)
add_grep$:$/var/www/html/src/git-master/revision.c$:$1552$:$void (struct rev_info revs, const char *ptn, enum grep_pat_token what)
append_grep_pattern$:$/var/www/html/src/git-master/grep.c$:$249$:$void (struct grep_opt opt, const char *pat, const char *origin, int no, enum grep_pat_token t)
append_grep_pat$:$/var/www/html/src/git-master/grep.c$:$255$:$void (struct grep_opt opt, const char *pat, size_t patlen, const char *origin, int no, enum grep_pat_token t)
grep_set_pattern_type_option$:$/var/www/html/src/git-master/grep.c$:$155$:$void (enum grep_pattern_type pattern_type, struct grep_opt opt)
diff_opt_parse$:$/var/www/html/src/git-master/diff.c$:$3511$:$int (struct diff_options options, const char **av, int ac)
opt_arg$:$/var/www/html/src/git-master/diff.c$:$3319$:$int (const char *arg, int arg_short, const char *arg_long, int *val)
enable_patch_output$:$/var/www/html/src/git-master/diff.c$:$3506$:$void (int *fmt)
parse_dirstat_opt$:$/var/www/html/src/git-master/diff.c$:$3483$:$int (struct diff_options options, const char *params)
parse_dirstat_params$:$/var/www/html/src/git-master/diff.c$:$74$:$int (struct diff_options options, const char *params_string, struct strbuf errmsg)
stat_opt$:$/var/www/html/src/git-master/diff.c$:$3407$:$int (struct diff_options options, const char **av)
diff_scoreopt_parse$:$/var/www/html/src/git-master/diff.c$:$3813$:$int (const char *opt)
parse_rename_score$:$/var/www/html/src/git-master/diff.c$:$3777$:$int (const char **cp_p)
DIFF_XDL_SET$:$NA$:$NA$:$NA
DIFF_XDL_CLR$:$NA$:$NA$:$NA
DIFF_WITH_ALG$:$NA$:$NA$:$NA
parse_algorithm_value$:$/var/www/html/src/git-master/diff.c$:$147$:$long (const char *value)
git_config_colorbool$:$/var/www/html/src/git-master/color.c$:$161$:$int (const char *var, const char *value)
parse_submodule_opt$:$/var/www/html/src/git-master/diff.c$:$3498$:$int (struct diff_options options, const char *value)
parse_submodule_params$:$/var/www/html/src/git-master/diff.c$:$127$:$int (struct diff_options options, const char *value)
short_opt$:$/var/www/html/src/git-master/diff.c$:$3368$:$inline int (char opt, const char **argv, const char **optarg)
verify_filename$:$/var/www/html/src/git-master/setup.c$:$128$:$void (const char *prefix, const char *arg, int diagnose_misspelt_rev)
die_verify_filename$:$/var/www/html/src/git-master/setup.c$:$84$:$void NORETURN (const char *prefix, const char *arg, int diagnose_misspelt_rev)
maybe_die_on_misspelt_object_name$:$/var/www/html/src/git-master/sha1_name.c$:$1430$:$void (const char *name, const char *prefix)
init_pathspec$:$/var/www/html/src/git-master/dir.c$:$1580$:$int (struct pathspec pathspec, const char **paths)
limit_pathspec_to_literal$:$/var/www/html/src/git-master/dir.c$:$1628$:$int (void)
simple_length$:$/var/www/html/src/git-master/dir.c$:$383$:$int (const char *match)
is_glob_special$:$NA$:$NA$:$NA
no_wildcard$:$/var/www/html/src/git-master/dir.c$:$395$:$int (const char *string)
pathspec_item_cmp$:$/var/www/html/src/git-master/dir.c$:$1571$:$int (const void *a_, const void *b_)
get_pathspec$:$/var/www/html/src/git-master/setup.c$:$277$:$const char ** (const char *prefix, const char **pathspec)
prefix_pathspec$:$/var/www/html/src/git-master/setup.c$:$195$:$const char * (const char *prefix, int prefixlen, const char *elt)
is_pathspec_magic$:$NA$:$NA$:$NA
prepare_show_merge$:$/var/www/html/src/git-master/revision.c$:$1336$:$void (struct rev_info revs)
ce_path_match$:$/var/www/html/src/git-master/read-cache.c$:$731$:$int (const struct cache_entry *ce, const struct pathspec *pathspec)
match_pathspec_depth$:$/var/www/html/src/git-master/dir.c$:$336$:$int (const struct pathspec *ps, const char *name, int namelen, int prefix, char *seen)
within_depth$:$/var/www/html/src/git-master/dir.c$:$159$:$int (const char *name, int namelen, int depth, int max_depth)
match_pathspec_item$:$/var/www/html/src/git-master/dir.c$:$293$:$int (const struct pathspec_item *item, int prefix, const char *name, int namelen)
git_fnmatch$:$/var/www/html/src/git-master/dir.c$:$54$:$inline int (const char *pattern, const char *string, int flags, int prefix)
ce_same_name$:$/var/www/html/src/git-master/read-cache.c$:$725$:$int (const struct cache_entry *a, const struct cache_entry *b)
free_pathspec$:$/var/www/html/src/git-master/dir.c$:$1622$:$void (struct pathspec pathspec)
diff_tree_setup_paths$:$/var/www/html/src/git-master/tree-diff.c$:$319$:$void (const char **p, struct diff_options opt)
diff_setup_done$:$/var/www/html/src/git-master/diff.c$:$3218$:$void (struct diff_options options)
DIFF_XDL_TST$:$NA$:$NA$:$NA
grep_commit_pattern_type$:$/var/www/html/src/git-master/grep.c$:$145$:$void (enum grep_pattern_type pattern_type, struct grep_opt opt)
compile_grep_patterns$:$/var/www/html/src/git-master/grep.c$:$722$:$void (struct grep_opt opt)
compile_grep_patterns_real$:$/var/www/html/src/git-master/grep.c$:$679$:$void (struct grep_opt opt)
prep_header_patterns$:$/var/www/html/src/git-master/grep.c$:$615$:$struct grep_expr (struct grep_opt opt)
compile_regexp$:$/var/www/html/src/git-master/grep.c$:$380$:$void (struct grep_pat p, struct grep_opt opt)
is_fixed$:$/var/www/html/src/git-master/grep.c$:$362$:$int (const char *s, size_t len)
is_regex_special$:$NA$:$NA$:$NA
kwsalloc$:$/var/www/html/src/git-master/kwset.c$:$89$:$kwset_t (char const *trans)
obstack_init$:$NA$:$NA$:$NA
obstack_alloc$:$NA$:$NA$:$NA
kwsfree$:$/var/www/html/src/git-master/kwset.c$:$764$:$void (kwset_t kws)
obstack_free$:$NA$:$NA$:$NA
kwsincr$:$/var/www/html/src/git-master/kwset.c$:$126$:$const char * (kwset_t kws, char const *text, size_t len)
U$:$NA$:$NA$:$NA
abort$:$NA$:$NA$:$NA
kwsprep$:$/var/www/html/src/git-master/kwset.c$:$379$:$const char * (kwset_t kws)
enqueue$:$/var/www/html/src/git-master/kwset.c$:$286$:$void (struct tree tree, struct trie last)
treedelta$:$/var/www/html/src/git-master/kwset.c$:$334$:$void (register struct tree const *tree, register unsigned int depth, unsigned char delta[])
treefails$:$/var/www/html/src/git-master/kwset.c$:$299$:$void (register struct tree const *tree, struct trie fail, struct trie recourse)
hasevery$:$/var/www/html/src/git-master/kwset.c$:$348$:$int (register struct tree const *a, register struct tree const *b)
treenext$:$/var/www/html/src/git-master/kwset.c$:$367$:$void (struct tree tree, struct trie next[])
compile_pcre_regexp$:$/var/www/html/src/git-master/grep.c$:$346$:$void (struct grep_pat p, const struct grep_opt *opt)
pcre_compile$:$NA$:$NA$:$NA
compile_regexp_failed$:$/var/www/html/src/git-master/grep.c$:$284$:$NORETURN void (const struct grep_pat *p, const char *error)
pcre_study$:$NA$:$NA$:$NA
regerror$:$NA$:$NA$:$NA
compile_pattern_expr$:$/var/www/html/src/git-master/grep.c$:$513$:$struct grep_expr (struct grep_pat list)
grep_splice_or$:$/var/www/html/src/git-master/grep.c$:$663$:$struct grep_expr (struct grep_expr x, struct grep_expr y)
grep_or_expr$:$/var/www/html/src/git-master/grep.c$:$606$:$struct grep_expr (struct grep_expr left, struct grep_expr right)
dump_grep_expression$:$/var/www/html/src/git-master/grep.c$:$589$:$void (struct grep_opt opt)
dump_grep_expression_1$:$/var/www/html/src/git-master/grep.c$:$556$:$void (struct grep_expr x, int in)
indent$:$/var/www/html/src/git-master/grep.c$:$518$:$void (int in)
dump_grep_pat$:$/var/www/html/src/git-master/grep.c$:$524$:$void (struct grep_pat p)
prepare_revision_walk$:$/var/www/html/src/git-master/revision.c$:$2576$:$int (struct rev_info revs)
handle_commit$:$/var/www/html/src/git-master/revision.c$:$259$:$struct commit (struct rev_info revs, struct object object, const char *name)
commit_list_append$:$/var/www/html/src/git-master/commit.c$:$1565$:$struct commit_list (struct commit commit, struct commit_list next)
limiting_can_increase_treesame$:$/var/www/html/src/git-master/revision.c$:$615$:$inline int (const struct rev_info *revs)
commit_list_sort_by_date$:$/var/www/html/src/git-master/commit.c$:$423$:$void (struct commit_list list)
llist_mergesort$:$/var/www/html/src/git-master/mergesort.c$:$26$:$void * (void *list, void *(*get_next_fn) (const void *), void (*set_next_fn) (void *, void *), int (*compare_fn) (const void *, const void *))
get_nth_next$:$/var/www/html/src/git-master/mergesort.c$:$9$:$void * (void *list, unsigned long n, void *(*get_next_fn) (const void *))
pop_item$:$/var/www/html/src/git-master/mergesort.c$:$17$:$void * (struct mergesort_sublist l, void *(*get_next_fn) (const void *))
commit_list_get_next$:$/var/www/html/src/git-master/commit.c$:$413$:$void * (const void *a)
commit_list_set_next$:$/var/www/html/src/git-master/commit.c$:$418$:$void (void *a, void *next)
commit_list_compare_by_date$:$/var/www/html/src/git-master/commit.c$:$402$:$int (const void *a, const void *b)
limit_list$:$/var/www/html/src/git-master/revision.c$:$1063$:$int (struct rev_info revs)
collect_bottom_commits$:$/var/www/html/src/git-master/revision.c$:$1037$:$struct commit_list (struct commit_list list)
show$:$/var/www/html/src/git-master/test-prio-queue.c$:$10$:$void (int *v)
add_parents_to_list$:$/var/www/html/src/git-master/revision.c$:$771$:$int (struct rev_info revs, struct commit commit, struct commit_list list, struct commit_list cache_ptr)
mark_parents_uninteresting$:$/var/www/html/src/git-master/revision.c$:$145$:$void (struct commit commit)
commit_list_insert_by_date_cached$:$/var/www/html/src/git-master/revision.c$:$757$:$void (struct commit p, struct commit_list head, struct commit_list cached_base, struct commit_list cache)
try_to_simplify_commit$:$/var/www/html/src/git-master/revision.c$:$630$:$void (struct rev_info revs, struct commit commit)
rev_same_tree_as_empty$:$/var/www/html/src/git-master/revision.c$:$492$:$int (struct rev_info revs, struct commit commit)
diff_tree$:$/var/www/html/src/git-master/tree-diff.c$:$131$:$int (struct tree_desc t1, struct tree_desc t2, const char *base_str, struct diff_options opt)
diff_can_quit_early$:$/var/www/html/src/git-master/diff.c$:$4708$:$int (struct diff_options opt)
skip_uninteresting$:$/var/www/html/src/git-master/tree-diff.c$:$116$:$void (struct tree_desc t, struct strbuf base, struct diff_options opt, enum interesting match)
tree_entry_interesting$:$/var/www/html/src/git-master/tree-walk.c$:$628$:$enum interesting (const struct name_entry *entry, struct strbuf base, int base_offset, const struct pathspec *ps)
show_entry$:$/var/www/html/src/git-master/tree-diff.c$:$82$:$void (struct diff_options opt, const char *prefix, struct tree_desc desc, struct strbuf base)
show_tree$:$/var/www/html/src/git-master/tree-diff.c$:$64$:$void (struct diff_options opt, const char *prefix, struct tree_desc desc, struct strbuf base)
compare_tree_entry$:$/var/www/html/src/git-master/tree-diff.c$:$12$:$int (struct tree_desc t1, struct tree_desc t2, struct strbuf base, struct diff_options opt)
diff_tree_sha1$:$/var/www/html/src/git-master/tree-diff.c$:$270$:$int (const unsigned char *old, const unsigned char *new, const char *base, struct diff_options opt)
diff_might_be_rename$:$/var/www/html/src/git-master/tree-diff.c$:$188$:$inline int (void)
DIFF_FILE_VALID$:$NA$:$NA$:$NA
try_to_follow_renames$:$/var/www/html/src/git-master/tree-diff.c$:$194$:$void (struct tree_desc t1, struct tree_desc t2, const char *base, struct diff_options opt)
diffcore_std$:$/var/www/html/src/git-master/diff.c$:$4659$:$void (struct diff_options options)
diffcore_skip_stat_unmatch$:$/var/www/html/src/git-master/diff.c$:$4595$:$void (struct diff_options diffopt)
DIFF_QUEUE_CLEAR$:$NA$:$NA$:$NA
diff_populate_filespec$:$/var/www/html/src/git-master/diff.c$:$2675$:$int (struct diff_filespec s, int size_only)
diff_populate_gitlink$:$/var/www/html/src/git-master/diff.c$:$2649$:$int (struct diff_filespec s, int size_only)
reuse_worktree_file$:$/var/www/html/src/git-master/diff.c$:$2585$:$int (const char *name, const unsigned char *sha1, int want_file)
has_sha1_pack$:$/var/www/html/src/git-master/sha1_file.c$:$2916$:$int (const unsigned char *sha1)
ce_skip_worktree$:$NA$:$NA$:$NA
ce_uptodate$:$NA$:$NA$:$NA
strbuf_readlink$:$/var/www/html/src/git-master/strbuf.c$:$373$:$int (struct strbuf sb, const char *path, size_t hint)
convert_to_git$:$/var/www/html/src/git-master/convert.c$:$750$:$int (const char *path, const char *src, size_t len, struct strbuf dst, enum safe_crlf checksafe)
convert_attrs$:$/var/www/html/src/git-master/convert.c$:$723$:$void (struct conv_attrs ca, const char *path)
git_attr$:$/var/www/html/src/git-master/attr.c$:$107$:$struct git_attr (const char *name)
read_convert_config$:$/var/www/html/src/git-master/convert.c$:$435$:$int (const char *var, const char *value, void *cb)
parse_config_key$:$/var/www/html/src/git-master/config.c$:$1816$:$int (const char *var, const char *section, const char **subsection, int *subsection_len, const char **key)
git_check_attr$:$/var/www/html/src/git-master/attr.c$:$747$:$int (const char *path, int num, struct git_attr_check check)
collect_all_attrs$:$/var/www/html/src/git-master/attr.c$:$718$:$void (const char *path)
prepare_attr_stack$:$/var/www/html/src/git-master/attr.c$:$536$:$void (const char *path, int dirlen)
bootstrap_attr_stack$:$/var/www/html/src/git-master/attr.c$:$484$:$void (void)
read_attr_from_array$:$/var/www/html/src/git-master/attr.c$:$350$:$struct attr_stack (const char **list)
git_attr_system$:$/var/www/html/src/git-master/attr.c$:$479$:$int (void)
read_attr_from_file$:$/var/www/html/src/git-master/attr.c$:$365$:$struct attr_stack (const char *path, int macro_ok)
git_etc_gitattributes$:$/var/www/html/src/git-master/attr.c$:$471$:$const char * (void)
read_attr$:$/var/www/html/src/git-master/attr.c$:$409$:$struct attr_stack (const char *path, int macro_ok)
debug_push$:$NA$:$NA$:$NA
debug_pop$:$NA$:$NA$:$NA
free_attr_elem$:$/var/www/html/src/git-master/attr.c$:$302$:$void (struct attr_stack e)
fill$:$/var/www/html/src/git-master/attr.c$:$673$:$int (const char *path, int pathlen, int basename_offset, struct attr_stack stk, int rem)
path_matches$:$/var/www/html/src/git-master/attr.c$:$626$:$int (const char *pathname, int pathlen, int basename_offset, const struct pattern *pat, const char *base, int baselen)
match_basename$:$/var/www/html/src/git-master/dir.c$:$595$:$int (const char *basename, int basenamelen, const char *pattern, int prefix, int patternlen, int flags)
fnmatch_icase_mem$:$/var/www/html/src/git-master/dir.c$:$76$:$int (const char *pattern, int patternlen, const char *string, int stringlen, int flags)
wildmatch$:$/var/www/html/src/git-master/wildmatch.c$:$275$:$int (const char *pattern, const char *text, unsigned int flags, struct wildopts wo)
dowild$:$/var/www/html/src/git-master/wildmatch.c$:$55$:$int (const uchar *p, const uchar *text, unsigned int flags)
ISUPPER$:$NA$:$NA$:$NA
ISLOWER$:$NA$:$NA$:$NA
CC_EQ$:$NA$:$NA$:$NA
ISALNUM$:$NA$:$NA$:$NA
ISALPHA$:$NA$:$NA$:$NA
ISBLANK$:$NA$:$NA$:$NA
ISCNTRL$:$NA$:$NA$:$NA
ISDIGIT$:$NA$:$NA$:$NA
ISGRAPH$:$NA$:$NA$:$NA
ISPRINT$:$NA$:$NA$:$NA
ISPUNCT$:$NA$:$NA$:$NA
ISSPACE$:$NA$:$NA$:$NA
ISXDIGIT$:$NA$:$NA$:$NA
match_pathname$:$/var/www/html/src/git-master/dir.c$:$619$:$int (const char *pathname, int pathlen, const char *base, int baselen, const char *pattern, int prefix, int patternlen, int flags)
fill_one$:$/var/www/html/src/git-master/attr.c$:$651$:$int (const char *what, struct match_attr a, int rem)
debug_set$:$/var/www/html/src/git-master/attr.c$:$440$:$void (const char *what, const char *match, struct git_attr attr, const void *v)
ATTR_TRUE$:$NA$:$NA$:$NA
ATTR_FALSE$:$NA$:$NA$:$NA
ATTR_UNSET$:$NA$:$NA$:$NA
macroexpand_one$:$/var/www/html/src/git-master/attr.c$:$690$:$int (int attr_nr, int rem)
git_path_check_crlf$:$/var/www/html/src/git-master/convert.c$:$649$:$enum crlf_action (const char *path, struct git_attr_check check)
git_path_check_ident$:$/var/www/html/src/git-master/convert.c$:$693$:$int (const char *path, struct git_attr_check check)
git_path_check_convert$:$/var/www/html/src/git-master/convert.c$:$679$:$struct convert_driver (const char *path, struct git_attr_check check)
git_path_check_eol$:$/var/www/html/src/git-master/convert.c$:$666$:$enum eol (const char *path, struct git_attr_check check)
apply_filter$:$/var/www/html/src/git-master/convert.c$:$374$:$int (const char *path, const char *src, size_t len, struct strbuf dst, const char *cmd)
filter_buffer$:$/var/www/html/src/git-master/convert.c$:$319$:$int (int in, int out, void *data)
start_async$:$/var/www/html/src/git-master/run-command.c$:$631$:$int (struct async async)
pthread_self$:$NA$:$NA$:$NA
pthread_key_create$:$NA$:$NA$:$NA
die_async$:$/var/www/html/src/git-master/run-command.c$:$606$:$NORETURN void (const char *err, va_list params)
pthread_equal$:$NA$:$NA$:$NA
pthread_getspecific$:$NA$:$NA$:$NA
pthread_exit$:$NA$:$NA$:$NA
set_die_is_recursing_routine$:$/var/www/html/src/git-master/usage.c$:$74$:$void (int (*routine) (void))
async_die_is_recursing$:$/var/www/html/src/git-master/run-command.c$:$622$:$int (void)
pthread_setspecific$:$NA$:$NA$:$NA
pthread_create$:$NA$:$NA$:$NA
run_thread$:$/var/www/html/src/git-master/run-command.c$:$596$:$void * (void *data)
finish_async$:$/var/www/html/src/git-master/run-command.c$:$744$:$int (struct async async)
pthread_join$:$NA$:$NA$:$NA
input_crlf_action$:$/var/www/html/src/git-master/convert.c$:$700$:$enum crlf_action (enum crlf_action text_attr, enum eol eol_attr)
crlf_to_git$:$/var/www/html/src/git-master/convert.c$:$168$:$int (const char *path, const char *src, size_t len, struct strbuf buf, enum crlf_action crlf_action, enum safe_crlf checksafe)
gather_stats$:$/var/www/html/src/git-master/convert.c$:$33$:$void (const char *buf, unsigned long size, struct text_stat stats)
is_binary$:$/var/www/html/src/git-master/convert.c$:$79$:$int (unsigned long size, struct text_stat stats)
has_cr_in_index$:$/var/www/html/src/git-master/convert.c$:$154$:$int (const char *path)
read_blob_data_from_cache$:$NA$:$NA$:$NA
check_safe_crlf$:$/var/www/html/src/git-master/convert.c$:$123$:$void (const char *path, enum crlf_action crlf_action, struct text_stat stats, enum safe_crlf checksafe)
output_eol$:$/var/www/html/src/git-master/convert.c$:$98$:$enum eol (enum crlf_action crlf_action)
ident_to_git$:$/var/www/html/src/git-master/convert.c$:$522$:$int (const char *path, const char *src, size_t len, struct strbuf buf, int ident)
count_ident$:$/var/www/html/src/git-master/convert.c$:$480$:$int (const char *cp, unsigned long size)
diff_filespec_is_identical$:$/var/www/html/src/git-master/diff.c$:$4583$:$int (struct diff_filespec one, struct diff_filespec two)
diff_q$:$/var/www/html/src/git-master/diff.c$:$3859$:$void (struct diff_queue_struct queue, struct diff_filepair dp)
diff_free_filepair$:$/var/www/html/src/git-master/diff.c$:$3881$:$void (struct diff_filepair p)
free_filespec$:$/var/www/html/src/git-master/diff.c$:$2562$:$void (struct diff_filespec spec)
diff_free_filespec_data$:$/var/www/html/src/git-master/diff.c$:$2779$:$void (struct diff_filespec s)
diff_free_filespec_blob$:$/var/www/html/src/git-master/diff.c$:$2766$:$void (struct diff_filespec s)
diffcore_break$:$/var/www/html/src/git-master/diffcore-break.c$:$118$:$void (int break_score)
object_type$:$/var/www/html/src/git-master/cache.h$:$337$:$inline enum object_type (unsigned int mode)
should_break$:$/var/www/html/src/git-master/diffcore-break.c$:$8$:$int (struct diff_filespec src, struct diff_filespec dst, int break_score, int *merge_score_p)
diffcore_count_changes$:$/var/www/html/src/git-master/diffcore-delta.c$:$166$:$int (struct diff_filespec src, struct diff_filespec dst, void **src_count_p, void **dst_count_p, unsigned long delta_limit, unsigned long *src_copied, unsigned long *literal_added)
hash_chars$:$/var/www/html/src/git-master/diffcore-delta.c$:$123$:$struct spanhash_top (struct diff_filespec one)
diffcore_rename$:$/var/www/html/src/git-master/diffcore-rename.c$:$494$:$void (struct diff_options options)
is_empty_blob_sha1$:$/var/www/html/src/git-master/cache.h$:$720$:$inline int (const unsigned char *sha1)
locate_rename_dst$:$/var/www/html/src/git-master/diffcore-rename.c$:$18$:$struct diff_rename_dst (struct diff_filespec two, int insert_ok)
DIFF_PAIR_UNMERGED$:$NA$:$NA$:$NA
register_rename_src$:$/var/www/html/src/git-master/diffcore-rename.c$:$63$:$struct diff_rename_src (struct diff_filepair p)
find_exact_renames$:$/var/www/html/src/git-master/diffcore-rename.c$:$386$:$int (struct diff_options options)
init_hash$:$/var/www/html/src/git-master/hash.h$:$36$:$inline void (struct hash_table table)
preallocate_hash$:$/var/www/html/src/git-master/hash.h$:$43$:$inline void (struct hash_table table, unsigned int elts)
insert_file_table$:$/var/www/html/src/git-master/diffcore-rename.c$:$358$:$void (struct hash_table table, int src_dst, int index, struct diff_filespec filespec)
hash_filespec$:$/var/www/html/src/git-master/diffcore-rename.c$:$346$:$unsigned int (struct diff_filespec filespec)
hash_sha1_file$:$/var/www/html/src/git-master/sha1_file.c$:$2741$:$int (const void *buf, unsigned long len, const char *type, unsigned char *sha1)
write_sha1_file_prepare$:$/var/www/html/src/git-master/sha1_file.c$:$2672$:$void (const void *buf, unsigned long len, const char *type, unsigned char *sha1, char *hdr, int *hdrlen)
insert_hash$:$/var/www/html/src/git-master/hash.c$:$76$:$void ** (unsigned int hash, void *ptr, struct hash_table table)
grow_hash_table$:$/var/www/html/src/git-master/hash.c$:$49$:$void (struct hash_table table)
insert_hash_entry$:$/var/www/html/src/git-master/hash.c$:$36$:$void ** (unsigned int hash, void *ptr, struct hash_table table)
lookup_hash_entry$:$/var/www/html/src/git-master/hash.c$:$12$:$struct hash_table_entry (unsigned int hash, const struct hash_table *table)
for_each_hash$:$/var/www/html/src/git-master/hash.c$:$84$:$int (const struct hash_table *table, int (*fn) (void *, void *), void *data)
find_same_files$:$/var/www/html/src/git-master/diffcore-rename.c$:$314$:$int (void *ptr, void *data)
find_identical_files$:$/var/www/html/src/git-master/diffcore-rename.c$:$251$:$int (struct file_similarity src, struct file_similarity dst, struct diff_options options)
basename_same$:$/var/www/html/src/git-master/diffcore-rename.c$:$99$:$int (struct diff_filespec src, struct diff_filespec dst)
record_rename_pair$:$/var/www/html/src/git-master/diffcore-rename.c$:$201$:$void (int dst_index, int src_index, int score)
free_similarity_list$:$/var/www/html/src/git-master/diffcore-rename.c$:$305$:$void (struct file_similarity p)
free_hash$:$/var/www/html/src/git-master/hash.c$:$104$:$void (struct hash_table table)
too_many_rename_candidates$:$/var/www/html/src/git-master/diffcore-rename.c$:$430$:$int (int num_create, struct diff_options options)
diff_unmodified_pair$:$/var/www/html/src/git-master/diff.c$:$3946$:$int (struct diff_filepair p)
DIFF_PAIR_MODE_CHANGED$:$NA$:$NA$:$NA
start_progress_delay$:$/var/www/html/src/git-master/progress.c$:$195$:$struct progress (const char *title, unsigned total, unsigned percent_treshold, unsigned delay)
estimate_similarity$:$/var/www/html/src/git-master/diffcore-rename.c$:$121$:$int (struct diff_filespec src, struct diff_filespec dst, int minimum_score)
record_if_better$:$/var/www/html/src/git-master/diffcore-rename.c$:$409$:$void (struct diff_score m[], struct diff_score o)
score_compare$:$/var/www/html/src/git-master/diffcore-rename.c$:$229$:$int (const void *a_, const void *b_)
display_progress$:$/var/www/html/src/git-master/progress.c$:$190$:$int (struct progress progress, unsigned n)
stop_progress$:$/var/www/html/src/git-master/progress.c$:$221$:$void (struct progress p_progress)
stop_progress_msg$:$/var/www/html/src/git-master/progress.c$:$226$:$void (struct progress p_progress, const char *msg)
find_renames$:$/var/www/html/src/git-master/diffcore-rename.c$:$473$:$int (struct diff_score mx, int dst_cnt, int minimum_score, int copies)
DIFF_PAIR_BROKEN$:$NA$:$NA$:$NA
diff_debug_queue$:$/var/www/html/src/git-master/diff.c$:$4049$:$void (const char *msg, struct diff_queue_struct q)
diff_debug_filepair$:$/var/www/html/src/git-master/diff.c$:$4040$:$void (const struct diff_filepair *p, int i)
diff_debug_filespec$:$/var/www/html/src/git-master/diff.c$:$4027$:$void (struct diff_filespec s, int x, const char *one)
diffcore_merge_broken$:$/var/www/html/src/git-master/diffcore-break.c$:$255$:$void (void)
merge_broken$:$/var/www/html/src/git-master/diffcore-break.c$:$227$:$void (struct diff_filepair p, struct diff_filepair pp, struct diff_queue_struct outq)
diffcore_pickaxe$:$/var/www/html/src/git-master/diffcore-pickaxe.c$:$265$:$void (struct diff_options o)
diffcore_pickaxe_grep$:$/var/www/html/src/git-master/diffcore-pickaxe.c$:$111$:$void (struct diff_options o)
pickaxe$:$/var/www/html/src/git-master/diffcore-pickaxe.c$:$18$:$void (struct diff_queue_struct q, struct diff_options o, regex_t *regexp, kwset_t kws, pickaxe_fn fn)
pickaxe_match$:$/var/www/html/src/git-master/diffcore-pickaxe.c$:$183$:$int (struct diff_filepair p, struct diff_options o, regex_t *regexp, kwset_t kws, pickaxe_fn fn)
get_textconv$:$/var/www/html/src/git-master/diff.c$:$2221$:$struct userdiff_driver (struct diff_filespec one)
fill_textconv$:$/var/www/html/src/git-master/diff.c$:$4874$:$size_t (struct userdiff_driver driver, struct diff_filespec df, char **outbuf)
notes_cache_get$:$/var/www/html/src/git-master/notes-cache.c$:$71$:$char * (struct notes_cache c, unsigned char key_sha1[20], size_t *outsize)
get_note$:$/var/www/html/src/git-master/notes.c$:$1107$:$const unsigned char * (struct notes_tree t, const unsigned char *object_sha1)
note_tree_find$:$/var/www/html/src/git-master/notes.c$:$139$:$struct leaf_node (struct notes_tree t, struct int_node tree, unsigned char n, const unsigned char *key_sha1)
run_textconv$:$/var/www/html/src/git-master/diff.c$:$4836$:$char * (const char *pgm, struct diff_filespec spec, size_t *outsize)
prepare_temp_file$:$/var/www/html/src/git-master/diff.c$:$2823$:$struct diff_tempfile (const char *name, struct diff_filespec one)
remove_tempfile$:$/var/www/html/src/git-master/diff.c$:$563$:$void (void)
notes_cache_put$:$/var/www/html/src/git-master/notes-cache.c$:$88$:$int (struct notes_cache c, unsigned char key_sha1[20], const char *data, size_t size)
write_sha1_file$:$/var/www/html/src/git-master/sha1_file.c$:$2870$:$int (const void *buf, unsigned long len, const char *type, unsigned char *returnsha1)
write_loose_object$:$/var/www/html/src/git-master/sha1_file.c$:$2800$:$int (const unsigned char *sha1, char *hdr, int hdrlen, const void *buf, unsigned long len, time_t mtime)
create_tmpfile$:$/var/www/html/src/git-master/sha1_file.c$:$2775$:$int (char *buffer, size_t bufsiz, const char *filename)
directory_size$:$/var/www/html/src/git-master/sha1_file.c$:$2760$:$inline int (const char *filename)
write_buffer$:$/var/www/html/src/git-master/sha1_file.c$:$2734$:$int (int fd, const void *buf, size_t len)
git_deflate_end_gently$:$/var/www/html/src/git-master/zlib.c$:$224$:$int (git_zstream *strm)
close_sha1_file$:$/var/www/html/src/git-master/sha1_file.c$:$2751$:$void (int fd)
utime$:$NA$:$NA$:$NA
add_note$:$/var/www/html/src/git-master/notes.c$:$1074$:$int (struct notes_tree t, const unsigned char *object_sha1, const unsigned char *note_sha1, combine_notes_fn combine_notes)
note_tree_insert$:$/var/www/html/src/git-master/notes.c$:$241$:$int (struct notes_tree t, struct int_node tree, unsigned char n, struct leaf_node entry, unsigned char type, combine_notes_fn combine_notes)
note_tree_search$:$/var/www/html/src/git-master/notes.c$:$94$:$void ** (struct notes_tree t, struct int_node tree, unsigned char *n, const unsigned char *key_sha1)
GET_PTR_TYPE$:$NA$:$NA$:$NA
CLR_PTR_TYPE$:$NA$:$NA$:$NA
SUBTREE_SHA1_PREFIXCMP$:$NA$:$NA$:$NA
load_subtree$:$/var/www/html/src/git-master/notes.c$:$410$:$void (struct notes_tree t, struct leaf_node subtree, struct int_node node, unsigned int n)
fill_tree_descriptor$:$/var/www/html/src/git-master/tree-walk.c$:$51$:$void * (struct tree_desc desc, const unsigned char *sha1)
get_sha1_hex_segment$:$/var/www/html/src/git-master/notes.c$:$342$:$int (const char *hex, unsigned int hex_len, unsigned char *sha1, unsigned int sha1_len)
combine_notes_concatenate$:$/var/www/html/src/git-master/notes.c$:$794$:$int (unsigned char *cur_sha1, const unsigned char *new_sha1)
add_non_note$:$/var/www/html/src/git-master/notes.c$:$365$:$void (struct notes_tree t, const char *path, unsigned int mode, const unsigned char *sha1)
non_note_cmp$:$/var/www/html/src/git-master/notes.c$:$360$:$int (const struct non_note *a, const struct non_note *b)
GET_NIBBLE$:$NA$:$NA$:$NA
SET_PTR_TYPE$:$NA$:$NA$:$NA
note_tree_remove$:$/var/www/html/src/git-master/notes.c$:$190$:$void (struct notes_tree t, struct int_node tree, unsigned char n, struct leaf_node entry)
note_tree_consolidate$:$/var/www/html/src/git-master/notes.c$:$159$:$int (struct int_node tree, struct int_node parent, unsigned char index)
notes_cache_write$:$/var/www/html/src/git-master/notes-cache.c$:$47$:$int (struct notes_cache c)
write_notes_tree$:$/var/www/html/src/git-master/notes.c$:$1128$:$int (struct notes_tree t, unsigned char *result)
for_each_note$:$/var/www/html/src/git-master/notes.c$:$1119$:$int (struct notes_tree t, int flags, each_note_fn fn, void *cb_data)
for_each_note_helper$:$/var/www/html/src/git-master/notes.c$:$556$:$int (struct notes_tree t, struct int_node tree, unsigned char n, unsigned char fanout, int flags, each_note_fn fn, void *cb_data)
determine_fanout$:$/var/www/html/src/git-master/notes.c$:$515$:$unsigned char (struct int_node tree, unsigned char n, unsigned char fanout)
write_each_note$:$/var/www/html/src/git-master/notes.c$:$749$:$int (const unsigned char *object_sha1, const unsigned char *note_sha1, char *note_path, void *cb_data)
write_each_non_note_until$:$/var/www/html/src/git-master/notes.c$:$729$:$int (const char *note_path, struct write_each_note_data d)
write_each_note_helper$:$/var/www/html/src/git-master/notes.c$:$687$:$int (struct tree_write_stack tws, const char *path, unsigned int mode, const unsigned char *sha1)
matches_tree_write_stack$:$/var/www/html/src/git-master/notes.c$:$634$:$inline int (struct tree_write_stack tws, const char *full_path)
tree_write_stack_finish_subtree$:$/var/www/html/src/git-master/notes.c$:$666$:$int (struct tree_write_stack tws)
write_tree_entry$:$/var/www/html/src/git-master/notes.c$:$642$:$void (struct strbuf buf, unsigned int mode, const char *path, unsigned int path_len, const unsigned char *sha1)
tree_write_stack_init_subtree$:$/var/www/html/src/git-master/notes.c$:$650$:$void (struct tree_write_stack tws, const char *path)
commit_tree$:$/var/www/html/src/git-master/commit.c$:$1336$:$int (const struct strbuf *msg, unsigned char *tree, struct commit_list parents, unsigned char *ret, const char *author, const char *sign_commit)
append_merge_tag_headers$:$/var/www/html/src/git-master/commit.c$:$1224$:$void (struct commit_list parents, struct commit_extra_header tail)
handle_signed_tag$:$/var/www/html/src/git-master/commit.c$:$1114$:$void (struct commit parent, struct commit_extra_header tail)
merge_remote_util$:$NA$:$NA$:$NA
parse_signature$:$/var/www/html/src/git-master/tag.c$:$159$:$size_t (const char *buf, unsigned long size)
commit_tree_extended$:$/var/www/html/src/git-master/commit.c$:$1465$:$int (const struct strbuf *msg, unsigned char *tree, struct commit_list parents, unsigned char *ret, const char *author, const char *sign_commit, struct commit_extra_header extra)
assert_sha1_type$:$/var/www/html/src/git-master/sha1_file.c$:$3127$:$void (const unsigned char *sha1, enum object_type expect)
is_encoding_utf8$:$/var/www/html/src/git-master/utf8.c$:$470$:$int (const char *name)
git_author_info$:$/var/www/html/src/git-master/ident.c$:$338$:$const char * (int flag)
add_extra_header$:$/var/www/html/src/git-master/commit.c$:$1234$:$void (struct strbuf buffer, struct commit_extra_header extra)
strbuf_add_lines$:$/var/www/html/src/git-master/strbuf.c$:$462$:$void (struct strbuf out, const char *prefix, const char *buf, size_t size)
add_lines$:$/var/www/html/src/git-master/strbuf.c$:$207$:$void (struct strbuf out, const char *prefix1, const char *prefix2, const char *buf, size_t size)
strbuf_complete_line$:$/var/www/html/src/git-master/strbuf.h$:$149$:$inline void (struct strbuf sb)
verify_utf8$:$/var/www/html/src/git-master/commit.c$:$1434$:$int (struct strbuf buf)
find_invalid_utf8$:$/var/www/html/src/git-master/commit.c$:$1350$:$int (const char *buf, int len)
strbuf_remove$:$/var/www/html/src/git-master/strbuf.c$:$180$:$void (struct strbuf sb, size_t pos, size_t len)
do_sign_commit$:$/var/www/html/src/git-master/commit.c$:$1037$:$int (struct strbuf buf, const char *keyid)
get_signing_key$:$/var/www/html/src/git-master/gpg-interface.c$:$29$:$const char * (void)
sign_buffer$:$/var/www/html/src/git-master/gpg-interface.c$:$42$:$int (struct strbuf buffer, struct strbuf signature, const char *signing_key)
free_commit_extra_headers$:$/var/www/html/src/git-master/commit.c$:$1325$:$void (struct commit_extra_header extra)
update_ref$:$/var/www/html/src/git-master/refs.c$:$3176$:$int (const char *action, const char *refname, const unsigned char *sha1, const unsigned char *oldval, int flags, enum action_on_err onerr)
diff_grep$:$/var/www/html/src/git-master/diffcore-pickaxe.c$:$82$:$int (mmfile_t *one, mmfile_t *two, struct diff_options o, regex_t *regexp, kwset_t kws)
regmatch$:$/var/www/html/src/git-master/grep.c$:$832$:$int (const regex_t *preg, char *line, char *eol, regmatch_t *match, int eflags)
xdi_diff_outf$:$/var/www/html/src/git-master/xdiff-interface.c$:$139$:$int (mmfile_t *mf1, mmfile_t *mf2, xdiff_emit_consume_fn fn, void *consume_callback_data, xpparam_t const *xpp, xdemitconf_t const *xecfg)
xdiff_outf$:$/var/www/html/src/git-master/xdiff-interface.c$:$73$:$int (void *priv_, mmbuffer_t *mb, int nbuf)
consume_one$:$/var/www/html/src/git-master/xdiff-interface.c$:$59$:$void (void *priv_, char *s, unsigned long size)
xdi_diff$:$/var/www/html/src/git-master/xdiff-interface.c$:$129$:$int (mmfile_t *mf1, mmfile_t *mf2, xpparam_t const *xpp, xdemitconf_t const *xecfg, xdemitcb_t *xecb)
trim_common_tail$:$/var/www/html/src/git-master/xdiff-interface.c$:$105$:$void (mmfile_t *a, mmfile_t *b, long ctx)
xdl_diff$:$NA$:$NA$:$NA
diffgrep_consume$:$/var/www/html/src/git-master/diffcore-pickaxe.c$:$61$:$void (void *priv, char *line, unsigned long len)
diffcore_pickaxe_count$:$/var/www/html/src/git-master/diffcore-pickaxe.c$:$230$:$void (struct diff_options o)
has_changes$:$/var/www/html/src/git-master/diffcore-pickaxe.c$:$174$:$int (mmfile_t *one, mmfile_t *two, struct diff_options o, regex_t *regexp, kwset_t kws)
contains$:$/var/www/html/src/git-master/diffcore-pickaxe.c$:$134$:$unsigned int (mmfile_t *mf, regex_t *regexp, kwset_t kws)
kwsexec$:$/var/www/html/src/git-master/kwset.c$:$743$:$size_t (kwset_t kws, char const *text, size_t size, struct kwsmatch kwsmatch)
bmexec$:$/var/www/html/src/git-master/kwset.c$:$495$:$size_t (kwset_t kws, char const *text, size_t size)
cwexec$:$/var/www/html/src/git-master/kwset.c$:$581$:$size_t (kwset_t kws, char const *text, size_t len, struct kwsmatch kwsmatch)
diffcore_order$:$/var/www/html/src/git-master/diffcore-order.c$:$103$:$void (const char *orderfile)
prepare_order$:$/var/www/html/src/git-master/diffcore-order.c$:$11$:$void (const char *orderfile)
match_order$:$/var/www/html/src/git-master/diffcore-order.c$:$73$:$int (const char *path)
compare_pair_order$:$/var/www/html/src/git-master/diffcore-order.c$:$93$:$int (const void *a_, const void *b_)
diff_resolve_rename_copy$:$/var/www/html/src/git-master/diff.c$:$4062$:$void (void)
DIFF_PAIR_TYPE_CHANGED$:$NA$:$NA$:$NA
DIFF_PAIR_RENAME$:$NA$:$NA$:$NA
diffcore_apply_filter$:$/var/www/html/src/git-master/diff.c$:$4527$:$void (const char *filter)
diff_tree_release_paths$:$/var/www/html/src/git-master/tree-diff.c$:$314$:$void (struct diff_options opt)
relevant_commit$:$/var/www/html/src/git-master/revision.c$:$371$:$inline int (struct commit commit)
initialise_treesame$:$/var/www/html/src/git-master/revision.c$:$522$:$struct treesame_state (struct rev_info revs, struct commit commit)
rev_compare_tree$:$/var/www/html/src/git-master/revision.c$:$455$:$int (struct rev_info revs, struct commit parent, struct commit commit)
lookup_decoration$:$/var/www/html/src/git-master/decorate.c$:$71$:$void * (struct decoration n, const struct object *obj)
still_interesting$:$/var/www/html/src/git-master/revision.c$:$933$:$int (struct commit_list src, unsigned long date, int slop)
everybody_uninteresting$:$/var/www/html/src/git-master/revision.c$:$332$:$int (struct commit_list orig)
cherry_pick_list$:$/var/www/html/src/git-master/revision.c$:$842$:$void (struct commit_list list, struct rev_info revs)
init_patch_ids$:$/var/www/html/src/git-master/patch-ids.c$:$37$:$int (struct patch_ids ids)
add_commit_patch_id$:$/var/www/html/src/git-master/patch-ids.c$:$104$:$struct patch_id (struct commit commit, struct patch_ids ids)
has_commit_patch_id$:$/var/www/html/src/git-master/patch-ids.c$:$98$:$struct patch_id (struct commit commit, struct patch_ids ids)
free_patch_ids$:$/var/www/html/src/git-master/patch-ids.c$:$46$:$int (struct patch_ids ids)
limit_left_right$:$/var/www/html/src/git-master/revision.c$:$1047$:$void (struct commit_list list, struct rev_info revs)
limit_to_ancestry$:$/var/www/html/src/git-master/revision.c$:$966$:$void (struct commit_list bottom, struct commit_list list)
update_treesame$:$/var/www/html/src/git-master/revision.c$:$585$:$unsigned (struct rev_info revs, struct commit commit)
sort_in_topological_order$:$/var/www/html/src/git-master/commit.c$:$598$:$void (struct commit_list list, enum rev_sort_order sort_order)
init_indegree_slab$:$NA$:$NA$:$NA
compare_commits_by_commit_date$:$/var/www/html/src/git-master/commit.c$:$584$:$int (const void *a_, const void *b_, void *unused)
init_author_date_slab$:$NA$:$NA$:$NA
compare_commits_by_author_date$:$/var/www/html/src/git-master/commit.c$:$568$:$int (const void *a_, const void *b_, void *cb_data)
author_date_slab_at$:$NA$:$NA$:$NA
indegree_slab_at$:$NA$:$NA$:$NA
record_author_date$:$/var/www/html/src/git-master/commit.c$:$525$:$void (struct author_date_slab author_date, struct commit commit)
split_ident_line$:$/var/www/html/src/git-master/ident.c$:$201$:$int (struct ident_split split, const char *line, int len)
prio_queue_put$:$/var/www/html/src/git-master/prio-queue.c$:$26$:$void (struct prio_queue queue, void *thing)
compare$:$NA$:$NA$:$NA
prio_queue_reverse$:$/var/www/html/src/git-master/prio-queue.c$:$5$:$void (struct prio_queue queue)
prio_queue_get$:$/var/www/html/src/git-master/prio-queue.c$:$50$:$void * (struct prio_queue queue)
clear_indegree_slab$:$NA$:$NA$:$NA
clear_prio_queue$:$/var/www/html/src/git-master/prio-queue.c$:$18$:$void (struct prio_queue queue)
clear_author_date_slab$:$NA$:$NA$:$NA
line_log_filter$:$/var/www/html/src/git-master/line-log.c$:$1252$:$int (struct rev_info rev)
process_ranges_arbitrary_commit$:$/var/www/html/src/git-master/line-log.c$:$1218$:$int (struct rev_info rev, struct commit commit)
lookup_line_range$:$/var/www/html/src/git-master/line-log.c$:$716$:$struct line_log_data (struct rev_info revs, struct commit commit)
process_ranges_ordinary_commit$:$/var/www/html/src/git-master/line-log.c$:$1139$:$int (struct rev_info rev, struct commit commit, struct line_log_data range)
queue_diffs$:$/var/www/html/src/git-master/line-log.c$:$830$:$void (struct line_log_data range, struct diff_options opt, struct diff_queue_struct queue, struct commit commit, struct commit parent)
load_tree_desc$:$/var/www/html/src/git-master/line-log.c$:$759$:$void (struct tree_desc desc, void **tree, const unsigned char *sha1)
filter_diffs_for_paths$:$/var/www/html/src/git-master/line-log.c$:$788$:$void (struct line_log_data range, int keep_deletions)
move_diff_queue$:$/var/www/html/src/git-master/line-log.c$:$780$:$void (struct diff_queue_struct dst, struct diff_queue_struct src)
process_all_files$:$/var/www/html/src/git-master/line-log.c$:$1091$:$int (struct line_log_data range_out, struct rev_info rev, struct diff_queue_struct queue, struct line_log_data range)
line_log_data_copy$:$/var/www/html/src/git-master/line-log.c$:$628$:$struct line_log_data (struct line_log_data r)
process_diff_filepair$:$/var/www/html/src/git-master/line-log.c$:$1018$:$int (struct rev_info rev, struct diff_filepair pair, struct line_log_data range, struct diff_ranges diff_out)
diff_ranges_init$:$/var/www/html/src/git-master/line-log.c$:$228$:$void (struct diff_ranges diff)
range_set_init$:$/var/www/html/src/git-master/line-log.c$:$26$:$void (struct range_set rs, size_t prealloc)
range_set_grow$:$/var/www/html/src/git-master/line-log.c$:$18$:$void (struct range_set rs, size_t extra)
collect_diff$:$/var/www/html/src/git-master/line-log.c$:$330$:$void (mmfile_t *parent, mmfile_t *target, struct diff_ranges out)
collect_diff_cb$:$/var/www/html/src/git-master/line-log.c$:$316$:$int (long start_a, long count_a, long start_b, long count_b, void *data)
range_set_append$:$/var/www/html/src/git-master/line-log.c$:$68$:$void (struct range_set rs, long a, long b)
range_set_append_unsafe$:$/var/www/html/src/git-master/line-log.c$:$59$:$void (struct range_set rs, long a, long b)
range_set_map_across_diff$:$/var/www/html/src/git-master/line-log.c$:$454$:$void (struct range_set out, struct range_set rs, struct diff_ranges diff, struct diff_ranges touched_out)
diff_ranges_filter_touched$:$/var/www/html/src/git-master/line-log.c$:$398$:$void (struct diff_ranges out, struct diff_ranges diff, struct range_set rs)
ranges_overlap$:$/var/www/html/src/git-master/line-log.c$:$388$:$int (struct range a, struct range b)
range_set_difference$:$/var/www/html/src/git-master/line-log.c$:$186$:$void (struct range_set out, struct range_set a, struct range_set b)
range_set_shift_diff$:$/var/www/html/src/git-master/line-log.c$:$427$:$void (struct range_set out, struct range_set rs, struct diff_ranges diff)
range_set_union$:$/var/www/html/src/git-master/line-log.c$:$143$:$void (struct range_set out, struct range_set a, struct range_set b)
range_set_release$:$/var/www/html/src/git-master/line-log.c$:$34$:$void (struct range_set rs)
range_set_move$:$/var/www/html/src/git-master/line-log.c$:$48$:$void (struct range_set dst, struct range_set src)
diff_ranges_release$:$/var/www/html/src/git-master/line-log.c$:$234$:$void (struct diff_ranges diff)
diff_filepair_dup$:$/var/www/html/src/git-master/line-log.c$:$1072$:$struct diff_filepair (struct diff_filepair pair)
add_line_range$:$/var/www/html/src/git-master/line-log.c$:$689$:$void (struct rev_info revs, struct commit commit, struct line_log_data range)
line_log_data_merge$:$/var/www/html/src/git-master/line-log.c$:$647$:$struct line_log_data (struct line_log_data a, struct line_log_data b)
free_line_log_data$:$/var/www/html/src/git-master/line-log.c$:$253$:$void (struct line_log_data r)
line_log_data_clear$:$/var/www/html/src/git-master/line-log.c$:$246$:$void (struct line_log_data r)
process_ranges_merge_commit$:$/var/www/html/src/git-master/line-log.c$:$1157$:$int (struct rev_info rev, struct commit commit, struct line_log_data range)
count_parents$:$/var/www/html/src/git-master/line-log.c$:$769$:$int (struct commit commit)
clear_commit_line_range$:$/var/www/html/src/git-master/line-log.c$:$706$:$void (struct rev_info revs, struct commit commit)
free_diffqueues$:$/var/www/html/src/git-master/line-log.c$:$1082$:$void (int n, struct diff_queue_struct dq)
rewrite_parents$:$/var/www/html/src/git-master/revision.c$:$2643$:$int (struct rev_info revs, struct commit commit, rewrite_parent_fn_t rewrite_parent)
remove_duplicate_parents$:$/var/www/html/src/git-master/revision.c$:$2206$:$int (struct rev_info revs, struct commit commit)
compact_treesame$:$/var/www/html/src/git-master/revision.c$:$538$:$int (struct rev_info revs, struct commit commit, unsigned nth_parent)
line_log_rewrite_one$:$/var/www/html/src/git-master/line-log.c$:$1236$:$enum rewrite_result (struct rev_info rev, struct commit pp)
simplify_merges$:$/var/www/html/src/git-master/revision.c$:$2509$:$void (struct rev_info revs)
simplify_one$:$/var/www/html/src/git-master/revision.c$:$2398$:$struct commit_list (struct rev_info revs, struct commit commit, struct commit_list tail)
locate_simplify_state$:$/var/www/html/src/git-master/revision.c$:$2239$:$struct merge_simplify_state (struct rev_info revs, struct commit commit)
set_children$:$/var/www/html/src/git-master/revision.c$:$2559$:$void (struct rev_info revs)
mark_edges_uninteresting$:$/var/www/html/src/git-master/list-objects.c$:$148$:$void (struct commit_list list, struct rev_info revs, show_edge_fn show_edge)
mark_tree_uninteresting$:$/var/www/html/src/git-master/revision.c$:$106$:$void (struct tree tree)
mark_blob_uninteresting$:$/var/www/html/src/git-master/revision.c$:$97$:$void (struct blob blob)
mark_edge_parents_uninteresting$:$/var/www/html/src/git-master/list-objects.c$:$130$:$void (struct commit commit, struct rev_info revs, show_edge_fn show_edge)
get_delta$:$/var/www/html/src/git-master/http-push.c$:$1338$:$int (struct rev_info revs, struct remote_lock lock)
get_revision$:$/var/www/html/src/git-master/revision.c$:$3020$:$struct commit (struct rev_info revs)
add_send_request$:$/var/www/html/src/git-master/http-push.c$:$664$:$int (struct object obj, struct remote_lock lock)
add_one_object$:$/var/www/html/src/git-master/http-push.c$:$1269$:$struct object_list (struct object obj, struct object_list p)
process_blob$:$/var/www/html/src/git-master/http-push.c$:$1278$:$struct object_list (struct blob blob, struct object_list p, struct name_path path, const char *name)
update_remote$:$/var/www/html/src/git-master/http-push.c$:$1384$:$int (unsigned char *sha1, struct remote_lock lock)
update_remote_info_refs$:$/var/www/html/src/git-master/http-push.c$:$1509$:$void (struct remote_lock lock)
add_remote_info_ref$:$/var/www/html/src/git-master/http-push.c$:$1459$:$void (struct remote_ls_ctx ls)
git_imap_config$:$/var/www/html/src/git-master/imap-send.c$:$1336$:$int (const char *key, const char *val, void *cb)
read_message$:$/var/www/html/src/git-master/imap-send.c$:$1264$:$int (FILE *f, struct strbuf all_msgs)
count_messages$:$/var/www/html/src/git-master/imap-send.c$:$1274$:$int (struct strbuf all_msgs)
imap_open_store$:$/var/www/html/src/git-master/imap-send.c$:$961$:$struct imap_store (struct imap_server_conf srvc)
split_msg$:$/var/www/html/src/git-master/imap-send.c$:$1303$:$int (struct strbuf all_msgs, struct strbuf msg, int *ofs)
wrap_in_html$:$/var/www/html/src/git-master/imap-send.c$:$1238$:$void (struct strbuf msg)
imap_store_msg$:$/var/www/html/src/git-master/imap-send.c$:$1214$:$int (struct imap_store ctx, struct strbuf msg)
lf_to_crlf$:$/var/www/html/src/git-master/imap-send.c$:$1182$:$void (struct strbuf msg)
imap_exec_m$:$NA$:$NA$:$NA
imap_close_store$:$/var/www/html/src/git-master/imap-send.c$:$874$:$void (struct imap_store ctx)
imap_close_server$:$/var/www/html/src/git-master/imap-send.c$:$863$:$void (struct imap_store ictx)
imap_exec$:$/var/www/html/src/git-master/imap-send.c$:$590$:$int (struct imap_store ctx, struct imap_cmd_cb cb, const char *fmt, ...)
v_issue_imap_cmd$:$/var/www/html/src/git-master/imap-send.c$:$510$:$struct imap_cmd (struct imap_store ctx, struct imap_cmd_cb cb, const char *fmt, va_list ap)
get_cmd_result$:$/var/www/html/src/git-master/imap-send.c$:$618$:$switch ( (ctx, cmdp))
socket_shutdown$:$/var/www/html/src/git-master/imap-send.c$:$383$:$void (struct imap_socket sock)
SSL_shutdown$:$NA$:$NA$:$NA
SSL_free$:$NA$:$NA$:$NA
remote_get$:$/var/www/html/src/git-master/remote.c$:$703$:$struct remote (const char *name)
parse_fetch$:$/var/www/html/src/git-master/remote-curl.c$:$714$:$void (struct strbuf buf)
fetch$:$/var/www/html/src/git-master/remote-curl.c$:$705$:$int (int nr_heads, struct ref to_fetch)
discover_refs$:$/var/www/html/src/git-master/remote-curl.c$:$182$:$struct discovery (const char *service, int for_push)
fetch_git$:$/var/www/html/src/git-master/remote-curl.c$:$650$:$int (struct discovery heads, int nr_heads, struct ref to_fetch)
packet_buf_write$:$/var/www/html/src/git-master/pkt-line.c$:$96$:$void (struct strbuf buf, const char *fmt, ...)
packet_buf_flush$:$/var/www/html/src/git-master/pkt-line.c$:$60$:$void (struct strbuf buf)
rpc_service$:$/var/www/html/src/git-master/remote-curl.c$:$556$:$int (struct rpc_state rpc, struct discovery heads)
post_rpc$:$/var/www/html/src/git-master/remote-curl.c$:$414$:$int (struct rpc_state rpc)
probe_rpc$:$/var/www/html/src/git-master/remote-curl.c$:$385$:$int (struct rpc_state rpc)
run_slot$:$/var/www/html/src/git-master/remote-curl.c$:$367$:$int (struct active_request_slot slot)
rpc_out$:$/var/www/html/src/git-master/remote-curl.c$:$312$:$size_t (void *ptr, size_t eltsize, size_t nmemb, void *buffer_)
rpc_ioctl$:$/var/www/html/src/git-master/remote-curl.c$:$336$:$curlioerr (CURL *handle, int cmd, void *clientp)
git_deflate_init_gzip$:$/var/www/html/src/git-master/zlib.c$:$186$:$void (git_zstream *strm, int level)
do_git_deflate_init$:$/var/www/html/src/git-master/zlib.c$:$171$:$void (git_zstream *strm, int level, int windowBits)
deflateInit2$:$NA$:$NA$:$NA
rpc_in$:$/var/www/html/src/git-master/remote-curl.c$:$358$:$size_t (char *ptr, size_t eltsize, size_t nmemb, void *buffer_)
fetch_dumb$:$/var/www/html/src/git-master/remote-curl.c$:$623$:$int (int nr_heads, struct ref to_fetch)
free_refs$:$/var/www/html/src/git-master/remote.c$:$924$:$void (struct ref ref)
free_ref$:$/var/www/html/src/git-master/remote.c$:$914$:$void (struct ref ref)
output_refs$:$/var/www/html/src/git-master/remote-curl.c$:$281$:$void (struct ref refs)
get_refs$:$/var/www/html/src/git-master/remote-curl.c$:$269$:$struct ref (int for_push)
parse_push$:$/var/www/html/src/git-master/remote-curl.c$:$836$:$void (struct strbuf buf)
push$:$/var/www/html/src/git-master/remote-curl.c$:$823$:$int (int nr_spec, char **specs)
push_git$:$/var/www/html/src/git-master/remote-curl.c$:$788$:$int (struct discovery heads, int nr_spec, char **specs)
argv_array_init$:$/var/www/html/src/git-master/argv-array.c$:$7$:$void (struct argv_array array)
argv_array_pushl$:$/var/www/html/src/git-master/argv-array.c$:$41$:$void (struct argv_array array, ...)
va_arg$:$NA$:$NA$:$NA
argv_array_clear$:$/var/www/html/src/git-master/argv-array.c$:$61$:$void (struct argv_array array)
push_dav$:$/var/www/html/src/git-master/remote-curl.c$:$766$:$int (int nr_spec, char **specs)
free_discovery$:$/var/www/html/src/git-master/remote-curl.c$:$144$:$void (struct discovery d)
set_option$:$/var/www/html/src/git-master/remote-curl.c$:$25$:$int (const char *name, const char *value)
do_command$:$/var/www/html/src/git-master/remote-testsvn.c$:$243$:$int (struct strbuf line)
terminate_batch$:$/var/www/html/src/git-master/remote-testsvn.c$:$45$:$void (void)
cd_to_homedir$:$/var/www/html/src/git-master/shell.c$:$56$:$void (void)
run_shell$:$/var/www/html/src/git-master/shell.c$:$65$:$void (void)
is_valid_cmd_name$:$/var/www/html/src/git-master/shell.c$:$41$:$int (const char *cmd)
make_cmd$:$/var/www/html/src/git-master/shell.c$:$47$:$char * (const char *prog)
execv$:$NA$:$NA$:$NA
note_variables$:$/var/www/html/src/git-master/sh-i18n--envsubst.c$:$302$:$void (const char *string)
string_list_init$:$/var/www/html/src/git-master/sh-i18n--envsubst.c$:$197$:$inline void (string_list_ty *slp)
find_variables$:$/var/www/html/src/git-master/sh-i18n--envsubst.c$:$124$:$void (const char *string, void (*callback) (const char *var_ptr, size_t var_len))
note_variable$:$/var/www/html/src/git-master/sh-i18n--envsubst.c$:$291$:$void (const char *var_ptr, size_t var_len)
string_list_sort$:$/var/www/html/src/git-master/sh-i18n--envsubst.c$:$234$:$inline void (string_list_ty *slp)
cmp_string$:$/var/www/html/src/git-master/sh-i18n--envsubst.c$:$224$:$int (const void *pstr1, const void *pstr2)
subst_from_stdin$:$/var/www/html/src/git-master/sh-i18n--envsubst.c$:$333$:$void (void)
do_getc$:$/var/www/html/src/git-master/sh-i18n--envsubst.c$:$311$:$int (void)
getc$:$NA$:$NA$:$NA
do_ungetc$:$/var/www/html/src/git-master/sh-i18n--envsubst.c$:$325$:$inline void (int c)
sorted_string_list_member$:$/var/www/html/src/git-master/sh-i18n--envsubst.c$:$254$:$int (const string_list_ty *slp, const char *s)
print_variables$:$/var/www/html/src/git-master/sh-i18n--envsubst.c$:$179$:$void (const char *string)
print_variable$:$/var/www/html/src/git-master/sh-i18n--envsubst.c$:$170$:$void (const char *var_ptr, size_t var_len)
timespec_arg$:$/var/www/html/src/git-master/test-chmtime.c$:$35$:$int (const char *arg, long int *set_time, int *set_eq)
TEST_CLASS$:$NA$:$NA$:$NA
show_dates$:$/var/www/html/src/git-master/test-date.c$:$8$:$void (char **argv, struct timeval now)
parse_dates$:$/var/www/html/src/git-master/test-date.c$:$20$:$void (char **argv, struct timeval now)
parse_approxidate$:$/var/www/html/src/git-master/test-date.c$:$37$:$void (char **argv, struct timeval now)
approxidate_relative$:$/var/www/html/src/git-master/date.c$:$1088$:$unsigned long (const char *date, const struct timeval *tv)
perror$:$NA$:$NA$:$NA
cache_tree$:$/var/www/html/src/git-master/cache-tree.c$:$10$:$struct cache_tree (void)
cache_tree_update$:$/var/www/html/src/git-master/cache-tree.c$:$399$:$int (struct cache_tree it, const struct cache_entry *const *cache, int entries, int flags)
verify_cache$:$/var/www/html/src/git-master/cache-tree.c$:$152$:$int (const struct cache_entry *const *cache, int entries, int flags)
update_one$:$/var/www/html/src/git-master/cache-tree.c$:$236$:$int (struct cache_tree it, const struct cache_entry *const *cache, int entries, const char *base, int baselen, int *skip_count, int flags)
find_subtree$:$/var/www/html/src/git-master/cache-tree.c$:$65$:$struct cache_tree_sub (struct cache_tree it, const char *path, int pathlen, int create)
discard_unused_subtrees$:$/var/www/html/src/git-master/cache-tree.c$:$205$:$void (struct cache_tree it)
cache_tree_free$:$/var/www/html/src/git-master/cache-tree.c$:$17$:$void (struct cache_tree it_p)
dump_cache_tree$:$/var/www/html/src/git-master/test-dump-cache-tree.c$:$17$:$int (struct cache_tree it, struct cache_tree ref, const char *pfx)
dump_one$:$/var/www/html/src/git-master/test-dump-cache-tree.c$:$6$:$void (struct cache_tree it, const char *pfx, const char *x)
cache_tree_sub$:$/var/www/html/src/git-master/cache-tree.c$:$99$:$struct cache_tree_sub (struct cache_tree it, const char *path)
buffer_init$:$NA$:$NA$:$NA
buffer_fdinit$:$NA$:$NA$:$NA
strtouint32$:$/var/www/html/src/git-master/test-line-buffer.c$:$9$:$uint32_t (const char *s)
buffer_read_line$:$NA$:$NA$:$NA
handle_line$:$/var/www/html/src/git-master/test-line-buffer.c$:$45$:$void (const char *line, struct line_buffer stdin_buf)
handle_command$:$/var/www/html/src/git-master/test-line-buffer.c$:$18$:$void (const char *command, const char *arg, struct line_buffer buf)
buffer_read_binary$:$NA$:$NA$:$NA
buffer_copy_bytes$:$NA$:$NA$:$NA
buffer_skip_bytes$:$NA$:$NA$:$NA
buffer_deinit$:$NA$:$NA$:$NA
parse_tree_indirect$:$/var/www/html/src/git-master/tree.c$:$228$:$struct tree (const unsigned char *sha1)
shift_tree$:$/var/www/html/src/git-master/match-trees.c$:$240$:$void (const unsigned char *hash1, const unsigned char *hash2, unsigned char *shifted, int depth_limit)
score_trees$:$/var/www/html/src/git-master/match-trees.c$:$76$:$int (const unsigned char *hash1, const unsigned char *hash2)
fill_tree_desc_strict$:$/var/www/html/src/git-master/match-trees.c$:$50$:$void * (struct tree_desc desc, const unsigned char *hash)
base_name_entries_compare$:$/var/www/html/src/git-master/match-trees.c$:$66$:$int (const struct name_entry *a, const struct name_entry *b)
score_missing$:$/var/www/html/src/git-master/match-trees.c$:$5$:$int (unsigned mode, const char *path)
score_differs$:$/var/www/html/src/git-master/match-trees.c$:$18$:$int (unsigned mode1, unsigned mode2, const char *path)
score_matches$:$/var/www/html/src/git-master/match-trees.c$:$31$:$int (unsigned mode1, unsigned mode2, const char *path)
match_trees$:$/var/www/html/src/git-master/match-trees.c$:$122$:$void (const unsigned char *hash1, const unsigned char *hash2, int *best_score, char **best_match, const char *base, int recurse_limit)
splice_tree$:$/var/www/html/src/git-master/match-trees.c$:$169$:$int (const unsigned char *hash1, const char *prefix, const unsigned char *hash2, unsigned char *result)
get_next$:$/var/www/html/src/git-master/test-mergesort.c$:$9$:$void * (const void *a)
set_next$:$/var/www/html/src/git-master/test-mergesort.c$:$14$:$void (void *a, void *b)
compare_strings$:$/var/www/html/src/git-master/test-mergesort.c$:$19$:$int (const void *a, const void *b)
xmkstemp$:$/var/www/html/src/git-master/wrapper.c$:$221$:$int (char *template)
mkstemp$:$NA$:$NA$:$NA
OPT_BOOL$:$NA$:$NA$:$NA
OPT_COUNTUP$:$NA$:$NA$:$NA
OPT_BIT$:$NA$:$NA$:$NA
OPT_NEGBIT$:$NA$:$NA$:$NA
OPT_GROUP$:$NA$:$NA$:$NA
OPT_SET_INT$:$NA$:$NA$:$NA
OPT_DATE$:$NA$:$NA$:$NA
OPT_CALLBACK$:$NA$:$NA$:$NA
length_callback$:$/var/www/html/src/git-master/test-parse-options.c$:$15$:$int (const struct option *opt, const char *arg, int unset)
OPT_FILENAME$:$NA$:$NA$:$NA
OPT_NOOP_NOARG$:$NA$:$NA$:$NA
OPT_SET_PTR$:$NA$:$NA$:$NA
OPT_STRING_LIST$:$NA$:$NA$:$NA
OPT_ARGUMENT$:$NA$:$NA$:$NA
OPT_NUMBER_CALLBACK$:$NA$:$NA$:$NA
number_callback$:$/var/www/html/src/git-master/test-parse-options.c$:$26$:$int (const struct option *opt, const char *arg, int unset)
OPT__ABBREV$:$NA$:$NA$:$NA
OPT__VERBOSE$:$NA$:$NA$:$NA
OPT__DRY_RUN$:$NA$:$NA$:$NA
OPT__QUIET$:$NA$:$NA$:$NA
normalize_ceiling_entry$:$/var/www/html/src/git-master/test-path-utils.c$:$9$:$int (struct string_list_item item, void *unused)
normalize_argv_string$:$/var/www/html/src/git-master/test-path-utils.c$:$31$:$void (const char **var, const char *input)
intcmp$:$/var/www/html/src/git-master/test-prio-queue.c$:$4$:$int (const void *va, const void *vb, void *data)
discard_cache$:$NA$:$NA$:$NA
run_revision_walk$:$/var/www/html/src/git-master/test-revision-walking.c$:$26$:$int (void)
print_commit$:$/var/www/html/src/git-master/test-revision-walking.c$:$16$:$void (struct commit commit)
format_commit_message$:$/var/www/html/src/git-master/pretty.c$:$1492$:$void (const struct commit *commit, const char *format, struct strbuf sb, const struct pretty_print_context *pretty_ctx)
logmsg_reencode$:$/var/www/html/src/git-master/pretty.c$:$604$:$char * (const struct commit *commit, char **commit_encoding, const char *output_encoding)
get_header$:$/var/www/html/src/git-master/pretty.c$:$545$:$char * (const struct commit *commit, const char *msg, const char *key)
same_encoding$:$/var/www/html/src/git-master/utf8.c$:$479$:$int (const char *src, const char *dst)
reencode_string$:$/var/www/html/src/git-master/utf8.h$:$34$:$inline char * (const char *in, const char *out_encoding, const char *in_encoding)
reencode_string_len$:$/var/www/html/src/git-master/utf8.c$:$559$:$char * (const char *in, int insz, const char *out_encoding, const char *in_encoding, int *outsz)
iconv_open$:$NA$:$NA$:$NA
reencode_string_iconv$:$/var/www/html/src/git-master/utf8.c$:$517$:$char * (const char *in, size_t insz, iconv_t conv, int *outsz_p)
iconv$:$NA$:$NA$:$NA
iconv_close$:$NA$:$NA$:$NA
replace_encoding_header$:$/var/www/html/src/git-master/pretty.c$:$573$:$char * (char *buf, const char *encoding)
format_commit_item$:$/var/www/html/src/git-master/pretty.c$:$1414$:$size_t (struct strbuf sb, const char *placeholder, void *context)
format_and_pad_commit$:$/var/www/html/src/git-master/pretty.c$:$1311$:$size_t (struct strbuf sb, const char *placeholder, struct format_commit_context c)
format_commit_one$:$/var/www/html/src/git-master/pretty.c$:$1079$:$size_t (struct strbuf sb, const char *placeholder, void *context)
parse_color$:$/var/www/html/src/git-master/pretty.c$:$975$:$size_t (struct strbuf sb, const char *placeholder, struct format_commit_context c)
want_color$:$/var/www/html/src/git-master/color.c$:$195$:$int (int var)
check_auto_color$:$/var/www/html/src/git-master/color.c$:$183$:$int (void)
color_parse_mem$:$/var/www/html/src/git-master/color.c$:$68$:$void (const char *value, int value_len, const char *var, char *dst)
parse_attr$:$/var/www/html/src/git-master/color.c$:$48$:$int (const char *name, int len)
rewrap_message_tail$:$/var/www/html/src/git-master/pretty.c$:$942$:$void (struct strbuf sb, struct format_commit_context c, size_t new_width, size_t new_indent1, size_t new_indent2)
strbuf_wrap$:$/var/www/html/src/git-master/pretty.c$:$929$:$void (struct strbuf sb, size_t pos, size_t width, size_t indent1, size_t indent2)
strbuf_add_wrapped_text$:$/var/www/html/src/git-master/utf8.c$:$334$:$void (struct strbuf buf, const char *text, int indent1, int indent2, int width)
strbuf_add_indented_text$:$/var/www/html/src/git-master/utf8.c$:$312$:$void (struct strbuf buf, const char *text, int indent, int indent2)
strbuf_addchars$:$/var/www/html/src/git-master/utf8.c$:$305$:$void (struct strbuf sb, int c, size_t n)
parse_padding_placeholder$:$/var/www/html/src/git-master/pretty.c$:$1013$:$size_t (struct strbuf sb, const char *placeholder, struct format_commit_context c)
diff_get_color$:$/var/www/html/src/git-master/diff.c$:$1105$:$const char * (int diff_use_color, enum color_diff ix)
add_again$:$/var/www/html/src/git-master/pretty.c$:$814$:$int (struct strbuf sb, struct chunk chunk)
strbuf_adddup$:$/var/www/html/src/git-master/strbuf.c$:$192$:$void (struct strbuf sb, size_t pos, size_t len)
find_unique_abbrev$:$/var/www/html/src/git-master/sha1_name.c$:$371$:$const char * (const unsigned char *sha1, int len)
get_revision_mark$:$/var/www/html/src/git-master/revision.c$:$3044$:$char * (const struct rev_info *revs, const struct commit *commit)
format_decorations$:$/var/www/html/src/git-master/log-tree.c$:$183$:$void (struct strbuf sb, const struct commit *commit, int use_color)
decorate_get_color$:$/var/www/html/src/git-master/log-tree.c$:$37$:$const char * (int decorate_use_color, enum decoration_type ix)
get_reflog_selector$:$/var/www/html/src/git-master/reflog-walk.c$:$257$:$void (struct strbuf sb, struct reflog_walk_info reflog_info, enum date_mode dmode, int force_date, int shorten)
get_reflog_message$:$/var/www/html/src/git-master/reflog-walk.c$:$291$:$void (struct strbuf sb, struct reflog_walk_info reflog_info)
format_reflog_person$:$/var/www/html/src/git-master/pretty.c$:$958$:$int (struct strbuf sb, char part, struct reflog_walk_info log, enum date_mode dmode)
get_reflog_ident$:$/var/www/html/src/git-master/reflog-walk.c$:$308$:$const char * (struct reflog_walk_info reflog_info)
format_person_part$:$/var/www/html/src/git-master/pretty.c$:$702$:$size_t (struct strbuf sb, char part, const char *msg, int len, enum date_mode dmode)
mailmap_name$:$/var/www/html/src/git-master/pretty.c$:$691$:$int (const char **email, size_t *email_len, const char **name, size_t *name_len)
read_mailmap$:$/var/www/html/src/git-master/mailmap.c$:$239$:$int (struct string_list map, char **repo_abbrev)
read_mailmap_file$:$/var/www/html/src/git-master/mailmap.c$:$173$:$int (struct string_list map, const char *filename, char **repo_abbrev)
read_mailmap_line$:$/var/www/html/src/git-master/mailmap.c$:$139$:$void (struct string_list map, char *buffer, char **repo_abbrev)
parse_name_and_email$:$/var/www/html/src/git-master/mailmap.c$:$110$:$char * (char *buffer, char **name, char **email, int allow_empty_email)
add_mapping$:$/var/www/html/src/git-master/mailmap.c$:$55$:$void (struct string_list map, char *new_name, char *new_email, char *old_name, char *old_email)
string_list_find_insert_index$:$/var/www/html/src/git-master/string-list.c$:$78$:$int (const struct string_list *list, const char *string, int negative_existing_index)
string_list_insert_at_index$:$/var/www/html/src/git-master/string-list.c$:$60$:$struct string_list_item (struct string_list list, int insert_at, const char *string)
debug_mm$:$/var/www/html/src/git-master/mailmap.c$:$10$:$inline void (const char *format, ...)
debug_str$:$/var/www/html/src/git-master/mailmap.c$:$11$:$inline const char * (const char *s)
read_mailmap_blob$:$/var/www/html/src/git-master/mailmap.c$:$213$:$int (struct string_list map, const char *name, char **repo_abbrev)
read_mailmap_buf$:$/var/www/html/src/git-master/mailmap.c$:$196$:$void (struct string_list map, const char *buf, unsigned long len, char **repo_abbrev)
map_user$:$/var/www/html/src/git-master/mailmap.c$:$314$:$int (struct string_list map, const char **email, size_t *emaillen, const char **name, size_t *namelen)
lookup_prefix$:$/var/www/html/src/git-master/mailmap.c$:$267$:$struct string_list_item (struct string_list map, const char *string, size_t len)
show_ident_date$:$/var/www/html/src/git-master/pretty.c$:$396$:$const char * (const struct ident_split *ident, enum date_mode mode)
check_commit_signature$:$/var/www/html/src/git-master/commit.c$:$1193$:$void (const struct commit *commit, struct signature_check sigc)
parse_signed_commit$:$/var/www/html/src/git-master/commit.c$:$1070$:$int (const unsigned char *sha1, struct strbuf payload, struct strbuf signature)
verify_signed_buffer$:$/var/www/html/src/git-master/gpg-interface.c$:$101$:$int (const char *payload, size_t payload_size, const char *signature, size_t signature_size, struct strbuf gpg_output, struct strbuf gpg_status)
git_mkstemp$:$/var/www/html/src/git-master/wrapper.c$:$244$:$int (char *path, size_t len, const char *template)
parse_gpg_output$:$/var/www/html/src/git-master/commit.c$:$1164$:$void (struct signature_check sigc)
parse_commit_header$:$/var/www/html/src/git-master/pretty.c$:$831$:$void (struct format_commit_context context)
parse_commit_message$:$/var/www/html/src/git-master/pretty.c$:$914$:$void (struct format_commit_context c)
skip_empty_lines$:$/var/www/html/src/git-master/pretty.c$:$506$:$const char * (const char *msg)
get_one_line$:$/var/www/html/src/git-master/pretty.c$:$179$:$int (const char *msg)
is_empty_line$:$/var/www/html/src/git-master/pretty.c$:$497$:$int (const char *line, int *len_p)
format_subject$:$/var/www/html/src/git-master/pretty.c$:$890$:$const char * (struct strbuf sb, const char *msg, const char *line_separator)
format_sanitized_subject$:$/var/www/html/src/git-master/pretty.c$:$862$:$void (struct strbuf sb, const char *msg)
istitlechar$:$/var/www/html/src/git-master/pretty.c$:$856$:$int (char c)
strbuf_utf8_replace$:$/var/www/html/src/git-master/utf8.c$:$424$:$void (struct strbuf sb_src, int pos, int width, const char *subst)
logmsg_free$:$/var/www/html/src/git-master/pretty.c$:$685$:$void (char *msg, const struct commit *commit)
reset_revision_walk$:$/var/www/html/src/git-master/revision.c$:$2571$:$void (void)
clear_object_flags$:$/var/www/html/src/git-master/object.c$:$355$:$void (unsigned flags)
hold_locked_index$:$/var/www/html/src/git-master/lockfile.c$:$247$:$int (struct lock_file lk, int die_on_error)
get_index_file$:$/var/www/html/src/git-master/environment.c$:$255$:$char * (void)
write_cache$:$NA$:$NA$:$NA
write_list$:$/var/www/html/src/git-master/test-string-list.c$:$18$:$void (const struct string_list *list)
parse_string_list$:$/var/www/html/src/git-master/test-string-list.c$:$10$:$void (struct string_list list, const char *arg)
prefix_cb$:$/var/www/html/src/git-master/test-string-list.c$:$38$:$int (struct string_list_item item, void *cb_data)
write_list_compact$:$/var/www/html/src/git-master/test-string-list.c$:$25$:$void (const struct string_list *list)
string_list_remove_duplicates$:$/var/www/html/src/git-master/string-list.c$:$96$:$void (struct string_list list, int free_util)
svndump_init$:$NA$:$NA$:$NA
svndump_read$:$NA$:$NA$:$NA
svndump_deinit$:$NA$:$NA$:$NA
svndump_reset$:$NA$:$NA$:$NA
apply_delta$:$/var/www/html/src/git-master/test-svn-fe.c$:$14$:$int (int argc, char *argv[])
SLIDING_VIEW_INIT$:$NA$:$NA$:$NA
svndiff0_apply$:$NA$:$NA$:$NA
perf$:$/var/www/html/src/git-master/test-wildmatch.c$:$7$:$int (int ac, char **av)
packet_trace_identity$:$/var/www/html/src/git-master/pkt-line.c$:$8$:$void (const char *prog)
is_repository_shallow$:$/var/www/html/src/git-master/shallow.c$:$30$:$int (void)
register_shallow$:$/var/www/html/src/git-master/shallow.c$:$17$:$int (const unsigned char *sha1)
register_commit_graft$:$/var/www/html/src/git-master/commit.c$:$136$:$int (struct commit_graft graft, int ignore_dups)
commit_graft_pos$:$/var/www/html/src/git-master/commit.c$:$117$:$int (const unsigned char *sha1)
upload_pack_config$:$/var/www/html/src/git-master/upload-pack.c$:$784$:$int (const char *var, const char *value, void *unused)
parse_hide_refs_config$:$/var/www/html/src/git-master/refs.c$:$3323$:$int (const char *var, const char *value, const char *section)
upload_pack$:$/var/www/html/src/git-master/upload-pack.c$:$763$:$void (void)
reset_timeout$:$/var/www/html/src/git-master/upload-pack.c$:$50$:$void (void)
head_ref_namespaced$:$/var/www/html/src/git-master/refs.c$:$1815$:$int (each_ref_fn fn, void *cb_data)
get_git_namespace$:$/var/www/html/src/git-master/environment.c$:$171$:$const char * (void)
send_ref$:$/var/www/html/src/git-master/upload-pack.c$:$737$:$int (const char *refname, const unsigned char *sha1, int flag, void *cb_data)
strip_namespace$:$/var/www/html/src/git-master/environment.c$:$178$:$const char * (const char *namespaced_ref)
mark_our_ref$:$/var/www/html/src/git-master/upload-pack.c$:$723$:$int (const char *refname, const unsigned char *sha1, int flag, void *cb_data)
ref_is_hidden$:$/var/www/html/src/git-master/refs.c$:$3347$:$int (const char *refname)
git_user_agent_sanitized$:$/var/www/html/src/git-master/version.c$:$20$:$const char * (void)
peel_ref$:$/var/www/html/src/git-master/refs.c$:$1581$:$int (const char *refname, unsigned char *sha1)
peel_entry$:$/var/www/html/src/git-master/refs.c$:$1557$:$enum peel_status (struct ref_entry entry, int repeel)
peel_object$:$/var/www/html/src/git-master/refs.c$:$1524$:$enum peel_status (const unsigned char *name, unsigned char *sha1)
for_each_namespaced_ref$:$/var/www/html/src/git-master/refs.c$:$1830$:$int (each_ref_fn fn, void *cb_data)
packet_flush$:$/var/www/html/src/git-master/pkt-line.c$:$54$:$void (int fd)
receive_needs$:$/var/www/html/src/git-master/upload-pack.c$:$572$:$void (void)
packet_read_line$:$/var/www/html/src/git-master/pkt-line.c$:$207$:$char * (int fd, int *len_p)
packet_read_line_generic$:$/var/www/html/src/git-master/pkt-line.c$:$195$:$char * (int fd, char **src, size_t *src_len, int *dst_len)
add_object_array$:$/var/www/html/src/git-master/object.c$:$267$:$void (struct object obj, const char *name, struct object_array array)
parse_feature_request$:$/var/www/html/src/git-master/connect.c$:$156$:$int (const char *feature_list, const char *feature)
parse_feature_value$:$/var/www/html/src/git-master/connect.c$:$119$:$const char * (const char *feature_list, const char *feature, int *lenp)
is_our_ref$:$/var/www/html/src/git-master/upload-pack.c$:$481$:$int (struct object o)
check_non_tip$:$/var/www/html/src/git-master/upload-pack.c$:$487$:$void (void)
get_max_object_index$:$/var/www/html/src/git-master/object.c$:$11$:$unsigned int (void)
get_indexed_object$:$/var/www/html/src/git-master/object.c$:$16$:$struct object (unsigned int idx)
get_shallow_commits$:$/var/www/html/src/git-master/shallow.c$:$64$:$struct commit_list (struct object_array heads, int depth, int shallow_flag, int not_shallow_flag)
unregister_shallow$:$/var/www/html/src/git-master/commit.c$:$247$:$int (const unsigned char *sha1)
get_common_commits$:$/var/www/html/src/git-master/upload-pack.c$:$409$:$int (void)
ok_to_give_up$:$/var/www/html/src/git-master/upload-pack.c$:$381$:$int (void)
reachable$:$/var/www/html/src/git-master/upload-pack.c$:$347$:$int (struct commit want)
got_sha1$:$/var/www/html/src/git-master/upload-pack.c$:$313$:$int (char *hex, unsigned char *sha1)
create_pack_file$:$/var/www/html/src/git-master/upload-pack.c$:$134$:$void (void)
do_rev_list$:$/var/www/html/src/git-master/upload-pack.c$:$96$:$int (int in, int out, void *user_data)
show_edge$:$/var/www/html/src/git-master/upload-pack.c$:$91$:$void (struct commit commit)
traverse_commit_list$:$/var/www/html/src/git-master/list-objects.c$:$168$:$void (struct rev_info revs, show_commit_fn show_commit, show_object_fn show_object, void *data)
add_pending_tree$:$/var/www/html/src/git-master/list-objects.c$:$163$:$void (struct rev_info revs, struct tree tree)
process_gitlink$:$/var/www/html/src/git-master/list-objects.c$:$52$:$void (struct rev_info revs, const unsigned char *sha1, show_object_fn show, struct name_path path, const char *name, void *cb_data)
show_commit$:$/var/www/html/src/git-master/upload-pack.c$:$72$:$void (struct commit commit, void *data)
show_object$:$/var/www/html/src/git-master/upload-pack.c$:$84$:$void (struct object obj, const struct name_path *path, const char *component, void *cb_data)
show_object_with_name$:$/var/www/html/src/git-master/revision.c$:$74$:$void (FILE *out, struct object obj, const struct name_path *path, const char *component)
show_path_truncated$:$/var/www/html/src/git-master/revision.c$:$57$:$int (FILE *out, const struct name_path *path)
show_path_component_truncated$:$/var/www/html/src/git-master/revision.c$:$45$:$int (FILE *out, const char *name, int len)
send_client_data$:$/var/www/html/src/git-master/upload-pack.c$:$55$:$ssize_t (int fd, const char *data, ssize_t sz)
send_sideband$:$/var/www/html/src/git-master/sideband.c$:$127$:$ssize_t (int fd, int band, const char *data, ssize_t sz, int packet_max)
